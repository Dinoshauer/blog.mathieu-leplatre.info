<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mathieu Leplatre</title><link>http://blog.mathieu-leplatre.info/</link><description></description><atom:link href="http://blog.mathieu-leplatre.info/feeds/mathieu-leplatre.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 26 Dec 2014 14:10:00 +0100</lastBuildDate><item><title>Big life changes</title><link>http://blog.mathieu-leplatre.info/big-life-changes.html</link><description>&lt;p&gt;So far I haven't written anything truely personal on this blog, but I was
asked a lot of questions recently, and thought the answers might be worth a post :)&lt;/p&gt;
&lt;p&gt;First of all, &lt;strong&gt;thank you very much all of you&lt;/strong&gt; for the massive amount of
&lt;a class="reference external" href="https://twitter.com/leplatrem/status/542993732367556608"&gt;positive&lt;/a&gt; &lt;a class="reference external" href="https://www.linkedin.com/pulse/activities/mathieu-leplatre%2B0_1DkGqDxItMdaF_sJjg5h8J?trk=mp-reader-h"&gt;feedback&lt;/a&gt;
regarding my new position! Being taken on in the Cloud Services team at Mozilla is definitely very exciting!&lt;/p&gt;
&lt;p&gt;But that is not the only upcoming change: we moved from Toulouse to Barcelona!
Combining several big life changes in a very short period can be stimulating, but
it's undoubtedly anxiety producing!&lt;/p&gt;
&lt;div class="section" id="about-to-change"&gt;
&lt;h2&gt;About to change&lt;/h2&gt;
&lt;div class="section" id="where-i-live"&gt;
&lt;h3&gt;Where I live...&lt;/h3&gt;
&lt;p&gt;I arrived in Toulouse 10 years ago, but feel like it was yesterday. Even
though it was not continuous because I lived in Middle-East and South America meanwhile,
Toulouse became my world, with close friends and a lot of memories.&lt;/p&gt;
&lt;p&gt;Barcelona is the hometown of my partner, and the kids already speak Catalan.&lt;/p&gt;
&lt;p&gt;I believe I am prepared for this, ready to forget about many little details,
like french bakeries and fresh tap water, but I can already forsee many positive
aspects of living in a sunny coastal metropolis :)&lt;/p&gt;
&lt;img alt="by MorBCN" src="/images/barcelona.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="who-i-work-for"&gt;
&lt;h3&gt;Who I work for...&lt;/h3&gt;
&lt;p&gt;More than 4 years ago, I left Météo France to join &lt;a class="reference external" href="http://makina-corpus.com"&gt;Makina Corpus&lt;/a&gt;,
a small company dedicated to Free and Open Source Software.&lt;/p&gt;
&lt;p&gt;As a developer, it feels like I was born there! I discovered the interactions
with communities, the art and subtleties of maintening software in the open.&lt;/p&gt;
&lt;p&gt;I could really take advantage of the freedom we had within the teams. The atmosphere
was geeky and acquisition of knowledge was permanent! Being professional, about
code quality, method, approach and taste for sharing, all comes from there.&lt;/p&gt;
&lt;p&gt;It was hence hard to leave and tear that apart, since I certainly could have worked remotely from Barcelona. On top of that, &lt;a class="reference external" href="http://geotrek.fr"&gt;the main product&lt;/a&gt; I was working on is
truely becoming a reference.&lt;/p&gt;
&lt;p&gt;But the opportunity to join Mozilla represents a true aknowledgement and progression
in the world of Open Source that one can't let pass by :) &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-i-work"&gt;
&lt;h3&gt;How I work...&lt;/h3&gt;
&lt;p&gt;Mozilla has no offices in Barcelona yet, so I will be working remotely from
a coworking space. Working at home is not my cup of tea: I'm addicted to cycling in
the morning and self-discipline isn't one of my strong points anyway.&lt;/p&gt;
&lt;p&gt;There are many (many) coworking spaces, and I was told there's a few other Mozillians
down there... &lt;em&gt;to be continued&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The Cloud Services team is spread around the world, and interacting with people
on several timezones (from San Francisco to Melbourne) will be completely new to me!
This represents a couple of challenges, but I feel confident since the interactions
are mainly focused on software, with the usual tools like IRC, Trello, Github or Bugzilla.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-i-build"&gt;
&lt;h3&gt;What I build...&lt;/h3&gt;
&lt;p&gt;At Meteo-France or Makina Corpus, the fields of application were almost always
very specific, and the number of simultaneous users was generally low. Most of
the time, the challenges were about delivering some complex features, in a
rather short period.&lt;/p&gt;
&lt;p&gt;At Mozilla, scale and performance is the difficult task. I was used to take advantage
of cache and optimizations techniques to handle long complex CPU-consuming processes,
but now I will have to learn how to handle millions of small simple requests.&lt;/p&gt;
&lt;p&gt;Likewise, authentication, cryptography and security aspects have never been crucial in my past
experiences. But when you join an organization whose objective is to build solutions
for a sustainable Open Web, data privacy is the key and nothing should be missed!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sweep-curiosity-away"&gt;
&lt;h2&gt;Sweep curiosity away&lt;/h2&gt;
&lt;p&gt;This part is a tentative to answer most questions I received so far :)&lt;/p&gt;
&lt;img alt="" src="/images/firefox-wear-pride.jpg" /&gt;
&lt;div class="section" id="what-was-the-recruiting-process"&gt;
&lt;h3&gt;What was the recruiting process ?&lt;/h3&gt;
&lt;p&gt;For almost two years, we have been hacking on &lt;a class="reference external" href="http://daybed.readthedocs.org"&gt;Daybed&lt;/a&gt; with
Alexis and Remy, two members of the Cloud services team. We met several times,
at various Python or Django conferences, and we let us understand that if
a position would be available at Mozilla, we would be mutually delighted to work together!&lt;/p&gt;
&lt;p&gt;At the end of the summer, we discussed it again, and the official recruitment
process started! After several interviews, I received a proposition :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="oh-so-will-you-work-on-the-browser"&gt;
&lt;h3&gt;Oh, so will you work on the browser ?&lt;/h3&gt;
&lt;p&gt;Yes and no!&lt;/p&gt;
&lt;p&gt;Yes, because most of the services deployed by the Cloud services team
provide features to the Firefox browser (e.g. &lt;em&gt;Firefox Sync&lt;/em&gt;, &lt;em&gt;Firefox Hello&lt;/em&gt;, ...).&lt;/p&gt;
&lt;p&gt;No, because I'm not likely to hack the C++ codebase of Firefox/Gecko, even though I
could and would if it was necessary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-will-do-in-the-cloud-services-team"&gt;
&lt;h3&gt;What will do in the Cloud services team ?&lt;/h3&gt;
&lt;p&gt;The team is in charge of various Open Source applications and libraries.&lt;/p&gt;
&lt;p&gt;We basically build Web APIs that are used within Mozilla products. For the most famous:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sync&lt;/li&gt;
&lt;li&gt;Firefox Accounts&lt;/li&gt;
&lt;li&gt;Location service&lt;/li&gt;
&lt;li&gt;Marketplace&lt;/li&gt;
&lt;li&gt;... &lt;a class="reference external" href="https://wiki.mozilla.org/CloudServices"&gt;and more&lt;/a&gt; !&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Personnaly, I will participate at the maintenance of Firefox Hello services,
and start some new projects in regards to remote data storage, like bringing cloud features
to the &lt;a class="reference external" href="https://support.mozilla.org/en-US/kb/how-to-use-reader-mode"&gt;reader mode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Indirectly, I will of course bring some energy to the several underlying projects,
such as &lt;a class="reference external" href="http://cornice.readthedocs.org"&gt;Cornice&lt;/a&gt; or &lt;a class="reference external" href="http://circus.readthedocs.org"&gt;Circus&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-does-mozilla-generate-revenue-to-pay-you"&gt;
&lt;h3&gt;How does Mozilla generate revenue to pay you ?&lt;/h3&gt;
&lt;p&gt;There are several entities: the Mozilla Project, founded in 1998 to resurrect
Netscape; the Mozilla Foundation, a non-profit organization founded
in 2003, and the Mozilla Corporation, a subsidiary founded in 2005, that handles
the goals of the former.&lt;/p&gt;
&lt;p&gt;Basically, I am an employee of the Mozilla Corporation, which &lt;a class="reference external" href="https://www.mozilla.org/en-US/foundation/annualreport/2013/faq/"&gt;earns money from the search feature in Firefox&lt;/a&gt;, thinly
augmented with donations and grants.&lt;/p&gt;
&lt;p&gt;The key is how the money is spent, and this is what makes the Mozilla Corporation &lt;strong&gt;unique&lt;/strong&gt;.
Just read the &lt;a class="reference external" href="https://www.mozilla.org/en-US/mission/"&gt;Mozilla Manifesto&lt;/a&gt;: there is no other company in the world whose aim is to maintain the Web as a universal resource for the whole humanity!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="will-you-still-use-chromium"&gt;
&lt;h3&gt;Will you still use Chromium ?&lt;/h3&gt;
&lt;p&gt;I have been using Firefox since the 0.8 version, in early 2004. Before that I wasn't
particularly attached to any browser on the market, even if Netscape and Mozilla
were the ones I used most extensively at the University. From that date, I
installed hundreds of Firefox, in many places of the world :)&lt;/p&gt;
&lt;img alt="" src="/images/firefox-qatar-2006.jpg" /&gt;
&lt;p&gt;I remember that I started to use Chromium to get the web version of Tweetdeck, in 2011.
A few months later I was working on a JavaScript project with offline capabilities,
bound to WebSQL, thus not supported by Firefox. Chromium hadn't become my main browser yet.
The next year, we started a cartography application with huge vectorial datasets.
Chromium was like ten times faster at rendering massive amounts of SVG. And with time,
I became addicted to the Chrome dev tools, from profiling to inspecting pseudo-elements.
Firefox was not my main browser anymore.&lt;/p&gt;
&lt;p&gt;I've started to use it back for daily stuff a few months ago, to decontaminate
myself before the big day :) And I must admit that I like it so far!
The developper tools have improved greatly, and it does not feel sluggish at all!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-does-this-mean-for-daybed"&gt;
&lt;h3&gt;What does this mean for Daybed ?&lt;/h3&gt;
&lt;p&gt;Most Daybed contributors are now working together in the same team, and this is
very exciting! Whether Daybed will become a true Mozilla project or not is totally
unclear.&lt;/p&gt;
&lt;p&gt;But it does not really matter, since the most important thing is the experience we've built
together as a team on this project!&lt;/p&gt;
&lt;p&gt;Daybed is still like a lab, where we can experiment stuff and build our vision of
remote data storage.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Stay tuned!&lt;/em&gt;&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Hey come on! Founders of pip, virtualenv, Pylons, circus, pelican, ... are my new team mates!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 26 Dec 2014 14:10:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-12-26:big-life-changes.html</guid><category>life</category><category>mozilla</category></item><item><title>Use Docker to ease database schema migrations</title><link>http://blog.mathieu-leplatre.info/use-docker-to-ease-database-schema-migrations.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.docker.com/"&gt;Docker&lt;/a&gt; is very versatile, and can fulfill many (&lt;em&gt;many&lt;/em&gt;) different
use-cases. You've probably heard of it to put applications in production.&lt;/p&gt;
&lt;p&gt;Even though I wrote quite a few &lt;em&gt;Dockerfiles&lt;/em&gt; to package and ship Web apps,
what has convinced me most is running database backends during development :)&lt;/p&gt;
&lt;p&gt;For example, when you work with relational databases, and develop features in different
branches, it can be very painful to reset your divergent schemas each time you switch branch.
(&lt;em&gt;like with Django South, or 1.7&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Likewise, if you want to replay data imports, migrations, on different database schemas,
or with various PostgreSQL versions etc.&lt;/p&gt;
&lt;p&gt;In this article, I will show how to use the &lt;tt class="docutils literal"&gt;commit&lt;/tt&gt; feature of &lt;em&gt;Docker&lt;/em&gt; to
solve these issues.&lt;/p&gt;
&lt;div class="section" id="run-postgresql-in-docker"&gt;
&lt;h2&gt;Run PostgreSQL in Docker&lt;/h2&gt;
&lt;p&gt;First, you should choose an image in the &lt;a class="reference external" href="https://registry.hub.docker.com/"&gt;Docker index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you've chosen the one that fits your needs, pull an image is as easy as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo docker pull helmi03/docker-postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can run it as a deamon, on &lt;tt class="docutils literal"&gt;localhost:5432&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo docker run -d -p 5432:5432 helmi03/docker-postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Congratulations, you have a PostGIS container running. Log-in as superuser with &lt;em&gt;docker/docker&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can see its identifier with &lt;tt class="docutils literal"&gt;sudo docker ps&lt;/tt&gt;, and stop it using &lt;tt class="docutils literal"&gt;sudo docker stop &amp;lt;ID&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="commit"&gt;
&lt;h2&gt;Commit&lt;/h2&gt;
&lt;p&gt;The killer feature of &lt;em&gt;Docker&lt;/em&gt; is its incremental filesystem, which allows to
tag and commit the states of containers.&lt;/p&gt;
&lt;p&gt;For example, once you've created an empty database in your container, you will
save its state :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo docker commit &amp;lt;ID&amp;gt; postgis-empty
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, for example, you will initialize your database tables for one of your applications,
create users, etc. You commit !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo docker commit &amp;lt;ID&amp;gt; geotrek-0.28-empty
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loaded data into the database ? Commit !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo docker commit &amp;lt;ID&amp;gt; geotrek-0.28-demo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, that you've performed a series of commits, you can stop and re-run the container
at a previous state! &lt;em&gt;Docker&lt;/em&gt; is the git of virtual machines!&lt;/p&gt;
&lt;p&gt;See the list of your tags with &lt;tt class="docutils literal"&gt;sudo docker images&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo docker images
REPOSITORY                    TAG        IMAGE ID        CREATED        VIRTUAL SIZE
geotrek-0.28-demo             latest     48f51d78273a    &lt;span class="m"&gt;2&lt;/span&gt; weeks ago    1.236 GB
geotrek-0.28-empty            latest     3985183cd01a    &lt;span class="m"&gt;4&lt;/span&gt; weeks ago    1.208 GB
postgis-empty                 latest     24ec864dc058    &lt;span class="m"&gt;4&lt;/span&gt; months ago   844.4 MB
helmi03/docker-postgis        latest     f62d8f0fb8af    &lt;span class="m"&gt;9&lt;/span&gt; months ago   746.2 MB
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="checkout"&gt;
&lt;h2&gt;Checkout&lt;/h2&gt;
&lt;p&gt;Checkout a previous state is very simple, it's like the first time you started
the image from Docker index, except that you now specify the name of your tag!&lt;/p&gt;
&lt;p&gt;First, stop the current instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo docker ps
CONTAINER ID        IMAGE                      COMMAND       CREATED       STATUS      PORTS
7e1e44ce36d8        geotrek-0.28-demo:latest   &lt;span class="s2"&gt;&amp;quot;/start.sh&amp;quot;&lt;/span&gt;   &lt;span class="m"&gt;6&lt;/span&gt; hours ago   Up &lt;span class="m"&gt;6&lt;/span&gt; hours  0.0.0.0:5432-&amp;gt;5432/tcp

&lt;span class="nv"&gt;$ &lt;/span&gt;sudo docker stop 7e1e44ce36d8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Re-run at a previous state:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo docker run -d -p 5432:5432 postgis-empty
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will quickly figure out that you can:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Run different versions of your containers (or PostgreSQL servers) on different ports&lt;/li&gt;
&lt;li&gt;Restore the state of your database for your &lt;em&gt;master&lt;/em&gt; branch at one fell swoop!&lt;/li&gt;
&lt;li&gt;Replay migrations scripts&lt;/li&gt;
&lt;li&gt;Run your application on customer database with no configuration change&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;Have the same approach with &lt;em&gt;CouchDB&lt;/em&gt;, &lt;em&gt;Redis&lt;/em&gt;, &lt;em&gt;ElasticSearch&lt;/em&gt;, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be honest, it's like git, it changed my way of working and I can't go
without it anymore...&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 06 Nov 2014 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-11-06:use-docker-to-ease-database-schema-migrations.html</guid><category>django</category><category>git</category><category>tips</category><category>docker</category></item><item><title>Good practices for Open Source projects</title><link>http://blog.mathieu-leplatre.info/good-practices-for-open-source-projects.html</link><description>&lt;p&gt;In this article, I gathered some good practices for open source projects.&lt;/p&gt;
&lt;p&gt;I made my best to keep it short and not too verbose. If you want to discuss,
contribute or enhance this article, &lt;a class="reference external" href="https://github.com/leplatrem/blog.mathieu-leplatre.info/blob/master/content/Dev/opensource_project_good_practices.rst"&gt;simply use Github&lt;/a&gt; !&lt;/p&gt;
&lt;div class="section" id="documentation"&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A README file is the bare minimum&lt;/li&gt;
&lt;li&gt;More documentation content is to be stored in a &lt;tt class="docutils literal"&gt;docs/&lt;/tt&gt; folder&lt;/li&gt;
&lt;li&gt;Use the fabulous &lt;a class="reference external" href="http://rtfd.org"&gt;Read the Docs&lt;/a&gt; service&lt;/li&gt;
&lt;li&gt;Mention the license and copyright holder&lt;/li&gt;
&lt;li&gt;Explain &lt;strong&gt;why&lt;/strong&gt; this project was created&lt;/li&gt;
&lt;li&gt;Mention existing related projects&lt;/li&gt;
&lt;li&gt;How to &lt;strong&gt;install&lt;/strong&gt; and &lt;strong&gt;use&lt;/strong&gt; it ?&lt;/li&gt;
&lt;li&gt;Frequently asked questions (&lt;em&gt;time saver&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Link to the list of contributors&lt;/li&gt;
&lt;li&gt;Provide details about design and architecture&lt;/li&gt;
&lt;li&gt;Give instructions to developers on how to contribute&lt;/li&gt;
&lt;li&gt;Mention what you expect from contributors (&lt;em&gt;Definition-of-Done, checklist,
conventions...&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h2&gt;Source code&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use &lt;strong&gt;English&lt;/strong&gt; everywhere&lt;/li&gt;
&lt;li&gt;Use a decentralized versioning system (&lt;em&gt;Git&lt;/em&gt;, &lt;em&gt;mercurial&lt;/em&gt;, ...)&lt;/li&gt;
&lt;li&gt;Unit test your code. &lt;em&gt;Software without tests is broken by design&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Setup continuous integration (with &lt;a class="reference external" href="http://travis-ci.org"&gt;TravisCI&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Follow the programming language conventions (&lt;a class="reference external" href="https://flake8.readthedocs.org"&gt;PEP8&lt;/a&gt;, &lt;a class="reference external" href="http://www.jslint.com"&gt;JSLint&lt;/a&gt;, ...)&lt;/li&gt;
&lt;li&gt;Follow the framework conventions, and list explicitly the infringements you
decided to make in the documentation&lt;/li&gt;
&lt;li&gt;Be a professional coder, by following &lt;a class="reference external" href="http://www.amazon.com/The-Clean-Coder-Professional-Programmers/dp/0137081073"&gt;Uncle Bob recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use a translation system, like &lt;em&gt;gettext&lt;/em&gt;, and keep English as the default language&lt;/li&gt;
&lt;li&gt;Enable collaborative translation of your app with &lt;a class="reference external" href="https://www.transifex.com"&gt;Transifex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Provide simple commands to install or run tests (in a &lt;em&gt;Makefile&lt;/em&gt; for example)&lt;/li&gt;
&lt;li&gt;Test your project features (&lt;em&gt;functional tests&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Make sure the tests self-describe your project specifications&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="releases"&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use semantic versionning (&lt;em&gt;main version, features change, bug fixes&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Keep a list of changes by version (&lt;em&gt;Changelog&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Follow some workflow for your changelog (Include it in docs, update it in the merge commit of pull-requests, &lt;a class="reference external" href="http://tech.novapost.fr/changelog-howto-en.html"&gt;read more recommendations&lt;/a&gt;...)&lt;/li&gt;
&lt;li&gt;Create a tag for each release (&lt;tt class="docutils literal"&gt;vX.Y.Z&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Create a branch for each version (&lt;a class="reference external" href="http://fle.github.io/an-efficient-git-workflow-for-midlong-term-projects.html"&gt;recommended workflow&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Publish your release (&lt;em&gt;backup copy&lt;/em&gt;) in a repository (&lt;a class="reference external" href="https://pypi.python.org"&gt;PyPi&lt;/a&gt;, &lt;a class="reference external" href="https://www.npmjs.org"&gt;NPM&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Automate your release process (&lt;em&gt;Makefile&lt;/em&gt;, &lt;a class="reference external" href="http://zestreleaser.readthedocs.org"&gt;Zest releaser&lt;/a&gt;, &lt;a class="reference external" href="https://www.npmjs.org"&gt;npm&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Release often, release early&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Communicate about new versions (&lt;em&gt;tweet&lt;/em&gt;, &lt;a class="reference external" href="https://www.openhub.net"&gt;OpenHub&lt;/a&gt;, &lt;a class="reference external" href="http://freecode.com"&gt;Freecode&lt;/a&gt;, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="community"&gt;
&lt;h2&gt;Community&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Make sure users can interact somewhere about your project (&lt;a class="reference external" href="https://www.uservoice.com"&gt;UserVoice&lt;/a&gt;, &lt;em&gt;Google groups&lt;/em&gt;, ...)&lt;/li&gt;
&lt;li&gt;Setup alerts on &lt;a class="reference external" href="http://stackoverflow.com"&gt;Stackoverflow&lt;/a&gt; to help users and promote your project&lt;/li&gt;
&lt;li&gt;Make your best to find at least one valuable contributor, and give him
permissions on the repository&lt;/li&gt;
&lt;li&gt;Be clear about the project &lt;em&gt;functional perimeter&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Reject every addition of feature that introduces complexity or twists the project
main use cases&lt;/li&gt;
&lt;li&gt;Look for a successor as soon as the motivation goes down&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;History of commits is as valuable as comments in the source code&lt;/li&gt;
&lt;li&gt;Mention the ticket number in the commit messages (e.g. &lt;tt class="docutils literal"&gt;Update specs (ref #123)&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Respect the commits messages formatting of your community (e.g. Drupal's prefixes like &lt;tt class="docutils literal"&gt;CHG&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;DOC&lt;/tt&gt;...)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="workflow"&gt;
&lt;h3&gt;Workflow&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Keep the &lt;em&gt;master&lt;/em&gt; branch stable&lt;/li&gt;
&lt;li&gt;Create a dedicated branch with an explicit name for each feature (e.g. &lt;tt class="docutils literal"&gt;187_add_drop_down_menu&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Use pull-requests&lt;/li&gt;
&lt;li&gt;Even if you are the owner, and alone in your project, use pull-requests (&lt;em&gt;allows code review, triggers integration tests, history is clearer, ...&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Ideally, who merges the pull-request is not its author&lt;/li&gt;
&lt;li&gt;Ideally merge branches with the no fast-forward option (&lt;tt class="docutils literal"&gt;git merge &lt;span class="pre"&gt;--no-ff&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Create a &lt;em&gt;develop&lt;/em&gt; branch in case of major refactoring, or follow a proper &lt;em&gt;Git workflow&lt;/em&gt;
to ease merging&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="github"&gt;
&lt;h2&gt;Github&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use Github&lt;/li&gt;
&lt;li&gt;Use Github issues (&lt;em&gt;as much as you can, for everything&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Even if you are alone, use Github issues as a TODO list&lt;/li&gt;
&lt;li&gt;Create some standard labels (&lt;em&gt;help-needed&lt;/em&gt;, &lt;em&gt;docs&lt;/em&gt;, &lt;em&gt;duplicate&lt;/em&gt; ...)&lt;/li&gt;
&lt;li&gt;Use the fantastic &lt;a class="reference external" href="https://github.com/blog/1375%0A-task-lists-in-gfm-issues-pulls-comments"&gt;checklists&lt;/a&gt; feature in issues and pull-requests descriptions&lt;/li&gt;
&lt;li&gt;Take advantage of the milestones, for the next version, or for a general roadmap (e.g. &lt;em&gt;Soon&lt;/em&gt;, &lt;em&gt;Later&lt;/em&gt;, &lt;em&gt;Final 1.0&lt;/em&gt;, ...)&lt;/li&gt;
&lt;li&gt;Categorize the labels, renaming them with a convention (e.g. &lt;em&gt;priority: low&lt;/em&gt;, &lt;em&gt;priority: high&lt;/em&gt;, ...)&lt;/li&gt;
&lt;li&gt;Copy the changelog parts into the dedicated releases page&lt;/li&gt;
&lt;li&gt;Use the &lt;a class="reference external" href="https://github.com/blog/1184-contributing-guidelines"&gt;contributing&lt;/a&gt; feature&lt;/li&gt;
&lt;li&gt;Use the &lt;a class="reference external" href="https://pages.github.com"&gt;gh-pages&lt;/a&gt; feature to demo your project&lt;/li&gt;
&lt;li&gt;Configure the main branch in the settings&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 19 Aug 2014 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-08-19:good-practices-for-open-source-projects.html</guid><category>opensource</category><category>github</category><category>git</category></item><item><title>Edit Django geometries fields with Leaflet</title><link>http://blog.mathieu-leplatre.info/edit-django-geometries-fields-with-leaflet.html</link><description>&lt;p&gt;After the &lt;a class="reference external" href="http://blog.mathieu-leplatre.info/geodjango-maps-with-leaflet.html"&gt;previous article&lt;/a&gt;
regarding Django, Leaflet and GeoJSON, I wanted to highlight
the simplicity of GeoDjango geometries creation and edition with &lt;a class="reference external" href="https://github.com/makinacorpus/django-leaflet"&gt;django-leaflet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It relies on &lt;a class="reference external" href="https://github.com/Leaflet/Leaflet.draw"&gt;Leaflet.draw&lt;/a&gt; for user interactions.&lt;/p&gt;
&lt;img alt="" src="/images/leaflet-form-widget.png" /&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;note:&lt;/th&gt;&lt;td class="field-body"&gt;Until recently, it was restricted to Django 1.6+, but &lt;a class="reference external" href="https://github.com/makinacorpus/django-leaflet/pull/63"&gt;Gaël contributed&lt;/a&gt;
a backport that allows Django 1.4.2+ users to have them too !&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="in-django-adminsite"&gt;
&lt;h2&gt;In Django Adminsite&lt;/h2&gt;
&lt;div class="section" id="given-a-geodjango-model-as-usual"&gt;
&lt;h3&gt;Given a GeoDjango model as usual&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.gis.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MushroomSpot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PolygonField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GeoManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__unicode__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="register-using-leaflet-geoadmin"&gt;
&lt;h3&gt;Register using Leaflet GeoAdmin&lt;/h3&gt;
&lt;p&gt;It's as simple as :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;leaflet.admin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LeafletGeoAdmin&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MushroomSpot&lt;/span&gt;


&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MushroomSpot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LeafletGeoAdmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="in-forms-views"&gt;
&lt;h2&gt;In forms views&lt;/h2&gt;
&lt;div class="section" id="edition-view-usign-class-based-view"&gt;
&lt;h3&gt;Edition view usign Class-Based View&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UpdateView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;leaflet.forms.widgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LeafletWidget&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MushroomSpot&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MushroomSpotForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MushroomSpot&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;geom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;geom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;LeafletWidget&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EditMushroomSpot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpdateView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MushroomSpot&lt;/span&gt;
    &lt;span class="n"&gt;form_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MushroomSpotForm&lt;/span&gt;
    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;form.html&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="form-template-with-leaflet-tags"&gt;
&lt;h3&gt;Form template with Leaflet tags&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load leaflet_tags %}
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    {% leaflet_js plugins=&amp;quot;forms&amp;quot; %}
    {% leaflet_css plugins=&amp;quot;forms&amp;quot; %}
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Edit {{ object }}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ form }}
        {% csrf_token %}
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="going-further"&gt;
&lt;h2&gt;Going further...&lt;/h2&gt;
&lt;p&gt;The Django form widget has &lt;a class="reference external" href="https://github.com/makinacorpus/django-leaflet/blob/master/leaflet/forms/widgets.py"&gt;a couple of options&lt;/a&gt;, that can tweak some aspects of
the map (size, read-only, ...).&lt;/p&gt;
&lt;p&gt;But some advanced usage might require specific interactions or behaviour, beyond
Django &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.6/ref/forms/fields/#creating-custom-fields"&gt;field&lt;/a&gt; and &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.6/ref/forms/widgets/#base-widget-classes"&gt;widgets&lt;/a&gt; customizations.&lt;/p&gt;
&lt;div class="section" id="custom-field-javascript-component"&gt;
&lt;h3&gt;Custom field JavaScript component&lt;/h3&gt;
&lt;p&gt;The frontend field component behaviour and initialization is also pluggable, and
can be used to add extra controls, layers or whatever.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;Custom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GeometryField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GeometryField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;addTo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GeometryField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addTo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;filecontrol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filecontrol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fileLayerLoad&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addControl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filecontrol&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomLeafletWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LeafletWidget&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;geometry_field_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Custom.GeometryField&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="custom-de-serialization-of-form-field-value"&gt;
&lt;h3&gt;Custom de/serialization of form field value&lt;/h3&gt;
&lt;p&gt;The Javascript component for de/serializing fields value is pluggable, can be used to override
the way the geometries are sent to the form.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;Custom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FieldStore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FieldStore&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;formfield&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latlngs&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLatLngs&lt;/span&gt;&lt;span class="p"&gt;()};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomLeafletWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LeafletWidget&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;field_store_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Custom.FieldStore&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="help-us-improve-django-leaflet"&gt;
&lt;h2&gt;Help us improve django-leaflet !&lt;/h2&gt;
&lt;p&gt;We built &lt;em&gt;django-leaflet&lt;/em&gt; at &lt;a class="reference external" href="http://makinacorpus.com"&gt;Makina Corpus&lt;/a&gt;
for some our Webmapping projects. It is used in production and gives
us satisfaction in most use-cases.&lt;/p&gt;
&lt;p&gt;If our initial design does not match your needs, please tell us what you
think !&lt;/p&gt;
&lt;p&gt;For example, personnally, I would like to remove the &lt;cite&gt;&amp;lt;script&amp;gt;&lt;/cite&gt; tag in the &lt;a class="reference external" href="https://github.com/makinacorpus/django-leaflet/blob/0.13.0/leaflet/templates/leaflet/_leaflet_map.html"&gt;map template&lt;/a&gt;, and pass configuration entries through the DOM instead...&lt;/p&gt;
&lt;p&gt;...your turn !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 26 Mar 2014 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-03-26:edit-django-geometries-fields-with-leaflet.html</guid><category>django</category><category>leaflet</category><category>gis</category><category>geojson</category></item><item><title>Releasing software ideas</title><link>http://blog.mathieu-leplatre.info/releasing-software-ideas.html</link><description>&lt;p&gt;A couple of weeks ago, I had a very interesting reading :
&lt;a class="reference external" href="http://danielsolisblog.blogspot.fr/2013/07/what-if-someone-steals-your-idea.html"&gt;What if someone steals your idea ?&lt;/a&gt; (translated into French &lt;a class="reference external" href="http://www.framablog.org/index.php/post/2013/08/29/voler-votre-idee"&gt;by Framasoft&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The author states that his boardgame concepts take a lot of value from development, time and efforts,
and very few from the original idea itself.&lt;/p&gt;
&lt;p&gt;The parallel with software is quite obvious: we can still share our software ideas and concepts,
a lot of time is yet to be invested before they become a usable product, with an identity, a user
community...&lt;/p&gt;
&lt;p&gt;Having the ambition to implement all ideas that come into our floroushing minds can be a serious curse!
A more reasonnable attitude would be to stay focused and share the ideas left over! Hence this post...&lt;/p&gt;
&lt;img alt="Overbooking, by Xavi Puigg" src="/images/overbooking.jpg" /&gt;
&lt;div class="section" id="stay-focused"&gt;
&lt;h2&gt;Stay focused&lt;/h2&gt;
&lt;p&gt;This year I would like to focus on two personal projects: &lt;a class="reference external" href="http://subtivals.org"&gt;Subtivals&lt;/a&gt; and
&lt;a class="reference external" href="https://github.com/spiral-project/daybed"&gt;Daybed&lt;/a&gt;. and I promise myself that I won't invest time on all scatterbrained software ideas that may pop around my head!&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Subtivals&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subtivals&lt;/em&gt; was born from an actual need : to project subtitles during film festivals. It has a very
small user community, so called a &lt;em&gt;niche&lt;/em&gt;, but from all over the world !&lt;/p&gt;
&lt;p&gt;We receive feedback, questions and orders quite often, which maintains a level
of motivation above the average :)&lt;/p&gt;
&lt;p&gt;The code is clean, and the application very robust. I enjoy coding with Qt and C++!
Moreover most ideas can be crash-tested by real users on the field without too
much pressure :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Daybed&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Daybed&lt;/em&gt; is a lot more abstract and subject to competition: it's a Web API
that brings database as-a-service. You define your data models, and a REST API
comes into life automatically, for validation and storage.&lt;/p&gt;
&lt;p&gt;It covers a very wide range of potential use-cases (like many &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Rapid_application_development"&gt;Rapid Application Development&lt;/a&gt; tools by the way...), which
makes it hard to build its identity, and thus its community!&lt;/p&gt;
&lt;p&gt;We made a great progress on the API lately, and there will be a Daybed 1.0 very soon!
But we have to provide a lot of &lt;em&gt;cool-stuff-ization&lt;/em&gt; efforts, with small demos
and slick documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="software-ideas-for-free"&gt;
&lt;h2&gt;Software ideas for free !&lt;/h2&gt;
&lt;p&gt;After the reading of Daniel Solis' article, I thought it would be fun
to share some ideas and concepts that crossed my mind.&lt;/p&gt;
&lt;p&gt;But when I read at Jeff Knupp that there were, on Earth, &lt;a class="reference external" href="http://www.jeffknupp.com/blog/2014/01/28/need-a-project-idea-scratch-your-own-itch/"&gt;« people who can't think of a good project idea »&lt;/a&gt;, I thought it was a serious waste to keep them for me!&lt;/p&gt;
&lt;img alt="Share your ideas, by nan palmero" src="/images/share_ideas.jpg" /&gt;
&lt;p&gt;The following ideas were collected on my notepad along the previous months. Some of them are
quite old, some them may be really bad, others quite awesome, some of them
are easy to implement, others aren't at all.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A social directory of community-supported farms, where users can compare
deliveries, by season, by region, with pictures and rating ;&lt;/li&gt;
&lt;li&gt;A portal for community-supported farms to organize their production and
relationships with members ;&lt;/li&gt;
&lt;li&gt;An open database of relationships between politicians and corporations ;&lt;/li&gt;
&lt;li&gt;A map of bars and restaurants with sunny terraces, by hour, by city ;&lt;/li&gt;
&lt;li&gt;A map of places where bikes were stolen ;&lt;/li&gt;
&lt;li&gt;A tool to compute dates of planet alignments ;&lt;/li&gt;
&lt;li&gt;A simple, pop-up-less, map bounding box and coordinates converter tool ;&lt;/li&gt;
&lt;li&gt;A tool to find the best place to meet for a group of friends at different locations,
so that each of them has the same (walking|driving|flight) distance &lt;a class="footnote-reference" href="#id6" id="id3"&gt;[1]&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;A self-hosted application to manage wishlists, with ability to
secretly mark stuff as picked or organize shared budget &lt;a class="footnote-reference" href="#id7" id="id4"&gt;[2]&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;&lt;span class="strike"&gt;An equivalent of Pelican for photos galleries&lt;/span&gt; &lt;a class="reference external" href="http://sigal.saimon.org/"&gt;Sigal, by Saimon&lt;/a&gt; !
It takes a folder with pictures, and generates a static page with &lt;a class="reference external" href="http://galleria.io/"&gt;galleria.js&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;&lt;span class="strike"&gt;Manual activities search by &amp;quot;ingredient&amp;quot;&lt;/span&gt; &lt;a class="reference external" href="http://instructables.com"&gt;instructables.com&lt;/a&gt; &lt;a class="footnote-reference" href="#id8" id="id5"&gt;[3]&lt;/a&gt; :
I have some clips, a plastic bottle and a match box, tell me what I can build with that for my kids ;&lt;/li&gt;
&lt;li&gt;A directory of pictures of food factories buildings ;&lt;/li&gt;
&lt;li&gt;A collaborative interactive timeline with maps to visualize movement, spread, empires... ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Digital cinema&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A GUI to edit DCP files, edit projection dates, add subtitles etc. I began to write &lt;a class="reference external" href="https://docs.google.com/document/d/1FVUw70wpLwOp8xj6Uok8WAWah4V1KxYxan7OKHHGPUk/edit?usp=sharing"&gt;some specs for this&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;A GUI to easily generate KDM certificates, I also &lt;a class="reference external" href="https://docs.google.com/document/d/1XVqpMmwwGuGaCmN_odJmRHihr4aEuwhbXe0r_7D7eEI/edit?usp=sharing"&gt;wrote some specs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tech stuff&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GeoJSON model fields in Django in order to get rid of GIS stack for simple stuff ;&lt;/li&gt;
&lt;li&gt;A SVG template engine, with specific tags for tables, vertical distributions, sub-templates...
(&lt;em&gt;I made one in PHP almost ten years ago...&lt;/em&gt;) ;&lt;/li&gt;
&lt;li&gt;System integration monitoring : draw your instances and their relationships, add stupid
sensors on them that keep you informed of broken links or streams ;&lt;/li&gt;
&lt;li&gt;Django SQL template, in order to load SQL commands with table and field names substituted
from your models ;&lt;/li&gt;
&lt;li&gt;A Web API on PostGIS for GeoJSON &amp;quot;data clips&amp;quot; : it lists all tables and views with geometries,
and let you obtain GeoJSON using simple query parameters ;&lt;/li&gt;
&lt;li&gt;A Leaflet plugin that takes a trajectory and a speed, and fires the ongoing position at a determined
frequency ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Daybed apps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some stuff that can easily be built with &lt;em&gt;Daybed&lt;/em&gt; :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Web forms service (&lt;em&gt;Google Forms&lt;/em&gt;) ;&lt;/li&gt;
&lt;li&gt;A remote storage for JavaScript or mobile applications ;&lt;/li&gt;
&lt;li&gt;A lightweight alternative to &lt;em&gt;FormHub&lt;/em&gt;, &lt;em&gt;ODK aggregate&lt;/em&gt; or &lt;em&gt;Enketo&lt;/em&gt; ;&lt;/li&gt;
&lt;li&gt;A JavaScript CMS where users can define their content types and forms ;&lt;/li&gt;
&lt;li&gt;A mobile application builder ;&lt;/li&gt;
&lt;li&gt;A data wiki or pad ;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;Daybed mobile app in Qt, equivalent of &lt;em&gt;ODKCollect&lt;/em&gt; for Daybed ;&lt;/li&gt;
&lt;li&gt;Daybed plugged into &lt;em&gt;geojson.io&lt;/em&gt;, instead of using Github gist for storage ;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="your-turn"&gt;
&lt;h3&gt;Your turn...&lt;/h3&gt;
&lt;p&gt;Now that I shared them, they are not mine anymore, take them if you like!&lt;/p&gt;
&lt;p&gt;Many things can happen now :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You will let them rot in the forgotten Web ;&lt;/li&gt;
&lt;li&gt;You will show me how bad they were ;&lt;/li&gt;
&lt;li&gt;You will point out existing projects ;&lt;/li&gt;
&lt;li&gt;You will ask me details ;&lt;/li&gt;
&lt;li&gt;You will implement an idea and share the code ;&lt;/li&gt;
&lt;li&gt;You will start a company, raise money and build an empire (&lt;em&gt;I wouldn't have anyway&lt;/em&gt;) ;&lt;/li&gt;
&lt;li&gt;You will sue me for &lt;a class="reference external" href="http://lanyrd.com/2012/dotjs/scbgdz/"&gt;your new puppy to have ruined your life&lt;/a&gt; :)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt;: You will propose &lt;a class="reference external" href="https://twitter.com/daks_/status/435893872514695168"&gt;more ideas&lt;/a&gt; on twitter :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Meanwhile, they'll disappear from my notebook and its underlying &lt;em&gt;todo list&lt;/em&gt;,
they won't haunt me anymore, I will be at peace.&lt;/p&gt;
&lt;img alt="Kid schedulem by Carissa GoodNCrazy" src="/images/kid_schedule.jpg" /&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not the UI of the year but &lt;a class="reference external" href="http://www.mezzoman.com"&gt;http://www.mezzoman.com&lt;/a&gt; looks like a candidate&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;For example, like &lt;a class="reference external" href="http://mygiftslist.be"&gt;http://mygiftslist.be&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Merci &lt;a class="reference external" href="https://twitter.com/simongeorges/status/435807135302053889"&gt;Simon&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 17 Feb 2014 21:25:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-02-17:releasing-software-ideas.html</guid><category>daybed</category><category>subtivals</category><category>opensource</category></item><item><title>Publish your Pelican blog on Github pages via Travis-CI</title><link>http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html</link><description>&lt;p&gt;This blog is powered by Pelican, and until recently I have rendered the HTML pages
on my local machine and published them on a personal server via SSH.&lt;/p&gt;
&lt;p&gt;Most of the time, I used to forget pushing the raw files on Github. Therefore automatizing
the publishing process based on commits looked like a good idea :)&lt;/p&gt;
&lt;p&gt;The strategy is :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I write, commit and push articles in rST as usual ;&lt;/li&gt;
&lt;li&gt;Travis-CI detects changes ;&lt;/li&gt;
&lt;li&gt;It builds the HTML pages ;&lt;/li&gt;
&lt;li&gt;It pushes the content on the repo's &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gh-pages&lt;/span&gt;&lt;/tt&gt; branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Andrea Zonca &lt;a class="reference external" href="http://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html"&gt;wrote something similar&lt;/a&gt;
with a very appealing title, but it was not very enlightening to me.
I hope getting it done will be clear enough with this present article.&lt;/p&gt;
&lt;div class="section" id="travis-ci-configuration"&gt;
&lt;h2&gt;Travis-CI configuration&lt;/h2&gt;
&lt;p&gt;Just add a &lt;tt class="docutils literal"&gt;.travis.yml&lt;/tt&gt; file, like you would do for your unit-tests.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;language: python
branches:
  only:
  - master
install:
- pip install pelican ghp-import
script:
- make publish github
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to avoid the blog to be updated by changes on the &lt;tt class="docutils literal"&gt;draft&lt;/tt&gt; branch,
only commits of &lt;tt class="docutils literal"&gt;master&lt;/tt&gt; trigger updates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="travis-authentication-on-github"&gt;
&lt;h2&gt;Travis authentication on Github&lt;/h2&gt;
&lt;p&gt;Since it will push to the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gh-pages&lt;/span&gt;&lt;/tt&gt; branch of your repo, it has to authenticate on
Github. For this, we use a &lt;a class="reference external" href="https://github.com/blog/1270-easier-builds-and-deployments-using-git-over-https-and-oauth"&gt;OAuth token&lt;/a&gt;,
that can be created and revoked from the &lt;a class="reference external" href="https://github.com/settings/applications"&gt;GitHub applications&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;In order to keep it secret with Travis, we use their Ruby application to
encrypt it :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install ruby1.9.1-dev build-essentials
sudo gem install travis

travis encrypt GH_TOKEN=your_token
&lt;/pre&gt;
&lt;p&gt;A new block will be added to &lt;tt class="docutils literal"&gt;.travis.yml&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;env:
  global:
    secure: NWjh6sCvmjuX...yWo=
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="push-on-github-pages"&gt;
&lt;h2&gt;Push on Github pages&lt;/h2&gt;
&lt;p&gt;I modified the &lt;tt class="docutils literal"&gt;Makefile&lt;/tt&gt; provided in Pelican.&lt;/p&gt;
&lt;p&gt;It uses &lt;em&gt;ghp-import&lt;/em&gt; to build the branch from the output folder and pushes quietly with force via HTTPS using the token variable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;

  ghp-import -n &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
  @git push -fq https://&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;@github.com/&lt;span class="k"&gt;$(&lt;/span&gt;TRAVIS_REPO_SLUG&lt;span class="k"&gt;)&lt;/span&gt;.git gh-pages &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use leading &lt;tt class="docutils literal"&gt;&amp;#64;&lt;/tt&gt; to remove command from output, thanks &lt;a class="reference external" href="https://github.com/leplatrem/blog.mathieu-leplatre.info/issues/1"&gt;Ryan Peck&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Also disable pull request builds in Travis to prevent the blog being updated by a pull request (thanks &lt;a class="reference external" href="https://github.com/leplatrem/blog.mathieu-leplatre.info/pull/2"&gt;Andrew Aitken&lt;/a&gt; !).&lt;/p&gt;
&lt;img alt="" src="/images/travis-pull-request.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="custom-domain"&gt;
&lt;h2&gt;Custom domain&lt;/h2&gt;
&lt;p&gt;Github expects a &lt;tt class="docutils literal"&gt;CNAME&lt;/tt&gt; file. Pelican provides a simple way to create it using &lt;em&gt;extra paths&lt;/em&gt;,
controlled via settings :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;extra/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;extra/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If any doubt, just have a look the &lt;a class="reference external" href="https://github.com/leplatrem/blog.mathieu-leplatre.info"&gt;repository of this blog&lt;/a&gt;...&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 09 Jan 2014 12:25:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2014-01-09:publish-your-pelican-blog-on-github-pages-via-travis-ci.html</guid><category>pelican</category><category>github</category><category>travis</category></item><item><title>Django : Create a QuerySet from a list, preserving order</title><link>http://blog.mathieu-leplatre.info/django-create-a-queryset-from-a-list-preserving-order.html</link><description>&lt;p&gt;I thought it would be an easy one, but found myself lost with 34 opened tabs
on &lt;em&gt;stackoverflow&lt;/em&gt;...&lt;/p&gt;
&lt;div class="section" id="the-problem-keep-it-ordered"&gt;
&lt;h2&gt;The problem : keep it ordered&lt;/h2&gt;
&lt;p&gt;Usually, obtaining a &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; from a list is quite simple :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Theme.objects.filter&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pk__in&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;1, 2, 10&lt;span class="o"&gt;])&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;queryset&lt;span class="o"&gt;)&lt;/span&gt;
&amp;lt;class &lt;span class="s1"&gt;&amp;#39;django.db.models.query.QuerySet&amp;#39;&lt;/span&gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; queryset
&lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;Theme: Fauna&amp;gt;, &amp;lt;Theme: Flora&amp;gt;, &amp;lt;Theme: Refuge&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem is that the list order is ignored :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; Theme.objects.filter&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pk__in&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;10, 2, 1&lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;Theme: Fauna&amp;gt;, &amp;lt;Theme: Flora&amp;gt;, &amp;lt;Theme: Refuge&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If obtaining a &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; is not a requirement, it's &lt;a class="reference external" href="http://stackoverflow.com/a/7361598/141895"&gt;rather easy to get a list sorted&lt;/a&gt;
according to another :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pks_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;themes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk__in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pks_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pks_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In my case, I want a &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt;, a brave lazy one, with proper &lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;exclude()&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;values()&lt;/tt&gt; ...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fallback-to-sql"&gt;
&lt;h2&gt;Fallback to SQL&lt;/h2&gt;
&lt;p&gt;AFAIK, most database engines ignore order of records, until you specify an
ordering column. In our case, the list is arbitrary, and does not map to any
existing attribute, thus db column.&lt;/p&gt;
&lt;p&gt;If you use MySQL (&lt;em&gt;who does?!&lt;/em&gt;), there is a &lt;tt class="docutils literal"&gt;FIELD()&lt;/tt&gt; function that provides
&lt;a class="reference external" href="http://stackoverflow.com/a/3626200/141895"&gt;custom input for the sort method&lt;/a&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;FIELD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the ORM, it gives us (&lt;em&gt;thanks Daniel Roseman&lt;/em&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pk_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ordering&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;FIELD(`id`, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pk_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk__in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pk_list&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ordering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ordering&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ordering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, good news it can be &lt;a class="reference external" href="http://stackoverflow.com/questions/1309624/simulating-mysqls-order-by-field-in-postgresql"&gt;ported to PostgreSQL&lt;/a&gt;.
But if possible, I would prefer native SQL.&lt;/p&gt;
&lt;p&gt;And it looks like the magnificient syntax of SQL provides &lt;tt class="docutils literal"&gt;ORDER BY CASE WHEN ... END&lt;/tt&gt; !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
  &lt;span class="k"&gt;CASE&lt;/span&gt;
    &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the ORM, it gives us :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pk_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;clauses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;WHEN id=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; THEN &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk_list&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="n"&gt;ordering&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;CASE &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; END&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;clauses&lt;/span&gt;
&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk__in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pk_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ordering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ordering&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ordering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I wonder how it behaves with zillions of records though ;)&lt;/p&gt;
&lt;p&gt;One more thing: before Django 1.6, there &lt;a class="reference external" href="https://code.djangoproject.com/ticket/14930"&gt;was a bug&lt;/a&gt; with calling &lt;tt class="docutils literal"&gt;values_list()&lt;/tt&gt;
on a queryset ordered by an extra column. Use this :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ordering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Good luck ! Please share your advices or critics ;)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 08 Nov 2013 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-11-08:django-create-a-queryset-from-a-list-preserving-order.html</guid><category>django</category></item><item><title>Generate office documents with Django</title><link>http://blog.mathieu-leplatre.info/generate-office-documents-with-django.html</link><description>&lt;p&gt;In our recent Django projects, we had to create documents (Libre/OpenOffice, Microsoft Office, PDF...),
and therefore created two components :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/django-appypod"&gt;django-appypod&lt;/a&gt;, providing document templates views, built on top of &lt;a class="reference external" href="http://appyframework.org/pod.html"&gt;Appy.pod&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/convertit"&gt;convertit&lt;/a&gt;, a generic format conversion Web API.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;django-appypod&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Appy&lt;/em&gt; is a set of python tools (e.g. framework) by &lt;a class="reference external" href="https://launchpad.net/~gaetan-delannay"&gt;Gaetan Delannay&lt;/a&gt;, which provides, among other stuff,
a templating engine for OpenDocument files.&lt;/p&gt;
&lt;p&gt;One the great advantage is that you edit your templates in LibreOffice, &lt;a class="reference external" href="http://en.wikipedia.org/wiki/WYSIWYG"&gt;WYSIWYG&lt;/a&gt; !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/appypod-template.png" style="width: 70%;" /&gt;
&lt;p&gt;&lt;em&gt;django-appypod&lt;/em&gt; is a template view that renders a OpenDocument template for a context.
The exact same way you already do for HTML.&lt;/p&gt;
&lt;p&gt;Using class-based generic views :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.view.generic.detail&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djappypod.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OdtTemplateResponse&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;YourDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;response_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OdtTemplateResponse&lt;/span&gt;
    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;your/template.odt&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_context_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Simple as hello ;)&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using classic functions-based views :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;your_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Simple as hello ;)&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OdtTemplateResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;your/template.odt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/appypod-rendered.png" style="width: 70%;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;ConvertIt&lt;/h2&gt;
&lt;p&gt;We often need to serve those document as PDF files, and some users can't
be satisfied with &lt;em&gt;OpenDocument&lt;/em&gt; files.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Appy&lt;/em&gt; can rely on OpenOffice to convert documents to PDF and MS-Word, but we didn't like
the idea of having to install the bunch of binaries along every Django project.
Therefore we created &lt;em&gt;ConvertIt&lt;/em&gt;, a Web API that will just be in charge of
format conversion. It can live on a dedicated server, and thus isolate binaries, and
potentially convert from and to any exotic formats, relying on any exotic system binaries.&lt;/p&gt;
&lt;p&gt;So far we implemented most office documents conversions (.pdf, .doc, .xls), as well as SVG to PDF and PNG.&lt;/p&gt;
&lt;div class="section" id="docker-image"&gt;
&lt;h3&gt;Docker image&lt;/h3&gt;
&lt;p&gt;If you use Docker, you can get a ConvertIt instance running in one command :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo docker run -p :6543 makinacorpus/convertit
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="manual-installation"&gt;
&lt;h3&gt;Manual installation&lt;/h3&gt;
&lt;p&gt;It is a Pyramid project, pretty straightforward :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install convertit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plus some conversion binaries (each one is optional):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install -y libreoffice unoconv inkscape
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run a development instance :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pserve development.ini --reload
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run a production instance :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install gunicorn
gunicorn --paste production.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Using GET requests :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
curl http://convertit/?url=http://server/document.odt&amp;amp;to=application/pdf
HTTP/1.1 302 Found
Content-Disposition: attachement; filename=document.pdf
...
&lt;/pre&gt;
&lt;p&gt;Uploading file with POST :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
curl -F &amp;quot;file=&amp;#64;tiger.svg&amp;quot; http://convertit/?to=image/png
HTTP/1.1 302 Found
Content-Disposition: attachement; filename=tiger.png
...
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="integration-with-django"&gt;
&lt;h3&gt;Integration with Django&lt;/h3&gt;
&lt;p&gt;If your documents do not require login, a simple and stupid template tag can do it :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.urlresolvers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NoReverseMatch&lt;/span&gt;


&lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="nd"&gt;@register.simple_tag&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;convert_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sourceurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;application/pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sourceurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;NoReverseMatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="n"&gt;fullurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_absolute_uri&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;?url=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;to=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CONVERSION_SERVER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fullurl&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which you then use in templates:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;a href=&amp;quot;{% convert_url &amp;quot;app:document&amp;quot; object.pk %}&amp;quot;&amp;gt;Download PDF version&amp;lt;/a&amp;gt;
&lt;/pre&gt;
&lt;p&gt;However, if your view requires authentication, there are several strategies:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Auto-login requests coming from ConvertIt server ;&lt;/li&gt;
&lt;li&gt;Add a login required proxy view that download the file and perform a POST query to ConvertIt ;&lt;/li&gt;
&lt;li&gt;Setup SSO or any other token mechanism ;&lt;/li&gt;
&lt;li&gt;Contribute to ConvertIt to add HTTP authentication (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;url=http://user:pass&amp;#64;host&lt;/span&gt;&lt;/tt&gt;) ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gist.github.com/leplatrem/6552003"&gt;I made a snippet&lt;/a&gt; for the first option&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="in-short"&gt;
&lt;h2&gt;In short...&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;django-appypod&lt;/em&gt; is great because templates are WYSIWYG ;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ConvertIt&lt;/em&gt; is great because it's generic and pluggable ;&lt;/li&gt;
&lt;li&gt;There are great together because their deliver both office and PDF formats ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are alternatives though if PDF is enough for you :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://weasyprint.org"&gt;WeasyPrint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.xhtml2pdf.com/"&gt;xhtml2pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 13 Sep 2013 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-09-13:generate-office-documents-with-django.html</guid><category>django</category><category>openoffice</category><category>convertit</category><category>appypod</category></item><item><title>GeoDjango maps with Leaflet</title><link>http://blog.mathieu-leplatre.info/geodjango-maps-with-leaflet.html</link><description>&lt;p&gt;A short introduction to web mapping with Django, using two very simple
applications: &lt;a class="reference external" href="https://github.com/makinacorpus/django-leaflet"&gt;django-leaflet&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/makinacorpus/django-geojson"&gt;django-geojson&lt;/a&gt;, by &lt;a class="reference external" href="http://makinacorpus.com"&gt;Makina Corpus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will build a map with all major weather stations of the world.&lt;/p&gt;
&lt;div class="section" id="weather-stations"&gt;
&lt;h2&gt;Weather stations&lt;/h2&gt;
&lt;p&gt;Each weather station has an id, a name and a position.&lt;/p&gt;
&lt;p&gt;As a GeoDjango model, it becomes :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.gis.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WeatherStation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;wmoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PointField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gismodels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GeoManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__unicode__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="loading-actual-data"&gt;
&lt;h3&gt;Loading actual data&lt;/h3&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://www.wmo.int"&gt;World Meteorological Organization&lt;/a&gt; publishes a list of all major weather stations, in a &lt;a class="reference external" href="ftp://ftp.wmo.ch/wmo-ddbs/VolA_New/"&gt;CSV format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this format is not very friendly (especially latitudes and longitudes) :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
StationId   StationName         Latitude    Longitude ...
60351       JIJEL- ACHOUAT      36 48 00N   05 53 00E
...
07630       TOULOUSE BLAGNAC    43 37 16N   01 22 44E
...
&lt;/pre&gt;
&lt;p&gt;We will convert coordinates &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Geographic_coordinate_conversion#Conversion_from_DMS_to_Decimal_Degree"&gt;from degres minutes seconds to decimal degrees&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dms2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Degres Minutes Seconds to Decimal degres&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;degres&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;degres&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;W&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dec&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dec&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And create an instance of our model for each entry in the CSV :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.gis.geos&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;webmap.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WeatherStation&lt;/span&gt;


&lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Pub9volA130819x.flatfile.txt&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DictReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dms2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;lat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dms2dec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;wmoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;StationId&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;StationName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;WeatherStation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wmoid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wmoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, our table is full of records (~ 12000) !&lt;/p&gt;
&lt;p&gt;If you open it with graphical tools like QGis, it's stuffed !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/weather-stations-qgis.png" style="width: 100%;" /&gt;
&lt;p&gt;( &lt;em&gt;If you want a script that converts this stations file into GeoJSON&lt;/em&gt;, you can use &lt;a class="reference external" href="https://gist.github.com/leplatrem/6294314"&gt;this piece of code&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="plot-on-map"&gt;
&lt;h2&gt;Plot on map&lt;/h2&gt;
&lt;p&gt;With &lt;em&gt;django-leaflet&lt;/em&gt;, after having added &lt;tt class="docutils literal"&gt;leaflet&lt;/tt&gt; to your &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt;,
you can insert maps in templates :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load leaflet_tags %}
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    {% leaflet_js %}
    {% leaflet_css %}
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Weather Stations&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    {% leaflet_map &amp;quot;main&amp;quot; callback=&amp;quot;main_map_init&amp;quot; %}

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main_map_init&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Use Leaflet API here&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A blank map shows up, with a basic OpenStreetMap background.&lt;/p&gt;
&lt;div class="section" id="vectorial-data"&gt;
&lt;h3&gt;Vectorial data&lt;/h3&gt;
&lt;p&gt;We now want to place markers for each weather station. For this, we use
&lt;em&gt;django-geojson&lt;/em&gt;, which provides a very simple base view :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# urls.py&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djgeojson.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GeoJSONLayerView&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;webmap.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WeatherStation&lt;/span&gt;


&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^data.geojson$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GeoJSONLayerView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;WeatherStation&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We load this data in Ajax, and add it as map layer, in the initialization function left empty in the above snippet :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main_map_init&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dataurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{% url &amp;quot;data&amp;quot; %}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Download GeoJSON via Ajax&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Add GeoJSON layer&lt;/span&gt;
        &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geoJson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The map shows up, and get filled with weather stations !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/weather-stations-leaflet.png" style="width: 100%;" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="going-further"&gt;
&lt;h2&gt;Going further...&lt;/h2&gt;
&lt;p&gt;This was a first introduction, but it applies to all kinds of goemetries (lines, polygons, ...).&lt;/p&gt;
&lt;p&gt;I &lt;a class="reference external" href="http://github.com/leplatrem/django-leaflet-geojson"&gt;published the full project&lt;/a&gt; if you want to start from an example.&lt;/p&gt;
&lt;p&gt;If you already feel comfortable with Django, there won't be any surprise : have a look at &lt;em&gt;Leaflet&lt;/em&gt;, &lt;em&gt;django-leaflet&lt;/em&gt; and &lt;em&gt;django-geojson&lt;/em&gt; respective documentations in order to get an idea of the customizations you are offered...&lt;/p&gt;
&lt;div class="section" id="performance"&gt;
&lt;h3&gt;Performance&lt;/h3&gt;
&lt;p&gt;A map with more than 12 000 HTML objects is not going to be snappy.&lt;/p&gt;
&lt;p&gt;Hopefully, it won't be the case for your first applications !&lt;/p&gt;
&lt;p&gt;And fortunately, there are plently of different strategies to draw such an amount of data :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://github.com/Leaflet/Leaflet.markercluster"&gt;marker clusters&lt;/a&gt; to reduce the number of elements on the map (&lt;a class="reference external" href="https://github.com/leplatrem/django-leaflet-geojson/blob/master/Pub9volA130819x.geojson"&gt;see result here&lt;/a&gt;) ;&lt;/li&gt;
&lt;li&gt;Draw circles instead of markers and switch to Canvas (see Leaflet documentation) ;&lt;/li&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://github.com/glenrobertson/leaflet-tilelayer-geojson/"&gt;tiled geojson&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;Render tiles using Tilemill/Mapnik ;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It gives us a lot of topics to explore and blog about :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 21 Aug 2013 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-08-21:geodjango-maps-with-leaflet.html</guid><category>django</category><category>leaflet</category><category>gis</category><category>geojson</category></item><item><title>Deploy Django projects using git push</title><link>http://blog.mathieu-leplatre.info/deploy-django-projects-using-git-push.html</link><description>&lt;p&gt;Deploying stuff in one command is becoming the Holy Grail of development,
with currently ten times more blog articles than Medieval crusades :)&lt;/p&gt;
&lt;p&gt;I could not miss the opportunity to write mine !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; In order to keep this article as clear (and short) as possible,
the first step setup on a blank server does not use any provisionning system
(&lt;em&gt;another religious matter&lt;/em&gt;).&lt;/p&gt;
&lt;div class="section" id="prerequesites-easy-dependencies"&gt;
&lt;h2&gt;Prerequesites : easy dependencies&lt;/h2&gt;
&lt;p&gt;Having a simple &lt;tt class="docutils literal"&gt;Makefile&lt;/tt&gt; for your application is highly recommended, it will gather all repetitive
commands for setting up dependencies.&lt;/p&gt;
&lt;p&gt;Here is a minimalist (working) example, with a project called &lt;tt class="docutils literal"&gt;revolution&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
install: bin/python

bin/python:
    virtualenv .
    bin/python setup.py develop

serve: bin/python
    bin/python ./manage.py runserver 8888

deploy: bin/python
    bin/python ./manage.py collectstatic --clear --noinput
    touch revolution/wsgi.py  # trigger reload

clean:
    rm -rf bin/ lib/ build/ dist/ *.egg-info/ include/ local/
&lt;/pre&gt;
&lt;p&gt;If your project does have any &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;, just write one &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; or use a &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; file &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;
and replace &lt;tt class="docutils literal"&gt;bin/python setup.py develop&lt;/tt&gt; in &lt;em&gt;Makefile&lt;/em&gt; with &lt;tt class="docutils literal"&gt;bin/pip install &lt;span class="pre"&gt;-r&lt;/span&gt; requirements.txt&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Now you can then run your deployment commands with &lt;tt class="docutils literal"&gt;make deploy&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-step-server-setup"&gt;
&lt;h2&gt;First step : server setup&lt;/h2&gt;
&lt;div class="section" id="prepare-repository"&gt;
&lt;h3&gt;Prepare repository&lt;/h3&gt;
&lt;p&gt;On your server, create two folders : the repository and deployed app.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p /var/git/yourapp.git
mkdir -p /var/www/yourapp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Git repository will serve as a remote for our code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/git/yourapp.git
git init --bare .
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Git hooks, we will deploy the code being pushed into the
deployed app folder. Create the file &lt;em&gt;hooks/post-receive&lt;/em&gt;
with the following content&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/sh
dest=/var/www/yourapp
echo &amp;quot;Deploying into $dest&amp;quot;
GIT_WORK_TREE=$dest git checkout --force
cd $dest
make deploy
&lt;/pre&gt;
&lt;p&gt;And make it executable&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +x /var/git/yourapp.git/hooks/post-receive
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-web-server"&gt;
&lt;h3&gt;Setup Web server&lt;/h3&gt;
&lt;p&gt;Again, in order to make this straight to the point, I will use &lt;em&gt;Apache's mod_wsgi&lt;/em&gt;,
since the configuration is trivial.&lt;/p&gt;
&lt;p&gt;Of course, &lt;em&gt;nginx&lt;/em&gt;, &lt;em&gt;gunicorn&lt;/em&gt;, &lt;em&gt;uwsgi&lt;/em&gt; or &lt;em&gt;circus&lt;/em&gt; still belong to our prefered stacks but
currently our main point is &lt;em&gt;deploying with git push&lt;/em&gt; !&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install libapache2-mod-wsgi
&lt;/pre&gt;
&lt;p&gt;Create a very simple Apache configuration file in &lt;em&gt;/etc/apache2/sites-available/001-yourapp&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
WSGIPythonPath /var/www/yourapp:/var/www/yourapp/lib/python2.6/site-packages

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName yourapp.com
    ServerAdmin contact&amp;#64;yourapp.com

    Alias /static/ /var/www/yourapp/public/static/
    &amp;lt;Directory /var/www/yourapp/public/static&amp;gt;
        Order deny,allow
        Allow from all
    &amp;lt;/Directory&amp;gt;

    WSGIScriptAlias / /var/www/yourapp/revolution/wsgi.py
    &amp;lt;Directory /var/www/yourapp/revolution/&amp;gt;
        &amp;lt;Files wsgi.py&amp;gt;
            Order deny,allow
            Allow from all
        &amp;lt;/Files&amp;gt;
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/pre&gt;
&lt;p&gt;And enable it&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo a2ensite 001-yourapp
sudo /etc/init.d/apache2 restart
&lt;/pre&gt;
&lt;p&gt;Your site is now up and running...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps-push-updates"&gt;
&lt;h2&gt;Next steps : push updates !&lt;/h2&gt;
&lt;p&gt;Now that the application is in production, you will obviously want to push updates !&lt;/p&gt;
&lt;p&gt;Comfortably installed at your desk, you just have to push commits to the server,
the same way you already do for your code !&lt;/p&gt;
&lt;p&gt;Add the remote (once)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git remote add production ssh://user&amp;#64;server:/var/git/yourapp.git
&lt;/pre&gt;
&lt;p&gt;And push !&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git push production master

...
Counting objects: 862, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (437/437), done.
Writing objects: 100% (817/817), 121.16 KiB, done.
Total 817 (delta 608), reused 452 (delta 332)
remote: Deploying into /var/www/yourapp
...
remote: bin/python setup.py develop
...
...
remote: 345 static files copied.
To server:/var/git/yourapp.git
   2fe81f4..76a3fb8  master -&amp;gt; master
&lt;/pre&gt;
&lt;p&gt;Your site is up-to-date ! Depending of course of caching policies, but it runs the last version.&lt;/p&gt;
&lt;p&gt;Obviously, it is very likely that you will want to push specific branches, but that, you already know!&lt;/p&gt;
&lt;img alt="" src="/images/cat_pope.jpg" /&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/intro/reusable-apps/#packaging-your-app"&gt;https://docs.djangoproject.com/en/dev/intro/reusable-apps/#packaging-your-app&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.pip-installer.org/en/latest/requirements.html"&gt;http://www.pip-installer.org/en/latest/requirements.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 12 Aug 2013 22:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-08-12:deploy-django-projects-using-git-push.html</guid><category>django</category><category>git</category></item><item><title>Embed Daybed forms</title><link>http://blog.mathieu-leplatre.info/embed-daybed-forms.html</link><description>&lt;p&gt;A brief article to introduce &lt;a class="reference external" href="https://github.com/spiral-project/backbone-daybed"&gt;backbone-daybed&lt;/a&gt;, a few
helpers to render Web forms for Daybed models.&lt;/p&gt;
&lt;img alt="Antikes Sofa Diwan furniert Laden daybed" src="http://upload.wikimedia.org/wikipedia/commons/7/70/Antikes_Sofa_Diwan_furniert_Laden_daybed.jpg" style="width: 512px;" /&gt;
&lt;div class="section" id="daybed-lay-down-and-rest"&gt;
&lt;h2&gt;Daybed, lay down and REST&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/spiral-project/daybed"&gt;Daybed&lt;/a&gt; is a data validation and storage API, written in Python,
using Pyramid and the fantastic &lt;a class="reference external" href="https://cornice.readthedocs.org/"&gt;Cornice&lt;/a&gt; addon.&lt;/p&gt;
&lt;p&gt;It's a minimalist Web API where you :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;define models (schemas)&lt;/li&gt;
&lt;li&gt;validate data and store data&lt;/li&gt;
&lt;li&gt;retrieve and update records&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Key features are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing"&gt;CORS&lt;/a&gt; built-in support&lt;/li&gt;
&lt;li&gt;pluggable datastore engines (default is &lt;em&gt;CouchDB&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Geometry fields (maps!)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/SPORE/specifications"&gt;Spore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Access Control (&lt;em&gt;under development&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's a side-project we've been hacking on for a while, and we envision &lt;a class="reference external" href="https://github.com/spiral-project/daybed/wiki/Use-cases"&gt;many
applications&lt;/a&gt; !
One of them is, since the beginning, a Web forms service !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="models-are-yours"&gt;
&lt;h2&gt;Models are yours&lt;/h2&gt;
&lt;p&gt;In order to create your own models, you can either use the
crude GUI of &lt;a class="reference external" href="http://leplatrem.github.io/daybed-map/"&gt;daybed-maps&lt;/a&gt;
&lt;strong&gt;or&lt;/strong&gt; post a JSON manually on the &lt;a class="reference external" href="http://daybed.lolnet.org"&gt;Daybed instance&lt;/a&gt; we run for you.&lt;/p&gt;
&lt;p&gt;In both cases you will reference your model definition using
the &lt;tt class="docutils literal"&gt;ìd&lt;/tt&gt; you chose.&lt;/p&gt;
&lt;p&gt;Below, we define &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;demo-poll-conf&lt;/span&gt;&lt;/tt&gt; using cUrl in the command-line.&lt;/p&gt;
&lt;p&gt;The model will be a stupid poll to ask how many conferences you attended
in the past year.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# in a terminal...&lt;/span&gt;
&lt;span class="nv"&gt;definition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;&amp;quot;title&amp;quot;: &amp;quot;Conferences Poll&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;quot;description&amp;quot;: &amp;quot;How many conferences attended last year ?&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;quot;fields&amp;quot;: [&lt;/span&gt;
&lt;span class="s1"&gt;  {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;name&amp;quot;: &amp;quot;total&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;type&amp;quot;: &amp;quot;int&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;description&amp;quot;: &amp;quot;How many times ?&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;  }, {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;name&amp;quot;: &amp;quot;category&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;type&amp;quot;: &amp;quot;enum&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;choices&amp;quot;: [&amp;quot;Web&amp;quot;, &amp;quot;Strategy&amp;quot;, &amp;quot;Technology&amp;quot;],&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;description&amp;quot;: &amp;quot;Mostly in...&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;]}&amp;#39;&lt;/span&gt;

curl -XPUT http://daybed.lolnet.org/definitions/demo-poll-conf -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;definition&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="backbone-daybed-simple-and-stupid"&gt;
&lt;h2&gt;backbone-daybed, simple and stupid&lt;/h2&gt;
&lt;p&gt;Backbone.js is not the &lt;em&gt;next&lt;/em&gt; big thing :) &lt;em&gt;#ooold, it's sooo 2011&lt;/em&gt; !&lt;/p&gt;
&lt;p&gt;But frankly, it has remained simple, very easy to learn and yet quite efficient!
That's why I chose it to demo the power of having storage-as-a-service with Daybed.
Plus, &lt;a class="reference external" href="https://github.com/powmedia/backbone-forms"&gt;backbone-forms&lt;/a&gt; provided
the right level of abstraction I needed !&lt;/p&gt;
&lt;p&gt;For example, here we embed a form in the page for the model we just created,
and start polling the audience !&lt;/p&gt;
&lt;p&gt;The few lines of Javascript below render the form and reacts on submission !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.2/underscore-min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.0.0/backbone-min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdnjs.cloudflare.com/ajax/libs/mustache.js/0.7.0/mustache.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://cdnjs.cloudflare.com/ajax/libs/backbone-forms/0.12.0/backbone-forms.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://rawgithub.com/spiral-project/backbone-daybed/1e410a85/backbone-daybed.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Daybed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;renderForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#demo-form-container&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;demo-poll-conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// plot chart !&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.2/underscore-min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.0.0/backbone-min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/mustache.js/0.7.0/mustache.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/backbone-forms/0.12.0/backbone-forms.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://rawgithub.com/spiral-project/backbone-daybed/1e410a85/backbone-daybed.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="https://rawgithub.com/nnnick/Chart.js/master/Chart.min.js"&gt;&lt;/script&gt;
&lt;style&gt;
    #demo-form-container {
        border: 1px solid #6C0AAB;
        margin-bottom: 30px;
        display: inline-block;
        padding: 10px;
        border-radius: 5px;
    }
    #demo-form-container .field-error {
        color: red;
    }
    #demo-form-container label {
        font-weight: bold;
    }
    #demo-form-container ul {
        margin: 0px;
        list-style-type: none;
    }
    #demo-form-container a.btn {
        float: right;
        text-decoration: none;
        background-color: #6C0AAB;
        color: white;
        border-radius: 3px;
        font-size: 16px;
    }
&lt;/style&gt;
&lt;div id="demo-form-container"&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;
    $(document).ready(function () {
        Daybed.SETTINGS.SERVER = "http://daybed.lolnet.org";  // no trailing slash

        var form = Daybed.renderForm('#demo-form-container',
                                     {id: 'demo-poll-conf',
                                      title: 'Conferences poll :',
                                      save: 'Submit',
                                      cancel: null});

        // Fetch all the records
        var records = new Daybed.ItemList(form.definition);
        records.fetch();

        // On submission, plot the chart
        form.on('created', function (record) {
            records.add(record);

            // Prepare plot data
            var data = {
                labels : [],
                datasets : [{
                    fillColor : "#E0E4CC",
                    strokeColor : "#6C0AAB",
                    data : []
                }]
            };
            var byCat = {};
            records.each(function (r) {
                var cat = r.attributes.category;
                if (!byCat[cat]) byCat[cat] = [];
                byCat[cat].push(r.attributes.total);
            });
            for(var cat in byCat) {
                var sum = _.reduce(byCat[cat], function(memo, num){ return memo + num; }, 0),
                    val = sum / byCat[cat].length;
                data.labels.push(cat);
                data.datasets[0].data.push(val);
            }

            // Render the bar chart
            var ctx =  $('#demo-form-container').html('&lt;p&gt;Avg. per category&lt;/p&gt;'+
                                                      '&lt;canvas height="200"/&gt;')
                                                .find('canvas')[0].getContext("2d"),
                chart = new Chart(ctx).Bar(data);
        });
    });
&lt;/script&gt;&lt;p&gt;The helper downloads the definition JSON, renders fields within an HTML form with
&lt;em&gt;backbone-forms&lt;/em&gt;. And in this example specifically, on submission, we fetch all the records,
compute average values by category in order to plot some naive chart using &lt;a class="reference external" href="http://chartjs.org"&gt;Chart.js&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="" src="/images/backbone-daybed-preview.png" style="width: 700px;" /&gt;
&lt;p&gt;You can also have a look at the very few lines of the backbone-daybed demo, it's dead easy !
It features a CRUD application : Create, edit and delete records for the model of your choice ! &lt;a class="reference external" href="http://spiral-project.github.io/backbone-daybed/#demo-poll-conf"&gt;http://spiral-project.github.io/backbone-daybed/#demo-poll-conf&lt;/a&gt; (&lt;em&gt;See URL hash&lt;/em&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="shortly"&gt;
&lt;h2&gt;Shortly&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Daybed is a generic backend where you define models, validate and post data ;&lt;/li&gt;
&lt;li&gt;There are already &lt;a class="reference external" href="https://github.com/spiral-project/daybed/wiki/Use-cases"&gt;various working applications&lt;/a&gt; built with this storage-as-a-service ;&lt;/li&gt;
&lt;li&gt;Most Javascript frameworks will play well natively with Daybed REST API ;&lt;/li&gt;
&lt;li&gt;backbone-daybed is just a helper to render Daybed models as forms, .... &lt;a class="reference external" href="https://github.com/spiral-project/backbone-daybed/#readme"&gt;and a little bit more&lt;/a&gt; !&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So far, Daybed data is not protected (like a wiki), but access control is currently being implemented :)&lt;/p&gt;
&lt;p&gt;Stay tuned !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 23 Jul 2013 14:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-07-23:embed-daybed-forms.html</guid><category>daybed</category><category>javascript</category><category>backbone</category></item><item><title>News about Subtivals</title><link>http://blog.mathieu-leplatre.info/news-about-subtivals.html</link><description>&lt;p&gt;Subtivals was used successfully in movie festivals in Cyprus, and that
makes us happy ! And we regularly receive demands for Subtivals installers
accross the globe ! The great unicode support of Subtivals (&lt;em&gt;provided natively by Qt&lt;/em&gt;)
makes it a great tool for movie subtitling on the international scene !&lt;/p&gt;
&lt;div class="section" id="a-new-website-subtivals-org"&gt;
&lt;h2&gt;A new website... subtivals.org !&lt;/h2&gt;
&lt;p&gt;We used to host our main project page within a Github README file. We now
have a dedicated website :&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://subtivals.org"&gt;http://subtivals.org&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;It's still hosted and edited on Github &amp;lt;3, we thank them for that !&lt;/p&gt;
&lt;video src="http://mathieu-leplatre.info/media/subtivals/subtivals-1.6-calibration.webm" width="500" preload="auto" autoplay loop&gt;
    &lt;p&gt;Your browser does not support the video element &lt;/p&gt;
&lt;/video&gt;&lt;p&gt;( &lt;em&gt;Calibration tool in action&lt;/em&gt; )&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="some-new-features-in-version-1-6"&gt;
&lt;h2&gt;Some new features in version 1.6&lt;/h2&gt;
&lt;p&gt;We added a shortcut editor, it's a great way to explore existing shortcuts,
and thus prevent reading the documentation ! Plus, if Subtivals users have habits
with former tools like &lt;em&gt;Icareus Screen pro software&lt;/em&gt;, they can adjust the settings
and use this great opensource alternative easily ;)&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-1.6-shorcuteditor.png" style="width: 40%;" /&gt;
&lt;p&gt;Also, Subtivals can now read plain text files. This appears to be useful for
theaters or operas, since timecode notion is irrelevant in those use cases.
We chose a very simple text format:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
This is one subtitle!

Here comes another,
with two lines!
&lt;/pre&gt;
&lt;p&gt;Timecodes are optional, but still supported :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
00:00:19:13 00:00:23:08
À 24-25 ans, j'avais déjà un film
qui tournait en festival.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="get-it"&gt;
&lt;h2&gt;Get it !&lt;/h2&gt;
&lt;p&gt;Subtivals is released under &lt;a class="reference external" href="http://www.gnu.org/copyleft/gpl.html"&gt;GPL&lt;/a&gt;,
this means you can use, access the source code, modify, package, distribute the software,
as long as it remains GPL.&lt;/p&gt;
&lt;p&gt;Like previous versions, we provide packages for Ubuntu. If you already
installed it, it will be updated automatically. Otherwise, it's just simple as :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo add-apt-repository ppa:mathieu.leplatre/subtivals
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install subtivals
&lt;/pre&gt;
&lt;p&gt;Demo versions can be downloaded though for &lt;a class="reference external" href="http://mathieu-leplatre.info/media/subtivals/"&gt;Mac OS and Windows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We still follow &lt;a class="reference external" href="http://gcompris.net/-Download-"&gt;Bruno’s approach&lt;/a&gt; :
we sell the installers on proprietary operating systems, in order to promote GNU/Linux.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 07 Jun 2013 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-06-07:news-about-subtivals.html</guid><category>subtivals</category><category>subtitles</category><category>accessibility</category><category>qt</category><category>c++</category></item><item><title>Drape lines on a DEM with PostGIS</title><link>http://blog.mathieu-leplatre.info/drape-lines-on-a-dem-with-postgis.html</link><description>&lt;p&gt;This article gives a few SQL commands to drape 2D geometries on a DEM (&lt;em&gt;Digital Elevation Model&lt;/em&gt;), in order to obtain 3D geometries.
We use PostGIS 2, and its rasters support especially.&lt;/p&gt;
&lt;div class="section" id="load-your-dem"&gt;
&lt;h2&gt;Load your DEM&lt;/h2&gt;
&lt;p&gt;Assuming you have a DEM compatible with GDAL, you can easily load the raster into the database using these commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reprojects&lt;/strong&gt; to specified SRID, &lt;strong&gt;crops&lt;/strong&gt; to specified extent, and writes output in a file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gdalwarp -t_srs EPSG:32632 -te &lt;span class="m"&gt;289942&lt;/span&gt; &lt;span class="m"&gt;4845809&lt;/span&gt; &lt;span class="m"&gt;400671&lt;/span&gt; &lt;span class="m"&gt;4947295&lt;/span&gt; dem_file.geotif output.bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tiles into 100 pixels squares and &lt;strong&gt;converts to SQL&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;raster2pgsql -c -C -I -M -t 100x100 output.bin mnt &amp;gt; output.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Load SQL&lt;/strong&gt; into database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;psql -d yourdb &amp;lt; output.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/postgis_dem_qgis.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="drape-geometries"&gt;
&lt;h2&gt;Drape geometries&lt;/h2&gt;
&lt;p&gt;There are at least 3 strategies to drape your geometries.&lt;/p&gt;
&lt;div class="section" id="with-geometry-resolution"&gt;
&lt;h3&gt;With geometry resolution&lt;/h3&gt;
&lt;p&gt;We obtain one elevation value per point on your line.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;: You keep your original geometry resolution (number of points)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;: You potentially loose a lot of 3D information (think of &amp;quot;hops&amp;quot;)&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/postgis_dem_native.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- From an arbitrary line&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SRID=32632;LINESTRING (348595 4889225,352577 4887465,354784 4883841)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;points2d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- Extract its points&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_DumpPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;cells&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- Get DEM elevation for each&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ST_Value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points2d&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
     &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ST_Intersects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="c1"&gt;-- Instantiate 3D points&lt;/span&gt;
  &lt;span class="n"&gt;points3d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_SetSRID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_MakePoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ST_Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;32632&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;-- Build 3D line from 3D points&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_MakeLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; by Daniel Gerber: if the line goes outside your DEM, use a left join (&lt;tt class="docutils literal"&gt;FROM points2d LEFT OUTER JOIN elevation ON &lt;span class="pre"&gt;ST_Intersects(...)&lt;/span&gt;&lt;/tt&gt;) and set default value to 0.0 with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;coalesce(ST_Value(..),&lt;/span&gt; 0.0)&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="with-dem-resolution"&gt;
&lt;h3&gt;With DEM resolution&lt;/h3&gt;
&lt;p&gt;We obtain one elevation value per cell of your raster.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;: You take full advantage of your DEM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;: You may increase tremendously the resolution of geometries&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/postgis_dem_full.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- From an arbitrary line&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SRID=32632;LINESTRING (348595 4889225,352577 4887465,354784 4883841)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;cells&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- Get DEM elevation for each intersected cell&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_Centroid&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;ST_Intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_Intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
     &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ST_Intersects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="c1"&gt;-- Instantiate 3D points, ordered on line&lt;/span&gt;
  &lt;span class="n"&gt;points3d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_SetSRID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_MakePoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ST_Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;32632&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
     &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;ST_Distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_StartPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;-- Build 3D line from 3D points&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_MakeLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sampling"&gt;
&lt;h3&gt;Sampling&lt;/h3&gt;
&lt;p&gt;We obtain one elevation value per step of X units (meters).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;: You control the resulting resolution&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;: Sometimes hard to find a good balance depending on geometries extents&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/postgis_dem_sampled.png" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- From an arbitrary line&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SRID=32632;LINESTRING (348595 4889225,352577 4887465,354784 4883841)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;linemesure&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- Add a mesure dimension to extract steps&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_AddMeasure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ST_Length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;linem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ST_Length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;points2d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_GeometryN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_LocateAlong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;linem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;linemesure&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;cells&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="c1"&gt;-- Get DEM elevation for each&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ST_Value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points2d&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
     &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ST_Intersects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="c1"&gt;-- Instantiate 3D points&lt;/span&gt;
  &lt;span class="n"&gt;points3d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_SetSRID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_MakePoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ST_Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;32632&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;-- Build 3D line from 3D points&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_MakeLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="as-a-postgresql-function"&gt;
&lt;h3&gt;As a PostgreSQL function&lt;/h3&gt;
&lt;p&gt;You can define a function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="k"&gt;REPLACE&lt;/span&gt; &lt;span class="k"&gt;FUNCTION&lt;/span&gt; &lt;span class="n"&gt;drape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;RETURNS&lt;/span&gt; &lt;span class="n"&gt;geometry&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="err"&gt;$$&lt;/span&gt;
&lt;span class="k"&gt;DECLARE&lt;/span&gt;
    &lt;span class="n"&gt;line3d&lt;/span&gt; &lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;BEGIN&lt;/span&gt;
    &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;
         &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_MakeLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;geom3d&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;RETURN&lt;/span&gt; &lt;span class="n"&gt;geom3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;$$&lt;/span&gt; &lt;span class="k"&gt;LANGUAGE&lt;/span&gt; &lt;span class="n"&gt;plpgsql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And drape your geometries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- Add a column to your table&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;yourtable&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="n"&gt;geom_3d&lt;/span&gt; &lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LineStringZ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32632&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- Fill it&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;yourtable&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;geom_3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;drape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="altimetric-profiles"&gt;
&lt;h2&gt;Altimetric profiles&lt;/h2&gt;
&lt;p&gt;We obtain a basic chart, where you have the distance in abscissa and altitude in ordinate. This SQL query returns 2 columns, &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; axis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ST_DumpPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom_3d&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ST_StartPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom_3d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt;
     &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;yourtable&lt;/span&gt;
     &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;ST_distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ST_Z&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;points3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you can apply a different strategy at this stage, and get full resolution or sampled altimetric profiles...&lt;/p&gt;
&lt;p&gt;Drop a comment if anything is not clear :)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 30 Apr 2013 10:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-04-30:drape-lines-on-a-dem-with-postgis.html</guid><category>postgis</category><category>sql</category></item><item><title>Test your Leaflet applications with Mocha</title><link>http://blog.mathieu-leplatre.info/test-your-leaflet-applications-with-mocha.html</link><description>&lt;p&gt;Pretty much like &lt;a class="reference external" href="https://nicolas.perriault.net/code/2013/why_javascript/"&gt;n1k0&lt;/a&gt;, I feel like I had learned Javascript three or four times, from the &lt;tt class="docutils literal"&gt;alert()&lt;/tt&gt; back in 1997 to this article about automatic testing. I must admit that, lately, most of my progress in Javascript comes from using and hacking Leaflet &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;, but I hadn't gone as far as unit testing until now !&lt;/p&gt;
&lt;p&gt;These are some notes about me getting started with using &lt;a class="reference external" href="http://visionmedia.github.com/mocha/#browser-support"&gt;Mocha&lt;/a&gt; and &lt;a class="reference external" href="http://leafletjs.com"&gt;Leaflet&lt;/a&gt;. If what you read is not clear or simply wrong, please let me know or &lt;a class="reference external" href="https://github.com/leplatrem/blog.mathieu-leplatre.info"&gt;fork it directly&lt;/a&gt; so that everybody can learn !&lt;/p&gt;
&lt;div class="section" id="goals"&gt;
&lt;h2&gt;Goals&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Test your Javascript code to prevent regressions, just as you already do with Python ;&lt;/li&gt;
&lt;li&gt;Run test suites from command-line, especially for &lt;a class="reference external" href="http://jenkins-ci.org"&gt;CI&lt;/a&gt; ;&lt;/li&gt;
&lt;li&gt;Learn something new and practical !&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many ways to achieve this, you might have spotted &lt;em&gt;QUnit&lt;/em&gt; or &lt;em&gt;Jasmine&lt;/em&gt;. We also like &lt;em&gt;CasperJS&lt;/em&gt;, coupled with &lt;em&gt;resurectio&lt;/em&gt;, but this would be more adapted to navigation automation or functional tests.&lt;/p&gt;
&lt;p&gt;I chose &lt;em&gt;Mocha&lt;/em&gt; since it seems to be well suited for unit tests and command-line usage. And since &lt;a class="reference external" href="https://github.com/Leaflet/Leaflet/issues/1428"&gt;there is a pull-request&lt;/a&gt; for switching from &lt;em&gt;Jasmine&lt;/em&gt; to &lt;em&gt;Mocha&lt;/em&gt; in Leaflet core... why not !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-run-the-suite"&gt;
&lt;h2&gt;First, run the suite&lt;/h2&gt;
&lt;p&gt;Get your hand on the &lt;tt class="docutils literal"&gt;npm&lt;/tt&gt; command (comes with &lt;tt class="docutils literal"&gt;nodejs&lt;/tt&gt; package in Ubuntu)&lt;/p&gt;
&lt;p&gt;Create a &lt;tt class="docutils literal"&gt;package.json&lt;/tt&gt; file with your application description. There are plenty of examples, just make sure you require the right stuff :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourapp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yourapp.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;make test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;leaflet&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;mocha&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And fetch !&lt;/p&gt;
&lt;pre class="literal-block"&gt;
npm install
&lt;/pre&gt;
&lt;p&gt;Create &lt;tt class="docutils literal"&gt;yourapp.js&lt;/tt&gt; with simple and stupid stuff :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;compute&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And create a test for it in &lt;tt class="docutils literal"&gt;test/beginner.js&lt;/tt&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Use require only if available (ran from Node)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;function&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;assert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;leaflet/src/Leaflet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./../yourapp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Test function call&lt;/span&gt;
&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;compute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;should be ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compute&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
     &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Admire the result !&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;#64;./node_modules/.bin/mocha
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="make-it-run-in-the-browser-too"&gt;
&lt;h2&gt;Make it run in the browser too&lt;/h2&gt;
&lt;p&gt;So far we do not rely too much on Leaflet :) But in a real application test, we will quickly need a &lt;tt class="docutils literal"&gt;L.Map&lt;/tt&gt; instance, along with a DOM most probably.&lt;/p&gt;
&lt;p&gt;By turning on the &lt;em&gt;Mocha&lt;/em&gt; HTML runner, we can indeed run tests from a web browser. But since the console remains one of our goals, we add &lt;a class="reference external" href="https://github.com/metaskills/mocha-phantomjs/#readme"&gt;mocha-phantomjs&lt;/a&gt; in the scene !&lt;/p&gt;
&lt;p&gt;Install &lt;tt class="docutils literal"&gt;phantomjs&lt;/tt&gt; and add it to the &lt;tt class="docutils literal"&gt;PATH&lt;/tt&gt; (the Ubuntu package does that for you). Then modify your &lt;tt class="docutils literal"&gt;package.json&lt;/tt&gt; to add &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;mocha-phantomjs&lt;/span&gt;&lt;/tt&gt; as a &lt;em&gt;devDependency&lt;/em&gt;. Re-run &lt;tt class="docutils literal"&gt;npm install&lt;/tt&gt; to fetch it.&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;mocha-phantomjs&lt;/em&gt;, we will be able to run tests from within a browser &lt;strong&gt;and&lt;/strong&gt; from the command-line. The entry point will be the following &lt;tt class="docutils literal"&gt;test/index.html&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Mocha&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/html; charset=UTF-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../node_modules/mocha/mocha.css&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mocha&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;map&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display: none; height: 300px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../node_modules/mocha/mocha.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../node_modules/leaflet/debug/leaflet-include.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../yourapp.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fitWorld&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;mocha&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bdd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;begginner.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mochaPhantomJS&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mocha&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the page locally or run in console with :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;#64;./node_modules/mocha-phantomjs/bin/mocha-phantomjs test/index.html
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;PhantomJS&lt;/em&gt; is installed by default on Travis by the way :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="spying-and-mocking"&gt;
&lt;h2&gt;Spying and mocking&lt;/h2&gt;
&lt;p&gt;One of the popular tools in JS testing is &lt;a class="reference external" href="http://sinonjs.org"&gt;Sinon.js&lt;/a&gt;. There are many useful features allowing to spy and mock behaviour of your application components or dependencies (events, AJAX requests, errors, timers, etc.)&lt;/p&gt;
&lt;p&gt;For example, let's test that events are thrown as we expect :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;snap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fire&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test event with a &lt;em&gt;spy&lt;/em&gt; callback :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event is thrown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
         &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sinon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
     &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

     &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;YourApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

     &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;called&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Faking user inputs is also possible using &lt;a class="reference external" href="https://github.com/tmcw/happen#readme"&gt;happen&lt;/a&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zoom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zooms-in with double click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getZoom&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

     &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zoomend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getZoom&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;off&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zoomend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
     &lt;span class="p"&gt;});&lt;/span&gt;

     &lt;span class="c1"&gt;// Simulate double-click&lt;/span&gt;
     &lt;span class="nx"&gt;happen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dblclick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="real-world-example"&gt;
&lt;h2&gt;Real world example&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/bbecquet"&gt;Benjamin Becquet&lt;/a&gt; implemented &lt;a class="reference external" href="https://github.com/bbecquet/Leaflet.PolylineDecorator"&gt;some linear referencing utilities&lt;/a&gt; for Leaflet. So did we last year at &lt;a class="reference external" href="http://makina-corpus.com"&gt;Makina Corpus&lt;/a&gt; ! We thus decided to merge our code base in a proper way :)&lt;/p&gt;
&lt;p&gt;We both are making our first steps with &lt;em&gt;Mocha&lt;/em&gt;, and didn't really started to build up the whole code, but you still can have a look at &lt;a class="reference external" href="https://github.com/makinacorpus/Leaflet.GeometryUtil"&gt;the repository&lt;/a&gt;, for its Makefile, Travis setup, usage of JSDocs or Chai.js...&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;By the way, &lt;em&gt;Secrets of the Javascript Ninja&lt;/em&gt; by John Resig and Bear Bibeault is a wonderful book !&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 29 Mar 2013 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-03-29:test-your-leaflet-applications-with-mocha.html</guid><category>leaflet</category><category>gis</category><category>mocha</category><category>javascript</category></item><item><title>Subtivals, ready for Cinelatino !</title><link>http://blog.mathieu-leplatre.info/subtivals-ready-for-cinelatino.html</link><description>&lt;p&gt;The &lt;a class="reference external" href="http://www.cinelatino.com.fr"&gt;film festival CineLatino in Toulouse&lt;/a&gt;
opens its doors today ! And I've just delivered the source package of version Subtivals 1.5.0
to the building robots of Launchpad !&lt;/p&gt;
&lt;img alt="" class="align-left" src="/images/symbol-deafness.png" /&gt;
&lt;p&gt;During the festival, Subtivals will not simply be used for captioning, it will be the
key tool for the &lt;a class="reference external" href="http://www.cinelatino.com.fr/contenu/accessibilite-pour-les-sourds-2013"&gt;projection of two movies specifically&lt;/a&gt;,
for which some very rich deaf-specific subtitles have been prepared !&lt;/p&gt;
&lt;p&gt;As the same time, we are receiving very positive feedback from users in Turkey,
Poland, Greece... thank you all !&lt;/p&gt;
&lt;div class="section" id="now-a-mac-os-x-demo"&gt;
&lt;h2&gt;Now a Mac OS X demo&lt;/h2&gt;
&lt;p&gt;In addition to the &lt;a class="reference external" href="http://mathieu-leplatre.info/media/subtivals/subtivals-setup-1.4.1-demo.exe"&gt;Windows demo version&lt;/a&gt;, &lt;a class="reference external" href="http://twitter.com/mallox"&gt;mallox&lt;/a&gt;
packaged a &lt;a class="reference external" href="http://mathieu-leplatre.info/media/subtivals/subtivals-setup-1.4.0-demo.dmg"&gt;Mac OS X automatic installer&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-1.4-macos.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="whats-new-in-1-5"&gt;
&lt;h2&gt;What’s new in 1.5&lt;/h2&gt;
&lt;p&gt;We mainly reworked the subtitle positioning system, in order to support
linespacing control, absolute and relative positions, using &lt;tt class="docutils literal"&gt;PlayResX&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;PlayResY&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/traxtech/subtivals/blob/master/debian/changelog"&gt;Changelog for more info...&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="get-it"&gt;
&lt;h2&gt;Get it !&lt;/h2&gt;
&lt;p&gt;Subtivals is released under &lt;a class="reference external" href="http://www.gnu.org/copyleft/gpl.html"&gt;GPL&lt;/a&gt;,
this means you can use, access the source code, modify, package, distribute the software,
as long as it remains GPL.&lt;/p&gt;
&lt;p&gt;Like previous versions, we provide packages for Ubuntu. If you already
installed it, it will be updated automatically. Otherwise, it's just simple as :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo add-apt-repository ppa:mathieu.leplatre/subtivals
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install subtivals
&lt;/pre&gt;
&lt;p&gt;Regarding Mac OS and Windows, we still follow &lt;a class="reference external" href="http://gcompris.net/-Download-"&gt;Bruno’s approach&lt;/a&gt; :
we sell the installers on proprietary operating systems, in order to promote GNU/Linux.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-03-15:subtivals-ready-for-cinelatino.html</guid><category>subtivals</category><category>subtitles</category><category>toulouse</category><category>accessibility</category><category>qt</category><category>c++</category></item><item><title>Django : Do not forget Do Not Track</title><link>http://blog.mathieu-leplatre.info/django-do-not-forget-do-not-track.html</link><description>&lt;p&gt;If you (fooly) Sail© on the Web® without &lt;a class="reference external" href="http://www.ghostery.com/"&gt;Ghostery™&lt;/a&gt;,
this website is currently tracking you. Sad news, but there are indeed 3 widgets
(Disqus, Piwik and Twitter on the About page) that may collect data about your presence here.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://www.mozilla.org/en-US/dnt/"&gt;Do-Not-Track&lt;/a&gt; initiative consists in
avoiding user tracking, using an HTTP header, sent by the browser.
It is a voluntary process, and we should honour it when we can ! &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a quick way of respecting privacy in your Django websites.&lt;/p&gt;
&lt;p&gt;We use a context processor to spread the word accross all templates.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# context_processors.py&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;donottrack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;donottrack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;HTTP_DNT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then disable spying widgets and tools, such as Google Analytics...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load ganalytics %}

{% if not donottrack %}
  {% ganalytics %}
{% endif %}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;...or share buttons !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;social-buttons cf&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  {% if donottrack %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://wikipedia.org/wiki/Do_Not_Track&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{% trans &amp;quot;Do-Not-Track is set.&amp;quot; %}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  {% else %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//twitter.com/share&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socialite twitter-share&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-text=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ TITLE }} {{ URL }}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vhidden&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{% trans &amp;quot;Twitter&amp;quot; %}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  {% endif %}
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now need a middleware to add vary headers (for cache control), since content
depends on this header.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# middleware.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.cache&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patch_vary_headers&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DoNotTrackMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;patch_vary_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DNT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add those to your &lt;tt class="docutils literal"&gt;TEMPLATE_CONTEXT_PROCESSORS&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;MIDDLEWARE_CLASSES&lt;/tt&gt; settings and you're done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; : There are reusable apps doing just that if you prefer : &lt;a class="reference external" href="https://github.com/mozilla/django-dnt"&gt;django-dnt&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/benspaulding/django-donottrack/"&gt;django-donottrack&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I wonder how I could do that with a static blog. Using headers-based rewrite condition ?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 01 Mar 2013 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-03-01:django-do-not-forget-do-not-track.html</guid><category>django</category><category>mozilla</category><category>privacy</category></item><item><title>Subtivals 1.4 is out</title><link>http://blog.mathieu-leplatre.info/subtivals-14-is-out.html</link><description>&lt;p&gt;Since the &lt;a class="reference external" href="/announcing-subtivals-realtime-subtitles-for-film-festivals.html"&gt;article introducing Subtivals&lt;/a&gt; was
published, a lot of exciting things happened ! The first reward was the
&lt;a class="reference external" href="http://www.cinelatino.com.fr/"&gt;festival of Cinelatino&lt;/a&gt; in Toulouse, which had a major focus on accessibility this year.
Subtivals was used successfully : subtitles had never been so beautiful and refined,
and the public really acknowledged the efforts !&lt;/p&gt;
&lt;p&gt;Along the year we were in contact with people from Spain, Portugal, Canada,
Lebanon, Greece, Russia, Mexico... and the interest they showed in our tool
really made us cheerful and enthusiasts ! We had the proof that Subtivals
can be used in many contexts, from primary school performances to short-movie
festivals, through cinematheques and movie transcribers...&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-arabic.png" /&gt;
&lt;div class="section" id="subtivals-a-surtitling-captioning-subtitling-program"&gt;
&lt;h2&gt;Subtivals, a surtitling / captioning / subtitling program&lt;/h2&gt;
&lt;p&gt;I usually have difficulties at explaining Subtivals goals, since its usage
is very specific to the world of movie projection.&lt;/p&gt;
&lt;p&gt;In addition, the activity of projecting subtitles on top of a movie has many names (soft-titling, surtitling,
supertitling, electronic subtitles, virtual subtitles or even &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Closed_captioning"&gt;closed
captioning&lt;/a&gt;...) making it harder for such
a tool to become visible on the Web.&lt;/p&gt;
&lt;p&gt;Subtivals won’t transcribe sound and perform voice recognition ! It is a
projection software, with fancy subtitles and advanced positioning, necessary
to reproduce music, ambiance, dialogs and context for the hard of hearing.&lt;/p&gt;
&lt;p&gt;Subtivals is very stable, very easy, very comfortable for the operator,
and particularly bullet-proof : subtitling should never fail in live!
Its particular strength lies in the control of the projection,
with a very good cooperation between automatic and manual modes.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-1.4dev-crop-win32.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="whats-new-in-1-4"&gt;
&lt;h2&gt;What’s new in 1.4&lt;/h2&gt;
&lt;p&gt;Since the version 1.0, we improved a lot of things, and added many features
(see &lt;a class="reference external" href="https://github.com/traxtech/subtivals/blob/master/debian/changelog"&gt;changelog&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Among them :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Subrip (SRT) support&lt;/li&gt;
&lt;li&gt;Subtitles progress highlighting&lt;/li&gt;
&lt;li&gt;Better interactions (shortcuts, scrolling)&lt;/li&gt;
&lt;li&gt;Text outlining and fullscreen&lt;/li&gt;
&lt;li&gt;Characters per second feedback&lt;/li&gt;
&lt;li&gt;ASS absolute positioning support&lt;/li&gt;
&lt;li&gt;Styles edition (colors, font, size, margins, alignments)&lt;/li&gt;
&lt;li&gt;Better calibration screen&lt;/li&gt;
&lt;li&gt;Mac OS version installation package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From now, if you have a video mixer, with chroma-key support, then a separate
projector is not necessary for inlaying subtitles !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-chromakey.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="get-it"&gt;
&lt;h2&gt;Get it !&lt;/h2&gt;
&lt;p&gt;Subtivals is released under &lt;a class="reference external" href="http://www.gnu.org/copyleft/gpl.html"&gt;GPL&lt;/a&gt;,
this means you can use, access the source code, modify, package, distribute the software,
as long as it remains GPL.&lt;/p&gt;
&lt;p&gt;Like previous versions, we provide packages for Ubuntu. If you already
installed it, it will be updated automatically. Otherwise, it's just simple as :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo add-apt-repository ppa:mathieu.leplatre/subtivals
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install subtivals
&lt;/pre&gt;
&lt;p&gt;Regarding Mac OS and Windows, we still follow &lt;a class="reference external" href="http://gcompris.net/-Download-"&gt;Bruno’s approach&lt;/a&gt; :
we sell the installers on proprietary operating systems, in order to promote GNU/Linux.&lt;/p&gt;
&lt;p&gt;But from now on, we also distribute a demo version ! &lt;a class="reference external" href="http://mathieu-leplatre.info/media/subtivals/subtivals-setup-1.4.1-demo.exe"&gt;Download it
here&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 08 Jan 2013 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2013-01-08:subtivals-14-is-out.html</guid><category>subtivals</category><category>subtitles</category><category>accessibility</category><category>qt</category><category>c++</category></item><item><title>Cheap debugging of PostgreSQL triggers in Django</title><link>http://blog.mathieu-leplatre.info/cheap-debugging-of-postgresql-triggers-in-django.html</link><description>&lt;p&gt;Lately, we were hacking on PostgreSQL (PostGIS) triggers, and we quickly felt
like debugging our code... Here is a cheap and quick way of printing out
triggers variables and context through Django.&lt;/p&gt;
&lt;div class="section" id="postgresql-server-configuration"&gt;
&lt;h2&gt;PostgreSQL server configuration&lt;/h2&gt;
&lt;p&gt;In &lt;em&gt;postgresql.conf&lt;/em&gt;, adjust the minimum level of notice sent to the client :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
client_min_messages = log
&lt;/pre&gt;
&lt;p&gt;Note that this does not affect logging verbosity on server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="catch-messages-in-django"&gt;
&lt;h2&gt;Catch messages in Django&lt;/h2&gt;
&lt;p&gt;For a specific model :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or globally, using &lt;tt class="docutils literal"&gt;post_save&lt;/tt&gt; signals &lt;em&gt;(can be verbose)&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models.signals&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;post_save&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_notices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;
&lt;span class="n"&gt;post_save&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;show_notices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="let-your-trigger-be-talkative"&gt;
&lt;h2&gt;Let your trigger be talkative&lt;/h2&gt;
&lt;p&gt;You can basically print out values, arrays, functions results, records...&lt;/p&gt;
&lt;pre class="literal-block"&gt;
RAISE LOG '% has geom %', NEW.id, ST_AsEWKT(NEW.geom);
&lt;/pre&gt;
&lt;p&gt;Will output something like &lt;tt class="docutils literal"&gt;LOG:&amp;nbsp; 3 has geom SRID=4326;POINT(0 0)&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FOR record IN SELECT * FROM table
LOOP
    RAISE LOG 'Found %', record;
END LOOP;
&lt;/pre&gt;
&lt;p&gt;Will output something like &lt;tt class="docutils literal"&gt;LOG:&amp;nbsp; Found (a,b,c)&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
intersections_on_new := ARRAY[]::float[];
FOR pk IN SELECT ST_Line_Locate_Point(NEW.geom, (ST_Dump(ST_Intersection(other.geom, NEW.geom))).geom)
LOOP
    intersections_on_new := array_append(intersections_on_new, pk);
END LOOP;
RAISE LOG 'Intersects at %', intersections_on_new;
&lt;/pre&gt;
&lt;p&gt;Will output something like &lt;tt class="docutils literal"&gt;LOG:&amp;nbsp; Intersects at {0.5,0.3}&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-more-thing"&gt;
&lt;h2&gt;One more thing...&lt;/h2&gt;
&lt;p&gt;If you load your triggers source file through Django (like a &lt;tt class="docutils literal"&gt;post_migrate&lt;/tt&gt; signal or so),
and thus with &lt;em&gt;psycopg2&lt;/em&gt;, you might face that nasty internal quirck :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
postgresql_psycopg2/base.py&amp;quot;, line 52, in execute
    return self.cursor.execute(query, args)
IndexError: tuple index out of range
&lt;/pre&gt;
&lt;p&gt;This is due to &lt;tt class="docutils literal"&gt;%&lt;/tt&gt; characters, that you have to escape, replacing them with &lt;tt class="docutils literal"&gt;%%&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 22 Oct 2012 12:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-10-22:cheap-debugging-of-postgresql-triggers-in-django.html</guid><category>django</category><category>postgresql</category><category>postgis</category></item><item><title>Leaflet Tiles in Lambert 93 projection (2154)</title><link>http://blog.mathieu-leplatre.info/leaflet-tiles-in-lambert-93-projection-2154.html</link><description>&lt;div class="section" id="what-purpose"&gt;
&lt;h2&gt;What purpose ?&lt;/h2&gt;
&lt;p&gt;Ideally, unless living in Lapland, we should not be bothered that much about maps projections !
Unfortunately, in practice, there are a few contexts in which you simply
can't avoid braving them. For example, if you must show a raster layer with texts, and don't control its production.&lt;/p&gt;
&lt;p&gt;Reprojected pictures loose sharpness ! Your map may have to support the original
local projection.&lt;/p&gt;
&lt;p&gt;Let's see what Leaflet offers on this matter...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configuring-the-map"&gt;
&lt;h2&gt;Configuring the map&lt;/h2&gt;
&lt;p&gt;My knowledge about local projections machinery is (very) light !&lt;/p&gt;
&lt;p&gt;I could demystify a couple of concepts with, among others, Tom Mac Wright's &lt;a class="reference external" href="http://macwright.org/2012/01/27/projections-understanding.html"&gt;educational&lt;/a&gt;
&lt;a class="reference external" href="http://macwright.org/2012/05/15/how-web-maps-work.html"&gt;articles&lt;/a&gt; and &lt;a class="reference external" href="http://macwright.org/2012/03/12/project-it-yourself.html"&gt;tools&lt;/a&gt;, or &lt;a class="reference external" href="http://blog.kartena.se/local-projections-in-a-world-of-spherical-mercator/"&gt;Kartena's article on Leaflet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nevertheless, the whole thing is pretty straightforward to setup, especially when
you look at &lt;a class="reference external" href="http://blog.thematicmapping.org/2012/07/using-custom-projections-with-tilecache.html"&gt;Bjorn Sandvik's working example&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;Download Leaflet, Proj4js and Proj4Leaflet, and fasten your seat belt !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;leaflet.css&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/leaflet.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/proj4js-compressed.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/proj4leaflet.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your layer characterics :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Your source tile layer extent, expressed in local projection&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;bbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;700000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6325197&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1060000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6617738&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Maximum resolution in meters per pixel (largest area side / tile size).&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxResolution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1406.25&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Scale for each level&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxResolution&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Coordinate to grid transformation matrix&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;transformation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Transformation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;bbox&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bbox&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assemble in Leaflet :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Official Spatial Reference from http://www.spatialreference.org/ref/epsg/2154/&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;crs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CRS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;proj4js&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;EPSG:2154&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;&amp;#39;+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="nx"&gt;transformation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// required by Leaflet 0.4&lt;/span&gt;

&lt;span class="c1"&gt;// Location of tiles (see next paragraph)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ignLayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TileLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:8080/1.0.0/ign/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;continuousWorld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// very important&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;crs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;continuousWorld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// very important&lt;/span&gt;
    &lt;span class="nx"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ignLayer&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
    &lt;span class="c1"&gt;// Initial view&lt;/span&gt;
    &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;44.65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// Universal Lat/Lng&lt;/span&gt;
    &lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/leaflet-l93.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/kartena/Proj4Leaflet/issues/8"&gt;kokoni&lt;/a&gt; suggests to use
an overlay layer to debug tile numbering :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;canvasTiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tileLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="nx"&gt;canvasTiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;drawTile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tilePoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
     &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;tilePoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;tilePoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvasTiles&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/leaflet-tiles-overlay.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="serve-the-tiles-from-a-wms"&gt;
&lt;h2&gt;Serve the tiles from a WMS&lt;/h2&gt;
&lt;p&gt;Adapt with the &lt;tt class="docutils literal"&gt;bbox&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;maxesolution&lt;/tt&gt;, as in the map, and save this configuration to &lt;em&gt;tilecache.cfg&lt;/em&gt;.
It also assumes to match the &lt;tt class="docutils literal"&gt;scale&lt;/tt&gt; we chose above (divided by 2 at each level) :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[ign]
type=WMSLayer
layers=scan100,scan25
url=http://server.carto.fr/wms?
extension=jpg
tms_type=google
srs=EPSG:2154
bbox=700000,6325197,1060000,6617738
maxResolution=1142.7383

[cache]
type=GoogleDisk
base=/tmp/
&lt;/pre&gt;
&lt;p&gt;In order to run this configuration, just install :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
virtualenv .
source bin/activate
pip install TileCache
pip install Paste
&lt;/pre&gt;
&lt;p&gt;And either run it locally with &lt;tt class="docutils literal"&gt;tilecache_http_server.py&lt;/tt&gt; or tile the pyramid once
with &lt;tt class="docutils literal"&gt;tilecache_seed.py ign 0 10&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Finally, adjust the tile url in your map config !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-impressions"&gt;
&lt;h2&gt;First impressions...&lt;/h2&gt;
&lt;p&gt;It works !&lt;/p&gt;
&lt;p&gt;A couple of things seem implicit, and Leaflet feels a bit fragile with this. Changing
a value somewhere might break an hidden assumption somewhere else.&lt;/p&gt;
&lt;p&gt;Also, the documentation can be misleading : it says to set &lt;tt class="docutils literal"&gt;continuousWorld&lt;/tt&gt; to &lt;em&gt;true&lt;/em&gt; for
things that don't represent the world :)&lt;/p&gt;
&lt;p&gt;We'll try to push Leaflet limits in the next days at &lt;a class="reference external" href="http://makina-corpus.com"&gt;Makina Corpus&lt;/a&gt;, especially 0.4 branch,
we'll keep posting if we face anything worth sharing :)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Sun, 05 Aug 2012 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-08-05:leaflet-tiles-in-lambert-93-projection-2154.html</guid><category>leaflet</category><category>gis</category><category>javascript</category></item><item><title>landez : tiles post-processing</title><link>http://blog.mathieu-leplatre.info/landez-tiles-post-processing.html</link><description>&lt;p&gt;Some weeks ago, I started to refactor &lt;a class="reference external" href="https://github.com/makinacorpus/landez"&gt;landez&lt;/a&gt; (timidly).
But smart caching and post-processing of WMS maps were expected in my last project, so it gave me
a great boost : Landez 2.0 has landed ! :)&lt;/p&gt;
&lt;p&gt;The base code is much clearer, and a few new features came out ! Among them, the ability to
apply image filters to your maps !&lt;/p&gt;
&lt;div class="section" id="grayscale-conversion"&gt;
&lt;h2&gt;Grayscale conversion&lt;/h2&gt;
&lt;p&gt;Not the funniest one of course, but quite handy to highlight map content !&lt;/p&gt;
&lt;img alt="" src="/images/landez-grayscale.jpg" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez.filters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GrayScale&lt;/span&gt;

&lt;span class="n"&gt;overlay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GrayScale&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="color-to-alpha"&gt;
&lt;h2&gt;Color to Alpha&lt;/h2&gt;
&lt;p&gt;If the tiles you overlay are mainly white, they might make your background layer brighter.
Therefore, adding a filter replacing white by transparent will nicely blend your
top layer without lightening the global result :&lt;/p&gt;
&lt;img alt="" src="/images/landez-overlay.jpg" /&gt;
&lt;img alt="" src="/images/landez-blend.jpg" /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TilesManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageExporter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez.filters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ColorToAlpha&lt;/span&gt;

&lt;span class="n"&gt;overlay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TilesManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiles_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://an.osm.mirror.org/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ColorToAlpha&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#ffffff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;orthophoto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageExporter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wms_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://server/wms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="n"&gt;wms_layers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;orthophoto&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;orthophoto&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_layer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="continuous-integration"&gt;
&lt;h2&gt;Continuous Integration&lt;/h2&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://travis-ci.org/#!/makinacorpus/landez"&gt;Travis job&lt;/a&gt; was setup and allows
me to improve the testing strictness :)&lt;/p&gt;
&lt;p&gt;The Travis configuration has some kind of magic, just drop one file and enable the hook in your Github repo :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
language: python
python:
  - 2.6
  - 2.7
install:
  - pip install Pillow
  - python setup.py develop
script:  python -m landez.tests
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps"&gt;
&lt;h2&gt;Next steps...&lt;/h2&gt;
&lt;p&gt;I hope to get the opportunity to develop new post-processing filters, as pretty as those
&lt;a class="reference external" href="http://mapbox.com/blog/tilemill-compositing-operations-preview/"&gt;coming-up in MapBox Tilemill&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;PerryGeo wrote &lt;a class="reference external" href="https://github.com/perrygeo/python-mbtiles"&gt;python-mbtiles&lt;/a&gt;
which might be a good candidate for low-level access of MBTiles content.
I like the idea of a common python stack for reading and writing, it is not very clear to
me &lt;a class="reference external" href="https://github.com/mapbox/mbtiles-spec/wiki/Implementations"&gt;which one&lt;/a&gt; will emerge as the best one though...&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 29 May 2012 14:45:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-05-29:landez-tiles-post-processing.html</guid><category>python</category><category>gis</category><category>landez</category></item><item><title>Serve your map layers with a usual Web hosting service</title><link>http://blog.mathieu-leplatre.info/serve-your-map-layers-with-a-usual-web-hosting-service.html</link><description>&lt;p&gt;Someone asked me about serving map tiles from a basic Web host. I agreed
to reply with a blog post, since it completes the stories I've been telling
in my last &lt;a class="reference external" href="http://www.slideshare.net/makinacorpus/solutions-alternatives-google-maps-11501753"&gt;two&lt;/a&gt;
&lt;a class="reference external" href="/des-cartes-dun-autre-monde-la-suite-fr.html"&gt;talks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;How to serve your map layers (&lt;em&gt;tiles&lt;/em&gt;) with the simplest Apache or nginx ?&lt;/p&gt;
&lt;div class="section" id="get-the-mbtiles-file"&gt;
&lt;h2&gt;Get the MBTiles file&lt;/h2&gt;
&lt;p&gt;We start from a tiles package (&lt;em&gt;MBTiles&lt;/em&gt;). Depending on where your layers come
from, you can either choose :&lt;/p&gt;
&lt;div class="section" id="to-publish-your-tilemill-map"&gt;
&lt;h3&gt;To publish your Tilemill map&lt;/h3&gt;
&lt;p&gt;Design your map in Tilemill, even &lt;a class="reference external" href="http://mapbox.com/tilemill/docs/guides/osm-bright-ubuntu-quickstart/"&gt;your own OpenStreetMap style customization&lt;/a&gt;,
and export it as MBTiles !
&lt;a class="reference external" href="http://mapbox.com/"&gt;MapBox hosting&lt;/a&gt; is the prefered solution, but you can still host and
serve your exported MBTiles file yourself !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="to-mirror-a-wms-server"&gt;
&lt;h3&gt;To mirror a WMS server&lt;/h3&gt;
&lt;p&gt;Again, using &lt;a class="reference external" href="/landez-introducing-new-features-of-our-tiles-toolbox.html"&gt;landez&lt;/a&gt;, you can build a MBTiles
file from a WMS source (&lt;em&gt;orthophoto&lt;/em&gt;...), and then serve those layers yourself as tiles (at the speed of light !).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="to-mirror-tiles-services"&gt;
&lt;h3&gt;To mirror tiles services&lt;/h3&gt;
&lt;p&gt;Using &lt;a class="reference external" href="/landez-introducing-new-features-of-our-tiles-toolbox.html"&gt;landez&lt;/a&gt;, you
can gather tiles from a tiles service, and package them in a &lt;tt class="docutils literal"&gt;.mbtiles&lt;/tt&gt;
file locally.&lt;/p&gt;
&lt;p&gt;If you plan on mirroring public tile services, do not forget to add attributions
and &lt;strong&gt;make sure it respects the terms of service&lt;/strong&gt;. Most services restrict bulk downloads &lt;a class="footnote-reference" href="#id3" id="id2"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="extract-files-on-disk"&gt;
&lt;h2&gt;Extract files on disk&lt;/h2&gt;
&lt;p&gt;Using &lt;a class="reference external" href="https://github.com/mapbox/mbutil"&gt;mbutil&lt;/a&gt;, we can extract the &lt;tt class="docutils literal"&gt;.mbtiles&lt;/tt&gt;
file into a destination folder.&lt;/p&gt;
&lt;p&gt;Unfortunately, the &lt;em&gt;pypi&lt;/em&gt; mirror is quite old, we'll install the last development version.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://github.com/mapbox/mbutil/zipball/master -O mbutil.zip
unzip mbutil
&lt;span class="nb"&gt;cd &lt;/span&gt;mapbox-mbutil*
sudo python setup.py install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done. Now extract. (&lt;em&gt;Note that the ``DEST`` folder must not exist&lt;/em&gt;) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mb-util --scheme&lt;span class="o"&gt;=&lt;/span&gt;osm FILE.mbtiles /path/to/DEST/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your MBTiles has an interaction layer (&lt;em&gt;UTFGrid&lt;/em&gt;), both &lt;tt class="docutils literal"&gt;.png&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;.json&lt;/tt&gt;
files will be expanded in folders.&lt;/p&gt;
&lt;p&gt;Just push the folder to your hosting, and you're done !&lt;/p&gt;
&lt;div class="section" id="cache-headers"&gt;
&lt;h3&gt;Cache headers&lt;/h3&gt;
&lt;p&gt;If you the master on board, tweak the cache headers :&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;Apache&lt;/em&gt; :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ExpiresActive On
ExpiresDefault &amp;quot;access plus 7 days&amp;quot;
Alias /DEST /path/to/DEST/;
&lt;/pre&gt;
&lt;p&gt;With &lt;em&gt;nginx&lt;/em&gt; :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
server {
    location /DEST {
        expires 7d;
        alias /path/to/DEST/;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="boost-with-subdomains"&gt;
&lt;h3&gt;Boost with subdomains&lt;/h3&gt;
&lt;p&gt;Browsers limit parallel downloads on the same domain. If you can declare
subdomains (&lt;em&gt;a.yourserver.org&lt;/em&gt;, &lt;em&gt;b.yourserver.org&lt;/em&gt;, ...), it will speed-up
tiles download.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="use-it-in-your-mapping-library"&gt;
&lt;h2&gt;Use it in your mapping library&lt;/h2&gt;
&lt;p&gt;With &lt;a class="reference external" href="http://leaflet.cloudmade.com"&gt;Leaflet&lt;/a&gt; for example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TileLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://{s}.yourserver.org/DEST/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;43.60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.45&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or &lt;a class="reference external" href="http://modestmaps.com"&gt;Modestmaps&lt;/a&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TemplatedLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://{s}.yourserver.org/DEST/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCenter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;43.60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lon&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.45&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;setZoom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will also work with interaction layers if you use &lt;a class="reference external" href="http://mapbox.com/wax/"&gt;Wax&lt;/a&gt; :)&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;MapBox &lt;a class="reference external" href="http://mapbox.com/tos/"&gt;strictly forbids&lt;/a&gt; proxying and further distribution of their tiles.
Bulk downloading from OpenStreetMap.org &lt;a class="reference external" href="http://wiki.openstreetmap.org/wiki/Tile_usage_policy#Bulk_Downloading"&gt;is strongly discouraged too&lt;/a&gt;.
And mass downloads &lt;a class="reference external" href="http://support.cloudmade.com/answers/offline-maps"&gt;cost money on Cloudmade&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Sat, 05 May 2012 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-05-05:serve-your-map-layers-with-a-usual-web-hosting-service.html</guid><category>tilemill</category><category>landez</category><category>mbutil</category><category>gis</category></item><item><title>Simple and funky Web map printing</title><link>http://blog.mathieu-leplatre.info/simple-and-funky-web-map-printing.html</link><description>&lt;p&gt;Strangely, users still insist in having Web page print capabilities, mostly to
share, export or archive what they see. Even if relevant permalinks are
often acceptable, we can't always dissuade them from printing :)&lt;/p&gt;
&lt;p&gt;And when it comes to Web maps, printing can be a nightmare ! Even though most of the time,
the needs involve a nice landscape PDF file with the map, a legend and the company logo.
For this, designing CSS print stylesheets and using the browser &lt;em&gt;print&lt;/em&gt; shortcut is not always
helpful.&lt;/p&gt;
&lt;p&gt;I present here a simple solution &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; based on headless Webkit screenshots, permalinks,
SVG templates (&lt;em&gt;WYSIWYG&lt;/em&gt;), and PDF conversion.&lt;/p&gt;
&lt;div class="section" id="what-you-see-is-what-you-print"&gt;
&lt;h2&gt;What You See Is What You Print&lt;/h2&gt;
&lt;p&gt;In the following (short) video, we can see :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a map with dynamic content (&lt;em&gt;GeoJSON&lt;/em&gt;), bound to a form for attribute filtering and a legend
refreshed upon data ranges modifications ;&lt;/li&gt;
&lt;li&gt;a &lt;em&gt;Print&lt;/em&gt; button that delivers the current view as &lt;em&gt;PDF&lt;/em&gt; ;&lt;/li&gt;
&lt;li&gt;a landscape printout in which the map view, the legend, the filter form values were nicely inserted.&lt;/li&gt;
&lt;/ul&gt;
&lt;video id="webprint" width="560" controls="controls"&gt;
  &lt;source src="http://mathieu-leplatre.info/media/20120501-print.ogv" type="video/ogg" /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;&lt;p&gt;(&lt;em&gt;BTW, small boo-boo in last screen: 'montain' instead of 'mountain'&lt;/em&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kids-you-can-do-this-at-home"&gt;
&lt;h2&gt;Kids, you can do this at home&lt;/h2&gt;
&lt;p&gt;Here is how we did it :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a Web page with a &amp;quot;stateful&amp;quot; permalink (&lt;em&gt;i.e. restore the map and page state using anchors, location hash, etc. ;&lt;/em&gt;).
Backbone.js &amp;amp; co. are meant for this ;&lt;/li&gt;
&lt;li&gt;A color scale built client-side from the resulting dataset, using &lt;a class="reference external" href="https://github.com/gka/chroma.js"&gt;Chroma.js&lt;/a&gt;,
to colorize the map items and populate the legend entries ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/django-screamshot"&gt;django-screamshot&lt;/a&gt;, a Web page
screenshot application, relying on &lt;a class="reference external" href="http://casperjs.org/"&gt;CasperJS&lt;/a&gt;. Spooky! ;&lt;/li&gt;
&lt;li&gt;a SVG landscape A4 document, edited with &lt;em&gt;Inkscape&lt;/em&gt;, as a Django template in which we placed simple tags (&lt;tt class="docutils literal"&gt;{{ filter.age_min }}&lt;/tt&gt;) for texts,
the &lt;tt class="docutils literal"&gt;{% base64capture %}&lt;/tt&gt; tag for the map screenshot, and a couple of arithmetics tags to
recreate a nice vectorial legend using the color scale entries;&lt;/li&gt;
&lt;li&gt;a Django view that receives the current page context (posted in &lt;em&gt;JS&lt;/em&gt;), renders the SVG (&lt;em&gt;will thus perform the screenshot&lt;/em&gt;),
and converts it to PDF ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quite straightforward, a couple of hours to put together, relatively easy
to deploy, obviously meet most users needs... these hacks are our happiness !&lt;/p&gt;
&lt;p&gt;If you want to know more about some missing parts, feel free to ask ! I could release stuff or just post some snippets...&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;from now on, I shall precise : even if it can cover most needs, it won't be adequate in all situations.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 02 May 2012 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-05-02:simple-and-funky-web-map-printing.html</guid><category>print</category><category>django</category><category>web</category><category>gis</category><category>django-screamshot</category></item><item><title>Des cartes d'un autre monde, la suite</title><link>http://blog.mathieu-leplatre.info/des-cartes-dun-autre-monde-la-suite-fr.html</link><description>&lt;div class="section" id="bravo-aux-organisateurs"&gt;
&lt;h2&gt;Bravo aux organisateurs !&lt;/h2&gt;
&lt;p&gt;L'édition 2012 des rencontres Django-fr a mis la barre très haut ! Ce fut un plaisir
de retrouver, ou rencontrer, autant de gens sympathiques et intéressants dans un cadre
aussi agréable :)&lt;/p&gt;
&lt;p&gt;Comme l'a souligné Olivier &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;, cela va bien au delà de la techno qui fédère la communauté ;
les membres partagent aussi un esprit, une vision, des approches, qui transpassent
l'outil ! Agilité, pragmatisme, KISS, DRY, PEP20...&lt;/p&gt;
&lt;p&gt;Au menu, les problématiques de scaling étaient prédominantes, Django propulse des sites à
gros volume, comme &lt;em&gt;Liberation.fr&lt;/em&gt;, &lt;em&gt;20minutes.fr&lt;/em&gt;, &lt;em&gt;Mozilla&lt;/em&gt;, &lt;em&gt;Autolib&lt;/em&gt;, représentés
pendant ces rencontres, mais aussi &lt;em&gt;Instagram&lt;/em&gt;, &lt;em&gt;Lanyrd&lt;/em&gt;, &lt;em&gt;Disqus&lt;/em&gt;... autant d'expériences à partager!
Ce fut aussi un honneur d'accueillir deux invités nord-américains, python Lords chez &lt;em&gt;Heroku&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Cette année, je présentais une approche à contre-courant pour publier des données
cartographiques sur le Web :&lt;/p&gt;
&lt;blockquote&gt;
“ Comment publier des données cartographiques, aussi simplement qu'on
publie une image ? Il existe un monde où Django expose lui-même des
cartes interactives, sans déployer l'artillerie habituelle !
Une approche à contre-courant se prêtant parfaitement à la mise en
valeur quasi-immédiate d'informations geographiques, comme celles
libérées par votre ville ! ”&lt;/blockquote&gt;
&lt;iframe src="http://www.slideshare.net/slideshow/embed_code/12698176" width="560" height="432" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;p&gt;&lt;strong&gt;Pour résumer&lt;/strong&gt; : éloignons-nous de l'OGC (WMS, WFS,...) quand il s'agit
juste de publier une carte sur une page Web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comment-rafraichir-les-cartes"&gt;
&lt;h2&gt;Comment rafraîchir les cartes ?&lt;/h2&gt;
&lt;p&gt;Je reprends une citation remontée par &lt;em&gt;twidi&lt;/em&gt; :&lt;/p&gt;
&lt;blockquote&gt;
“ There are only two hard things in Computer Science: cache invalidation and naming things ”
-- Phil Karlton&lt;/blockquote&gt;
&lt;p&gt;Selon la fréquence de rafraichissement de vos données, plusieurs stratégies sont
envisageables. Surtout qu'il est rare que l'ensemble de la carte nécessite d'être actualisé.&lt;/p&gt;
&lt;div class="section" id="en-generant-les-tuiles-en-temps-reel"&gt;
&lt;h3&gt;En générant les tuiles en temps réel&lt;/h3&gt;
&lt;p&gt;Comme l'expliquait Young Yahn &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;, générer des tuiles en temps réel demande
d'avoir une architecture assez trappue et cela s'avère stressant à administrer.&lt;/p&gt;
&lt;p&gt;Cependant c'est possible avec des outils comme &lt;em&gt;tilelive&lt;/em&gt; ou &lt;em&gt;renderd&lt;/em&gt; (Apache &lt;em&gt;mod_tile&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="avec-une-tache-planifiee"&gt;
&lt;h3&gt;Avec une tâche planifiée&lt;/h3&gt;
&lt;p&gt;Il faut trouver le compromis entre le temps de fabrication de la carte et la fréquence
de rafraichissement des données source.&lt;/p&gt;
&lt;p&gt;S'il s'agit de minutes, rafraichir la carte toutes les heures semble envisageable. La plupart du
temps, une fois par jour suffira.&lt;/p&gt;
&lt;p&gt;Il existe plusieurs outils, comme &lt;a class="reference external" href="/render-your-tilemill-stylesheets-with-landez.html"&gt;landez&lt;/a&gt;,
pour regénérer à intervales réguliers votre carte issue de &lt;em&gt;Tilemill&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-la-seconde"&gt;
&lt;h3&gt;À la seconde&lt;/h3&gt;
&lt;p&gt;Pour suivre une flotte de bateaux ou de véhicules, il faut que les éléments soient
déplacés en temps réel sur la carte.&lt;/p&gt;
&lt;p&gt;Il y a plusieurs outils très efficaces qui se reposent sur les Websockets. J'avais
fait l'application &lt;a class="reference external" href="/des-cartes-collaboratives-avec-livetitude-fr.html"&gt;Livetitude&lt;/a&gt;,
&lt;a class="reference external" href="http://vivid-warrior-6693.herokuapp.com"&gt;disponible en ligne&lt;/a&gt;, qui permet
d'éditer à plusieurs une carte de marqueurs, grace à &lt;em&gt;Pusher&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La bibliothèque &lt;em&gt;Sharejs&lt;/em&gt;, issue du projet défunt Google Wave, permettrait d'aller
plus loin en faisant de l'édition collaborative d'attributs de géométries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="en-fonction-de-filtres-ou-formulaires"&gt;
&lt;h3&gt;En fonction de filtres ou formulaires&lt;/h3&gt;
&lt;p&gt;Pour redessiner la carte en fonction de filtres, sur des attributs par exemple, l'utilisation
du format GeoJSON s'avère assez efficace.&lt;/p&gt;
&lt;p&gt;Votre serveur reçoit le formulaire, construit le jeu de données, et renvoie les
résultats (&lt;em&gt;Features = geometries + attributs&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Cette approche peut s'avérer délicate selon la taille des jeux de données. Plusieurs
ruses existent afin de limiter le volume (ex: généralisation progressive selon la zone affichée)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="carte-a-echelle-unique"&gt;
&lt;h2&gt;Carte à échelle unique&lt;/h2&gt;
&lt;p&gt;Parfois, pour certaines cartes, une seule vue suffit ! Nul besoin de zoomer, puisque le
phénomène intervient à une échelle en particulier !&lt;/p&gt;
&lt;p&gt;Pensez aux cartes des journaux ! Et vous serez séduits par l'excellent &lt;em&gt;Kartograph&lt;/em&gt;,
qui permet de publier des cartes sublimes facilement. Le SVG est manipulable en Javascript,
et permet d'ajouter des évènements sur les zones.&lt;/p&gt;
&lt;p&gt;Martin Dewulf a publié &lt;a class="reference external" href="http://migrationsmap.net"&gt;une jolie carte interactive à partir de données ouvertes&lt;/a&gt;.
Le résultat est très convaincaint, et sort de l'ordinaire.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="requiem-pour-les-trolls"&gt;
&lt;h2&gt;Requiem pour les trolls&lt;/h2&gt;
&lt;p&gt;La citation au début de la présentation, issue de &lt;em&gt;#whereconf&lt;/em&gt;, était volontairement
provocatrice. Mais de nombreux acteurs du Web et de la cartographie rejoignent
cette idée. Par exemple, entre temps, Sean Gillies a réitéré :&lt;/p&gt;
&lt;blockquote&gt;
“ How many MapBox and CartoDB like products would there be today if the
Open Source GIS community hadn't gone on a decade long WxS wander? “
-- &amp;#64;sgillies, 2012&lt;/blockquote&gt;
&lt;div class="section" id="oriente-communication"&gt;
&lt;h3&gt;Orienté communication&lt;/h3&gt;
&lt;p&gt;En 12 minutes, c'est très difficile de présenter tous les aspects, inconvénients
et avantages d'une approche à contre-courant !&lt;/p&gt;
&lt;p&gt;J'ai présenté le besoin plus simple de la cartographie sur le Web :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;j'ai des données à caractère géographique ;&lt;/li&gt;
&lt;li&gt;je veux les afficher sur une page Web avec une carte interactive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le cas le plus simple, mais en même temps le plus répandu !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pas-toujours-d-alternatives-a-l-ogc"&gt;
&lt;h3&gt;Pas toujours d'alternatives à l'OGC&lt;/h3&gt;
&lt;p&gt;Dans certains contextes, les protocoles OGC sont indispensables :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;interroperabilité entre systèmes hétérogènes sans médiation préalable (&lt;em&gt;serveurs externes, logiciels propriétaires, etc.&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;catalogage sémantique et syndication des jeux de données (&lt;em&gt;INSPIRE&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;construction d'une plateforme IDS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;OpenLayers&lt;/em&gt; est la seule bibliothèque javascript qui a les reins assez solides pour
s'intégrer dans ces environnements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="savoir-oublier-le-web"&gt;
&lt;h3&gt;Savoir oublier le Web&lt;/h3&gt;
&lt;p&gt;Il faut savoir juger la pertinence d'une application Web. Dans certaines situations,
le Web n'est pas la seule solution pour faire du client-server en multi-utilisateurs.&lt;/p&gt;
&lt;p&gt;L'année dernière par exemple, nous avons développé une application collaborative
pour manipuler des tronçons routiers. Nous avons &lt;a class="reference external" href="/merkopolo-a-simple-yet-powerful-starter-kit-for-your-qtc-gis-application.html"&gt;choisi C++/Qt&lt;/a&gt;,
avec PostGIS et des &lt;a class="reference external" href="/access-a-json-webservice-with-qt-c.html"&gt;webservices JSON&lt;/a&gt;,
parce que c'est ce qui se prêtait le mieux au besoin ! La même chose en &lt;em&gt;ExtJS&lt;/em&gt; aurait
été catastrophique !&lt;/p&gt;
&lt;iframe width="560" height="315" src="http://www.youtube.com/embed/7NPQo54NbJ8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://twitter.com/#!/oloynet/status/192295759431995393"&gt;oloynet&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://mapbox.com/blog/rendering-the-world/"&gt;Rendering the World, FOSS4G NA, 2012&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 18 Apr 2012 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-04-18:des-cartes-dun-autre-monde-la-suite-fr.html</guid><category>django</category><category>web</category><category>gis</category><category>livetitude</category></item><item><title>Render your TileMill stylesheets with Landez</title><link>http://blog.mathieu-leplatre.info/render-your-tilemill-stylesheets-with-landez.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://mapbox.com/tilemill/"&gt;TileMill&lt;/a&gt; is an amazing tool to design your map, and publish it.
With &lt;a class="reference external" href="http://pypi.python.org/pypi/landez"&gt;landez&lt;/a&gt;, you can easily render it using python,
or do &lt;a class="reference external" href="/landez-introducing-new-features-of-our-tiles-toolbox.html"&gt;whatever comes with the API&lt;/a&gt; !&lt;/p&gt;
&lt;div class="section" id="from-tilemill-to-landez"&gt;
&lt;h2&gt;From TileMill to Landez&lt;/h2&gt;
&lt;p&gt;Use Tilemill to design your map, and export the &lt;a class="reference external" href="http://mapnik.org"&gt;Mapnik&lt;/a&gt; XML stylesheet :&lt;/p&gt;
&lt;img alt="" src="/images/tilemill-export-stylesheet.png" /&gt;
&lt;p&gt;Then simply use &lt;em&gt;landez&lt;/em&gt; with &lt;tt class="docutils literal"&gt;stylefile&lt;/tt&gt; argument :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stylefile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Toulouse-Voirie.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;toulouse-voirie.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_coverage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;43.56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;43.64&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;zoomlevels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above example, a &lt;em&gt;MBTiles&lt;/em&gt; file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;toulouse-voirie.mbtiles&lt;/span&gt;&lt;/tt&gt; will be
created with all rendered tiles. (&lt;strong&gt;Note:&lt;/strong&gt; This won't render UTF-Grid tiles,
since TileMill does not expose this part in the XML stylesheet.)&lt;/p&gt;
&lt;p&gt;If you don't have Mapnik2 installed, you might encounter rendering errors
like : &lt;tt class="docutils literal"&gt;AssertionError: Cannot render tiles without mapnik !&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation-of-mapnik-2"&gt;
&lt;h2&gt;Installation of Mapnik 2&lt;/h2&gt;
&lt;div class="section" id="mapnik2-packages-on-debian-ubuntu"&gt;
&lt;h3&gt;Mapnik2 packages on Debian/Ubuntu&lt;/h3&gt;
&lt;p&gt;In Ubuntu Precise (12.04) or Debian Wheezy (7.0), it's a piece of cake,
the package is available in the repos&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install python-mapnik2
&lt;/pre&gt;
&lt;p&gt;In Ubuntu Maverick (10.10), Natty (11.04), Oneiric (11.10), it's quite easy,
there is a PPA, from MapBox&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-add-repository ppa:developmentseed/mapbox
sudo update
sudo apt-get install python-mapnik2
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="mapnik2-and-python-bindings-from-sources"&gt;
&lt;h3&gt;Mapnik2 and python bindings from sources&lt;/h3&gt;
&lt;p&gt;Welcome in the quicksands of installing Mapnik2 python bindings from sources !&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/cspanring"&gt;Christian Spanring&lt;/a&gt; wrote a quick tutorial
to &lt;a class="reference external" href="https://gist.github.com/1314907"&gt;install it from sources on Ubuntu 10.04&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It might be a bit tricky to tweak this tutorial for your distribution. Hopefully, our
colleague &lt;a class="reference external" href="https://github.com/kiorky"&gt;Mathieu&lt;/a&gt; has prepared a &lt;a class="reference external" href="http://minitage.org"&gt;minitage's&lt;/a&gt; &amp;quot;&lt;em&gt;minilay&lt;/em&gt;&amp;quot; for it, &lt;a class="reference external" href="http://pypi.python.org/pypi/mapnik2#minitage"&gt;just follow the few steps&lt;/a&gt;
to compile the whole stack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 22 Mar 2012 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-03-22:render-your-tilemill-stylesheets-with-landez.html</guid><category>tilemill</category><category>landez</category><category>gis</category><category>howto</category></item><item><title>Announcing Subtivals, realtime subtitles for film festivals</title><link>http://blog.mathieu-leplatre.info/announcing-subtivals-realtime-subtitles-for-film-festivals.html</link><description>&lt;img alt="" src="/images/subtivals-logo.png" /&gt;
&lt;div class="section" id="that-s-how-it-started"&gt;
&lt;h2&gt;That's how it started...&lt;/h2&gt;
&lt;p&gt;Subtitles and captions for the deaf and hard-of-hearing during film festivals
are rarely a priority, at least in France. Thus, most film copies are not
subtitled (except foreign movies shown in their original version).&lt;/p&gt;
&lt;p&gt;At the beginning of last year, &lt;a class="reference external" href="http://st2l.fr"&gt;my friend Lilian&lt;/a&gt; was promoting his project
of improving and facilitating the projection of subtitles during film festivals.
His activity consists in superimposing subtitles or projecting them on a
separate display below the screen.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-superimposed.png" /&gt;
&lt;p&gt;In this way, subtitling dissociates from the movie reel, unlike DVDs for example.
An operator is thence in charge of keeping captions synchroneous. It is sometimes called
&amp;quot;&lt;em&gt;virtual subtitling&lt;/em&gt;&amp;quot;; it is cheaper and easier than subtitled hard copies.&lt;/p&gt;
&lt;p&gt;Since there was no suitable Open Source tools to fulfill these precise needs,
&lt;a class="reference external" href="http://gedial.com"&gt;Arnaud&lt;/a&gt; and I gave him a hand. We developed &lt;a class="reference external" href="https://github.com/traxtech/subtivals"&gt;Subtivals&lt;/a&gt;,
a Free Software with simplicity and usuability for the technical operator in mind.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/subtivals-screenshot.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="main-features"&gt;
&lt;h2&gt;Main features&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Subtivals&lt;/em&gt; has gained many features on the way, we released the &lt;strong&gt;version 1.0&lt;/strong&gt; last month,
after almost a year of development, driven by Lilian's experience.&lt;/p&gt;
&lt;p&gt;Among most notable features :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Support of Advanced SubStation Alpha subtitles (ASS, *.ass) format&lt;/li&gt;
&lt;li&gt;Control Play / Pause / Delay / Speed&lt;/li&gt;
&lt;li&gt;Switch between several modes : timecode based, semi-automatic or fully manual&lt;/li&gt;
&lt;li&gt;Support for subtitles without timecodes (fixes duration automatically)&lt;/li&gt;
&lt;li&gt;SSA styles (italic, positions, colors)&lt;/li&gt;
&lt;li&gt;Customize and override styles (color and font size)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the small world of subtitles projection, where most tools are either
very expensive, or very archaic, &lt;em&gt;Subtivals&lt;/em&gt; is a revolution !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hall-of-fame"&gt;
&lt;h2&gt;Hall of fame&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Subtivals&lt;/em&gt; has proven its efficiency for several months now ! It was used
successfully in many film festivals (&lt;a class="reference external" href="http://www.festival-douarnenez.com"&gt;Festival de cinéma de Douarnenez&lt;/a&gt;,
&lt;a class="reference external" href="http://festival-galactique.infini.fr"&gt;Festival Intergalactique de Brest&lt;/a&gt;,
&lt;a class="reference external" href="http://www.festivaldebiarritz.com"&gt;Festival de Cinéma d'Amérique Latine de Biarritz&lt;/a&gt;,
&lt;a class="reference external" href="http://www.filmfestamiens.org"&gt;Festival International du film d'Amiens&lt;/a&gt;,
&lt;a class="reference external" href="http://www.lacinemathequedetoulouse.com/archives/2012/thematiques"&gt;Festival Zoom Arrière, 6e édition&lt;/a&gt;,
... and soon :
&lt;a class="reference external" href="http://www.cinelatino.com.fr"&gt;Cinélatino de Toulouse&lt;/a&gt;,
&lt;a class="reference external" href="http://festival-resistances.fr"&gt;Résistances à Foix&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Its semi-manual mode also allows &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Surtitle"&gt;surtitling&lt;/a&gt; at theaters (or opera, ballets, ...).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Subtivals&lt;/em&gt; runs on GNU/Linux, Windows, Mac OS X and has no other external dependencies.&lt;/p&gt;
&lt;p&gt;On Ubuntu, install it easily using our PPA :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo add-apt-repository ppa:mathieu.leplatre/subtivals
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install subtivals
&lt;/pre&gt;
&lt;p&gt;Mac OS X and Windows installers are for sale, contact us !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="contribute"&gt;
&lt;h2&gt;Contribute&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Subtivals&lt;/em&gt; is written in C++/Qt and released under the &lt;a class="reference external" href="http://www.gnu.org/copyleft/gpl.html"&gt;GNU General Public License&lt;/a&gt; .
It is available in English, French, Spanish and Catalan.&lt;/p&gt;
&lt;p&gt;If you feel like contributing, testing, translating... &lt;a class="reference external" href="https://github.com/traxtech/subtivals"&gt;join us on Github&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Sat, 17 Mar 2012 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-03-17:announcing-subtivals-realtime-subtitles-for-film-festivals.html</guid><category>subtivals</category><category>subtitles</category><category>accessibility</category><category>qt</category><category>c++</category></item><item><title>Django Handlebars.js integration</title><link>http://blog.mathieu-leplatre.info/django-handlebarsjs-integration.html</link><description>&lt;p&gt;In order to write &lt;a class="reference external" href="http://handlebarsjs.com/"&gt;Handlebars.js&lt;/a&gt; templates
in &lt;a class="reference external" href="http://djangoproject.com"&gt;Django&lt;/a&gt; templates, I was gonna copy and paste for the second time
&lt;a class="reference external" href="https://gist.github.com/893408"&gt;Miguel Araujo's verbatim snippet&lt;/a&gt;.
But since one of the &lt;em&gt;Django&lt;/em&gt; weakness is the lack of reusable applications, I thought
I would package one instead :)&lt;/p&gt;
&lt;p&gt;The two existing django applications &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; that integrate &lt;em&gt;Handlebars.js&lt;/em&gt; are somehow
bloated, they both kind of compile or render javascript templates on server-side &lt;em&gt;(sic)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Oppositely, my &lt;a class="reference external" href="https://github.com/makinacorpus/django-templatetag-handlebars"&gt;django-templatetag-handlebars&lt;/a&gt; is very simple, you
write your &lt;em&gt;Handlebars&lt;/em&gt; template inside your &lt;em&gt;django&lt;/em&gt; template. &lt;em&gt;Django&lt;/em&gt;
will preserve nicely &lt;tt class="docutils literal"&gt;{}&lt;/tt&gt; tags, but still render &lt;tt class="docutils literal"&gt;{% %}&lt;/tt&gt; tags.&lt;/p&gt;
&lt;p&gt;For example, with this in your template :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% tplhandlebars &amp;quot;tpl-infos&amp;quot; %}
    {{total}} {% trans &amp;quot;result(s).&amp;quot; %}
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{% trans &amp;quot;Min&amp;quot; %}: {{min}}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{% trans &amp;quot;Max&amp;quot; %}: {{max}}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
{% endtplhandlebars %}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following block with end-up in your page :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tpl-infos&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars-template&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{total}} result(s).
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Min: {{min}}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Max: {{max}}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Render it, client-side, as usual using &lt;em&gt;Handlebars&lt;/em&gt; API :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;properties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Handlebars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#tpl-infos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="nx"&gt;rendered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your rendered string is ready, and waiting to be inserted in your DOM :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;10 result(s).
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Min: 4&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Max: 5&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/django-templatetag-handlebars"&gt;Download and more info&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Both named &lt;em&gt;django-handlebars&lt;/em&gt;, &lt;a class="reference external" href="https://github.com/yavorskiy/django-handlebars"&gt;by Sergii Iavorskyi&lt;/a&gt; and &lt;a class="reference external" href="https://bitbucket.org/chrisv/django-handlebars"&gt;by Chris Vigelius&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Sat, 17 Mar 2012 00:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-03-17:django-handlebarsjs-integration.html</guid><category>django</category><category>javascript</category><category>handlebars</category></item><item><title>landez : introducing new features of our tiles toolbox</title><link>http://blog.mathieu-leplatre.info/landez-introducing-new-features-of-our-tiles-toolbox.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/landez"&gt;landez&lt;/a&gt; started as a very small toolbox to build MBTiles files
specifying bounding boxes and zoom levels. We have been using it for several GIS projects
at &lt;a class="reference external" href="http://www.makina-corpus.com"&gt;Makina Corpus&lt;/a&gt;, and can tell it's reliable !&lt;/p&gt;
&lt;p&gt;Landez is pure python and follows the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/KISS_principle"&gt;KISS principle&lt;/a&gt;.
It has optional requirements on &lt;a class="reference external" href="http://pypi.python.org/pypi/PIL"&gt;PIL&lt;/a&gt; and &lt;a class="reference external" href="http://pypi.python.org/pypi/mapnik2"&gt;mapnik&lt;/a&gt;
for compositing, tile arranging or rendering.&lt;/p&gt;
&lt;p&gt;Recently, we've added many extra cool features, which deserve highlight !&lt;/p&gt;
&lt;div class="section" id="simple-wms-support"&gt;
&lt;h2&gt;Simple WMS support&lt;/h2&gt;
&lt;p&gt;With landez, you can store your WMS layers into MBTiles files ! It will
request the WMS /images and save them into tiles on disk ! You can then
enjoy the power of MBTiles files : transport, speed, ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wms_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://yourserver.com/geoserver/wms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;wms_layers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ign:departements&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;wms_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;image/png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dest.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_coverage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.9853&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;43.6435&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1126&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;44.0639&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                &lt;span class="n"&gt;zoomlevels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tiles-compositing"&gt;
&lt;h2&gt;Tiles compositing&lt;/h2&gt;
&lt;p&gt;This is the killer feature ! With landez, you can now merge multiple sources
of tiles (URL, WMS, MBTiles, Mapnik stylesheet) together !&lt;/p&gt;
&lt;p&gt;For example, build a new MBTiles file by blending tiles of another on top of OpenStreetMap tiles :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;merged.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TilesManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mbtiles_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;carto.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_layer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Simply make a composite a WMS layer with OpenStreetMap using transparency ! You might find this useful
for compositing satellite image with street maps :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wms_server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://yourserver.com/geoserver/wms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;wms_layers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;img:orthophoto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wms_osm.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TilesManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_layer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 40%&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="arrange-tiles-into-single-images"&gt;
&lt;h2&gt;Arrange tiles into single /images&lt;/h2&gt;
&lt;p&gt;This feature can be very useful for printing tiled maps or have a quick overview
of your compositing results !&lt;/p&gt;
&lt;p&gt;Refer to any source of tiles, like you would do with &lt;cite&gt;MBTilesBuilder&lt;/cite&gt;,
add layers if you like and export the image !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageExporter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiles_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://server/tile/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;export_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;zoomlevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;imagepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;image.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mbtiles-content-reading"&gt;
&lt;h2&gt;MBTiles content reading&lt;/h2&gt;
&lt;p&gt;landez can now read MBTiles content !&lt;/p&gt;
&lt;p&gt;We could proudly add it to the list of implementations for the &lt;a class="reference external" href="https://github.com/mapbox/mbtiles-spec/wiki/Implementations"&gt;MBTiles spec&lt;/a&gt;
and &lt;a class="reference external" href="https://github.com/mapbox/utfgrid-spec/wiki/Implementations"&gt;UTF-Grid spec&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;Use MBTiles files like any tile source :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mbtiles_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yourfile.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;...extract single image or UTF-Grid tiles :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez.reader&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MBTilesReader&lt;/span&gt;

&lt;span class="n"&gt;mbreader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yourfile.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Metadata&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;mbreader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# Zoom levels&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;mbreader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoomlevels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# Image tile&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tile.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;# UTF-Grid tile&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;callback&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps"&gt;
&lt;h2&gt;Next steps...&lt;/h2&gt;
&lt;p&gt;The code has grown quickly and deserves a good refactoring, which is being done in a separate
branch &lt;a class="reference external" href="https://github.com/makinacorpus/landez"&gt;on GitHub&lt;/a&gt; ! The goal is to
keep the same simple API, better modularity, increase tests coverage...&lt;/p&gt;
&lt;p&gt;If you are wiling to participate, feel welcome !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 24 Feb 2012 12:45:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-02-24:landez-introducing-new-features-of-our-tiles-toolbox.html</guid><category>python</category><category>mapbox</category><category>gis</category><category>landez</category></item><item><title>TileMill on your Web server behind a reverse proxy</title><link>http://blog.mathieu-leplatre.info/tilemill-on-your-web-server-behind-a-reverse-proxy.html</link><description>&lt;p&gt;In the last version (0.9), &lt;a class="reference external" href="http://mapbox.com/tilemill/"&gt;TileMill&lt;/a&gt; has an additional dedicated process to
serve the tiles. We had to change some bits of our server configuration.&lt;/p&gt;
&lt;p&gt;Instead of documenting the new configuration in our internal Wiki,
I prefered to share here a few technical lines (quite rough though).&lt;/p&gt;
&lt;p&gt;We run TileMill inside a &lt;a class="reference external" href="/a-virtual-local-server-room-for-you-developper.html"&gt;virtual machine&lt;/a&gt; on a server with reverse proxy rules.&lt;/p&gt;
&lt;div class="section" id="reverse-proxy-configuration"&gt;
&lt;h2&gt;Reverse Proxy configuration&lt;/h2&gt;
&lt;p&gt;Assuming your reach your TileMill virtual machine at &lt;tt class="docutils literal"&gt;tilemill.sillywalk.loc&lt;/tt&gt;,
with its two processes running (ports &lt;tt class="docutils literal"&gt;20008&lt;/tt&gt; for tiles, &lt;tt class="docutils literal"&gt;20009&lt;/tt&gt; for the application),
your Apache reverse proxy configuration will be :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="err"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ServerName tilemill.yourdomain.com

    ProxyPreserveHost On
    RewriteEngine on

    # Serve the tiles as /tiles/
    RewriteCond %{REQUEST_URI} ^(/tiles.*)$
    RewriteRule ^/tiles(.*) http://tilemill.sillywalk.loc:20008$1 [L,P]
    ProxyPassReverse /tiles http://tilemill.sillywalk.loc:20008/

    # Serve the application on /
    ProxyPass / http://tilemill.sillywalk.loc:20009/
    ProxyPassReverse / http://tilemill.sillywalk.loc:20009
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tilemill-configuration"&gt;
&lt;h2&gt;TileMill configuration&lt;/h2&gt;
&lt;p&gt;Now that tiles and application ports are reachable respectively on &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://tilemill.yourdomain.com/tiles&lt;/span&gt;&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://tilemill.yourdomain.com/&lt;/span&gt;&lt;/tt&gt;, just tell TileMill to serve its pages accordingly in its configuration, &lt;tt class="docutils literal"&gt;/etc/tilemill/tilemill.config&lt;/tt&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/usr/share/mapbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;coreUrl&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tilemill.yourdomain.com:80&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tileUrl&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tilemill.yourdomain.com:80/tiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20009&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;listenHost&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart it...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service tilemill restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 31 Jan 2012 11:12:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-01-31:tilemill-on-your-web-server-behind-a-reverse-proxy.html</guid><category>tilemill</category><category>apache</category><category>howto</category></item><item><title>Merkopolo : a simple yet powerful starter kit for your Qt/C++ GIS application</title><link>http://blog.mathieu-leplatre.info/merkopolo-a-simple-yet-powerful-starter-kit-for-your-qtc-gis-application.html</link><description>&lt;p&gt;Recently, while the whole world looks completely hyped up with Web applications,
we chose to design and develop a desktop software in Qt/C++.&lt;/p&gt;
&lt;p&gt;Obviously, the choice was measured and justified ! We had to build a specific GIS application
with complex interactions and huge amounts of data, for a limited number of users.&lt;/p&gt;
&lt;p&gt;Quickly, we spotted &lt;a class="reference external" href="http://merkaartor.be/"&gt;Merkaartor&lt;/a&gt;, one of &lt;a class="reference external" href="http://wiki.openstreetmap.org/wiki/Editing"&gt;the official OpenStreetMap editors&lt;/a&gt;,
for its UI components and object model. And since we started to code, we never regretted this choice !&lt;/p&gt;
&lt;p&gt;C++ brings the power, Qt offers cross-platform and the compassion towards developers, and Merkaartor a lovely GIS flavour !&lt;/p&gt;
&lt;p&gt;We contributed to Merkaartor to give gits components a little bit of genericity, and
released &lt;a class="reference external" href="https://gitorious.org/merkopolo/merkopolo"&gt;Merkopolo&lt;/a&gt;, a Qt project
skeleton to handle dependencies and inclusion of base components.&lt;/p&gt;
&lt;p&gt;Here is what you immediately get once compiled :&lt;/p&gt;
&lt;img alt="" src="/images/merkopolo-preview.png" /&gt;
&lt;p&gt;Now you can start coding serious stuff on top, with the Merkaartor components stack :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Complete feature model with free attributes (tags)&lt;/li&gt;
&lt;li&gt;Custom drawing styles&lt;/li&gt;
&lt;li&gt;A variety of layers types (Tiles, WMS, Spatialite, GeoTIFF, GDAL...)&lt;/li&gt;
&lt;li&gt;Base classes for mouse interactions on map objects&lt;/li&gt;
&lt;li&gt;A projection system (&lt;em&gt;libproj&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;And even &lt;a class="reference external" href="postgis-data-in-c-using-gdal-and-qt.html"&gt;draw geometries from PostGIS database&lt;/a&gt; !&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gitorious.org/merkopolo/merkopolo"&gt;Merkopolo is available on Gitorious&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 26 Jan 2012 11:30:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2012-01-26:merkopolo-a-simple-yet-powerful-starter-kit-for-your-qtc-gis-application.html</guid><category>c++</category><category>gis</category><category>qt</category><category>merkopolo</category><category>merkartor</category></item><item><title>Access a JSON webservice with Qt C++</title><link>http://blog.mathieu-leplatre.info/access-a-json-webservice-with-qt-c.html</link><description>&lt;p&gt;&lt;em&gt;Original post at&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Webservices are everywhere ! There are relevant in many situations, and
accessing them from your Qt C++ application is not an heresy.&lt;/p&gt;
&lt;p&gt;I will present here a very simple way to retrieve a JSON from a GET request.&lt;/p&gt;
&lt;div class="section" id="http-requests"&gt;
&lt;h2&gt;HTTP Requests&lt;/h2&gt;
&lt;p&gt;Using &lt;a class="reference external" href="http://developer.qt.nokia.com/doc/qt-4.7/qnetworkaccessmanager.html"&gt;QNetworkAccessManager&lt;/a&gt; is
a piece of cake :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;QNetworkAccessManager&lt;/span&gt; &lt;span class="n"&gt;networkManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;QUrl&lt;/span&gt; &lt;span class="nf"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://gdata.youtube.com/feeds/api/standardfeeds/most_popular?v=2&amp;amp;alt=json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;QNetworkRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;QNetworkReply&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;currentReply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;networkManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// GET&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But, note that a slightly more generic approach would be to build the &lt;tt class="docutils literal"&gt;QUrl&lt;/tt&gt; from a parameters list :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;QUrl&lt;/span&gt; &lt;span class="nf"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://gdata.youtube.com/feeds/api/standardfeeds/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;QString&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;most_popular&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%1%2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="n"&gt;QMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QVariant&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addQueryItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="parsing-json"&gt;
&lt;h2&gt;Parsing JSON&lt;/h2&gt;
&lt;p&gt;Get yourself a &lt;em&gt;slot&lt;/em&gt; to parse the &lt;tt class="docutils literal"&gt;QNetworkReply&lt;/tt&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;networkManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;finished&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QNetworkReply&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SLOT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QNetworkReply&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;YourClass&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;onResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QNetworkReply&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_currentReply&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;QNetworkReply&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;NoError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// ...only in a blog post&lt;/span&gt;

    &lt;span class="n"&gt;QString&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;readAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="n"&gt;QScriptEngine&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;QScriptValue&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;      Google YouTube JSON looks like this :&lt;/span&gt;

&lt;span class="cm"&gt;      {&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot;version&amp;quot;: &amp;quot;1.0&amp;quot;,&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot;encoding&amp;quot;: &amp;quot;UTF-8&amp;quot;,&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot;feed&amp;quot;: {&lt;/span&gt;
&lt;span class="cm"&gt;          ..&lt;/span&gt;
&lt;span class="cm"&gt;          ..&lt;/span&gt;
&lt;span class="cm"&gt;          &amp;quot;entry&amp;quot;: [{&lt;/span&gt;
&lt;span class="cm"&gt;            &amp;quot;title&amp;quot;: {&lt;/span&gt;
&lt;span class="cm"&gt;                &amp;quot;$t&amp;quot;: &amp;quot;Nickelback- When We Stand Together&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;            },&lt;/span&gt;
&lt;span class="cm"&gt;            &amp;quot;content&amp;quot;: {&lt;/span&gt;
&lt;span class="cm"&gt;                &amp;quot;type&amp;quot;: &amp;quot;application/x-shockwave-flash&amp;quot;,&lt;/span&gt;
&lt;span class="cm"&gt;                &amp;quot;src&amp;quot;: &amp;quot;http://www.youtube.com/v/76vdvdll0Y?version=3&amp;amp;f=standard&amp;amp;app=youtube_gdata&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;            },&lt;/span&gt;
&lt;span class="cm"&gt;            &amp;quot;yt$statistics&amp;quot;: {&lt;/span&gt;
&lt;span class="cm"&gt;                &amp;quot;favoriteCount&amp;quot;: &amp;quot;29182&amp;quot;,&lt;/span&gt;
&lt;span class="cm"&gt;                &amp;quot;viewCount&amp;quot;: &amp;quot;41513706&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;            },&lt;/span&gt;
&lt;span class="cm"&gt;            ...&lt;/span&gt;
&lt;span class="cm"&gt;            ...&lt;/span&gt;
&lt;span class="cm"&gt;          },&lt;/span&gt;
&lt;span class="cm"&gt;          ...&lt;/span&gt;
&lt;span class="cm"&gt;          ...&lt;/span&gt;
&lt;span class="cm"&gt;          ]&lt;/span&gt;
&lt;span class="cm"&gt;        }&lt;/span&gt;
&lt;span class="cm"&gt;      }&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;

    &lt;span class="c1"&gt;// Now parse this JSON according to your needs !&lt;/span&gt;
    &lt;span class="n"&gt;QScriptValue&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;feed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;entry&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;QScriptValueIterator&lt;/span&gt; &lt;span class="nf"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;QScriptValue&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;QString&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;viewCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yt$statistics&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewCount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toInteger&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="c1"&gt;// Do something with those...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it :)&lt;/p&gt;
&lt;p&gt;If you want more complexity, and don't mind adding extra-dependencies, check out Tomasz Siekierda's &lt;a class="reference external" href="http://gitorious.org/qwebservice"&gt;QtWebService&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 16 Dec 2011 17:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-12-16:access-a-json-webservice-with-qt-c.html</guid><category>c++</category><category>qt</category><category>json</category></item><item><title>Remove django form field validation errors manually</title><link>http://blog.mathieu-leplatre.info/remove-django-form-field-valiation-errors-manually.html</link><description>&lt;p&gt;&lt;em&gt;Original post at&lt;/em&gt; &lt;a class="reference external" href="http://www.makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sometimes I look for something which seems so simple and stupid that I can't imagine
it does not exist. It makes me wonder why and who is the fool. Worse, I can't be sure about my search keywords to prove me anything.&lt;/p&gt;
&lt;p&gt;I just wanted to delete, reset or remove the validation errors of a single form field, within a django view, without
overriding the form or field class.&lt;/p&gt;
&lt;div class="section" id="a-one-liner"&gt;
&lt;h2&gt;A one-liner&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;aform&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;afield&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aform&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;afield&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error_class&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;That's it folks !&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This will not affect other fields errors or non-field errors ;&lt;/li&gt;
&lt;li&gt;This will reuse nicely the field error class (&lt;tt class="docutils literal"&gt;ErrorDict&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;ErrorList&lt;/tt&gt;) ;&lt;/li&gt;
&lt;li&gt;You cannot set &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;aform.errors['afield']&lt;/span&gt; = None&lt;/tt&gt; or your form &lt;tt class="docutils literal"&gt;full_clean()&lt;/tt&gt; will be performed again !&lt;/li&gt;
&lt;li&gt;Obviously, the ideal approach is to override your form &lt;tt class="docutils literal"&gt;clean()&lt;/tt&gt; properly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 06 Dec 2011 09:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-12-06:remove-django-form-field-valiation-errors-manually.html</guid><category>django</category><category>tips</category></item><item><title>An equivalent of Django's select_related for ManyToMany and OneToMany relationships</title><link>http://blog.mathieu-leplatre.info/django-selectrelated-manytomany.html</link><description>&lt;p&gt;&lt;em&gt;Original post at&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using an ORM simplifies and reduces greatly the amount of code to interact with databases.
Nevertheless, it can easily hide database design defects or become a source of serious performance issues.&lt;/p&gt;
&lt;div class="section" id="a-common-pitfall"&gt;
&lt;h2&gt;A Common Pitfall&lt;/h2&gt;
&lt;p&gt;With Django, the most classic problem occurs while accessing objects relations attributes
inside a loop. That's why QuerySet's method &lt;tt class="docutils literal"&gt;select_related()&lt;/tt&gt; exists :
it will join specified relations so that access to their attributes does not hit the database.
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#select-related"&gt;Refer to Django's documentation&lt;/a&gt; for more information !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-to-many-and-many-to-many-relationships"&gt;
&lt;h2&gt;One-To-Many and Many-To-Many Relationships&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;select_related()&lt;/tt&gt; is not able to follow One-To-Many (&lt;em&gt;1-n&lt;/em&gt;) and Many-To-Many (&lt;em&gt;n-n&lt;/em&gt;) relationships.
The Django team is currently working on &lt;tt class="docutils literal"&gt;prefetch_related()&lt;/tt&gt;. But before we can enjoy this
future feature, we can implement an equivalent in python.&lt;/p&gt;
&lt;p&gt;With these models :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pizza&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Restaurant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pizzas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pizza&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;through&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;PizzaRestaurant&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PizzaRestaurant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pizza&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pizza&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;restaurant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Restaurant&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This loop will generate &lt;em&gt;1 + N&lt;/em&gt; queries :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pizzas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whereas this one will &lt;strong&gt;only&lt;/strong&gt; generate &lt;em&gt;2&lt;/em&gt; queries :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Store relationships in a dict&lt;/span&gt;
&lt;span class="n"&gt;byrestaurant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;PizzaRestaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_related&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;restaurant&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pizza&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;byrestaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Use stored lists&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;byrestaurant&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;According to the amount of &lt;em&gt;N&lt;/em&gt;, doing that trick in views can boost your pages !&lt;/p&gt;
&lt;p&gt;This is not perfect and elegant, but if it allows you to downsize the number of queries
from several thousands to fifteen, like &lt;a class="reference external" href="http://gitorious.org/memopol2-0/memopol2-0/merge_requests/18"&gt;it did on Memopol2&lt;/a&gt;, you can think twice.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 05 Dec 2011 11:09:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-12-05:django-selectrelated-manytomany.html</guid><category>django</category><category>performance</category></item><item><title>Des cartes collaboratives avec Livetitude</title><link>http://blog.mathieu-leplatre.info/des-cartes-collaboratives-avec-livetitude-fr.html</link><description>&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cela fait plusieurs semaines que je voulais présenter ma petite application
de partage de cartes, dont je me sers déjà comme alternative aux marqueurs de Google Maps.&lt;/p&gt;
&lt;div class="section" id="en-bref"&gt;
&lt;h2&gt;En bref&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/makinacorpus/livetitude"&gt;Livetitude&lt;/a&gt; est un outil Web pour créer des cartes de manière collaborative
&lt;strong&gt;en temps réel&lt;/strong&gt; (à la manière d'un &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/EtherPad"&gt;pad&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Fonctionnant sur des terminaux mobiles, Livetitude permet également de partager la position des collaborateurs de la carte,
d'exporter les données au format GeoJSON ou de publier la carte sur une page Web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sous-le-capot"&gt;
&lt;h2&gt;Sous le capot&lt;/h2&gt;
&lt;p&gt;J'ai pris du plaisir à hacker cette application, elle tire profit
d'outils très simples mais très efficaces :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://http://leaflet.cloudmade.com"&gt;Leaflet&lt;/a&gt; pour afficher les cartes ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pusher.com"&gt;Pusher&lt;/a&gt; (Websockets) pour la collaboration en temps réel ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt; pour stocker les données ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt; pour servir les pages ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.heroku.com"&gt;Heroku&lt;/a&gt; pour héberger l'application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bien entendu, le code source est libre et disponible sur &lt;a class="reference external" href="https://github.com/makinacorpus/livetitude"&gt;le GitHub de Makina Corpus&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="utilisation"&gt;
&lt;h2&gt;Utilisation&lt;/h2&gt;
&lt;p&gt;Une instance est &lt;a class="reference external" href="http://vivid-warrior-6693.herokuapp.com/"&gt;déployée en ligne&lt;/a&gt;, dans le cloud d'Heroku,
dont vous pouvez vous servir, &lt;em&gt;pour une utilisation en bon père de famille&lt;/em&gt; :)&lt;/p&gt;
&lt;p&gt;Les marqueurs peuvent contenir du texte ou de l'HTML, et aucune donnée de localisation des visiteurs n'est stockée.&lt;/p&gt;
&lt;img alt="" src="/images/livetitude-poc.png" /&gt;
&lt;div class="section" id="comment-publier-vos-donnees-existantes"&gt;
&lt;h3&gt;Comment publier vos données existantes ?&lt;/h3&gt;
&lt;p&gt;Si vous souhaitez publier et visualiser vos marqueurs sur une carte de Livetitude,
il suffit de poster (&lt;tt class="docutils literal"&gt;POST&lt;/tt&gt;) les coordonnées de vos points sur l'URL &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://server/&amp;lt;CARTE&amp;gt;/add&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Par exemple, avec une petite fonction python :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;httplib&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;

&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;  &lt;span class="c"&gt;# e.g. vivid-warrior-6693.herokuapp.com&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mapname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/add&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;mapname&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="s"&gt;&amp;#39;coords&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="s"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="s"&gt;&amp;#39;classid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="c"&gt;# (=color)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlencode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;Accept&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getresponse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reason&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PasLoin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.1,54.9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Super resto!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PasLoin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;19.4,65.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Bon mojito&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Les points sont alors visibles en ligne sur &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://server/PasLoin&lt;/span&gt;&lt;/tt&gt; ou
disponible en GeoJSON sur &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://server/PasLoin/points&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="contribuer"&gt;
&lt;h2&gt;Contribuer&lt;/h2&gt;
&lt;p&gt;Livetitude est une application très simple, à l'état de preuve de concept. Mais
le code source est très réduit et donc très rapide à prendre en main !&lt;/p&gt;
&lt;p&gt;Toutes vos &lt;a class="reference external" href="https://github.com/makinacorpus/livetitude/issues"&gt;suggestions ou contributions&lt;/a&gt; sont les bienvenues !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 23 Nov 2011 14:00:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-11-23:des-cartes-collaboratives-avec-livetitude-fr.html</guid><category>maps</category><category>gis</category><category>websockets</category><category>leaflet</category><category>heroku</category></item><item><title>Git : annuler proprement un commit après un push</title><link>http://blog.mathieu-leplatre.info/git-annuler-proprement-un-commit-apres-un-push-fr.html</link><description>&lt;div class="section" id="ce-qu-il-faut-eviter"&gt;
&lt;h2&gt;Ce qu'il faut éviter&lt;/h2&gt;
&lt;p&gt;Pour annuler des commits, il existe la commande &lt;tt class="docutils literal"&gt;git reset&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git reset --hard HEAD~1
HEAD is now at 444b1cf Rhoo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Celle-ci est pertinente tant que les commits n'ont pas été poussés. Git vous retiendra au &lt;tt class="docutils literal"&gt;push&lt;/tt&gt; d'ailleurs :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push
To /tmp/repo
 ! &lt;span class="o"&gt;[&lt;/span&gt;rejected&lt;span class="o"&gt;]&lt;/span&gt;        master -&amp;gt; master &lt;span class="o"&gt;(&lt;/span&gt;non-fast-forward&lt;span class="o"&gt;)&lt;/span&gt;
error: failed to push some refs to &lt;span class="s1"&gt;&amp;#39;/tmp/repo&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En effet, à partir du moment où un commit existe sur le serveur, il est potentiellement utilisé
par des collaborateurs (&lt;em&gt;mergé, à la base d'une branche, etc.&lt;/em&gt;). On pourrait faire le sale et forcer le push :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push -f
Total &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;
To /tmp/repo
 + b67c343...444b1cf master -&amp;gt; master &lt;span class="o"&gt;(&lt;/span&gt;forced update&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mais il y a beaucoup mieux !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ce-qu-il-faut-faire"&gt;
&lt;h2&gt;Ce qu'il faut faire&lt;/h2&gt;
&lt;p&gt;Annuler un commit, c'est finalement appliquer l'inverse de son &lt;strong&gt;diff&lt;/strong&gt; !&lt;/p&gt;
&lt;p&gt;On peut rediriger le diff des commits à annuler vers la commande &lt;tt class="docutils literal"&gt;patch &lt;span class="pre"&gt;--reverse&lt;/span&gt;&lt;/tt&gt; :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git diff HEAD^ &lt;span class="p"&gt;|&lt;/span&gt; patch --reverse
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour faire plus simple, il y a &lt;tt class="docutils literal"&gt;git revert&lt;/tt&gt; !&lt;/p&gt;
&lt;p&gt;Par exemple pour annuler les trois derniers commits :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git revert HEAD~3..HEAD
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ou pour annuler un commit en particulier :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git revert 444b1cff
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Il suffit alors de pousser proprement le commit obtenu sur le
serveur. Les éventuels collaborateurs qui avaient basé leur travail sur les commits
annulés devront gérer les conflits au moment venu...&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 03 Nov 2011 14:15:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-11-03:git-annuler-proprement-un-commit-apres-un-push-fr.html</guid><category>git</category><category>tips</category></item><item><title>Two major Unity design failures</title><link>http://blog.mathieu-leplatre.info/two-major-unity-design-failures.html</link><description>&lt;p&gt;A great advantage of global menus is the ease of pointing them with the mouse.&lt;/p&gt;
&lt;p&gt;According to &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Fitts%27s_law"&gt;Fitts' law&lt;/a&gt;,
the time to point a target is function of its distance and size. By sticking
the menus on the top part of the screen, the vertical dimension vanishes, since
the user can just throw his mouse on top to reach them.&lt;/p&gt;
&lt;p&gt;Unfortunately, two major design problems in Unity prevents from completely
turning global menus to account.&lt;/p&gt;
&lt;div class="section" id="window-buttons-dead-edges"&gt;
&lt;h2&gt;Window buttons dead edges&lt;/h2&gt;
&lt;p&gt;The user can not throw his mouse to the top-left corner to reach the close button,
since the edges are not clickable.&lt;/p&gt;
&lt;img alt="" src="/images/unity-deadzone.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bugs.launchpad.net/ubuntu/+source/unity/+bug/874980"&gt;A bug was registered on Launchpad&lt;/a&gt; a couple of minutes before I wrote this
post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="menus-not-always-shown"&gt;
&lt;h2&gt;Menus not always shown&lt;/h2&gt;
&lt;img alt="" src="/images/unity-menu-hidden.gif" /&gt;
&lt;p&gt;The problem is &lt;a class="reference external" href="https://bugs.launchpad.net/ubuntu/+source/unity/+bug/701294"&gt;being discussed on Launchpad&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my opinion, the current implementation is a terrible design :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Lack of &lt;em&gt;afordance&lt;/em&gt; : There is no obvious hint that a menu is available for the current application.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fitt's law&lt;/em&gt; fail : The user can not throw his mouse to the desired menu since it becomes visible only when he reaches it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fortunately, I am gesture and keyboard user (&lt;a class="reference external" href="apt://easystroke"&gt;easystroke&lt;/a&gt;, &lt;tt class="docutils literal"&gt;Alt+F10&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;Alt+F4&lt;/tt&gt;)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Sat, 15 Oct 2011 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-10-15:two-major-unity-design-failures.html</guid><category>ubuntu</category><category>unity</category><category>fail</category></item><item><title>Une démo squelettique de python Flask CouchDB</title><link>http://blog.mathieu-leplatre.info/une-demo-squelettique-de-python-flask-couchdb-fr.html</link><description>&lt;p&gt;Avec &lt;tt class="docutils literal"&gt;Flask&lt;/tt&gt; et &lt;tt class="docutils literal"&gt;Couchdb&lt;/tt&gt; (e.g. &lt;a class="reference external" href="http://packages.python.org/Flask-CouchDB/"&gt;Flask-CouchDB&lt;/a&gt;),
on peut faire rapidement des trucs amusants, voire très utiles !&lt;/p&gt;
&lt;p&gt;Voici un &lt;strong&gt;squelette&lt;/strong&gt; d'application, fonctionnel, qui stocke et récupère des objets crées à partir de posts HTTP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;simplejson&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;couchdb.design&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ViewDefinition&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flaskext.couchdb&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;CouchDB permanent view&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;docs_by_author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ViewDefinition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;docs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;byauthor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s"&gt;&amp;#39;function(doc) { emit(doc.author, doc); }&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Retrieve docs&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;lt;author_id&amp;gt;/docs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;docs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;docs_by_author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;couch&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;simplejson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Add doc&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;lt;author_id&amp;gt;/add&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_doc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# Build doc with posted values&lt;/span&gt;
        &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Insert into database&lt;/span&gt;
        &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;couch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;simplejson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Flask main&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;COUCHDB_SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:5984/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;COUCHDB_DATABASE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;docsdemo&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flaskext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;couchdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CouchDBManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_viewdef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs_by_author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# Install the view&lt;/span&gt;
    &lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;J'ai déposé ce snippet sur &lt;a class="reference external" href="https://gist.github.com/1277655"&gt;Gist&lt;/a&gt; si besoin.&lt;/p&gt;
&lt;p&gt;On peut attaquer l'application avec &lt;tt class="docutils literal"&gt;curl&lt;/tt&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl -d &lt;span class="s2"&gt;&amp;quot;title=Globalia&amp;amp;year=2004&amp;quot;&lt;/span&gt; http://0.0.0.0:5000/jc.rufin/add
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;curl -d &lt;span class="s2"&gt;&amp;quot;title=Red%20Brazil&amp;amp;contest=goncourt&amp;quot;&lt;/span&gt; http://0.0.0.0:5000/jc.rufin/add
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;curl http://0.0.0.0:5000/jc.rufin/docs
&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Globalia&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;year&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2004&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;jc.rufin&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;_rev&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1-3195...fbc8&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;dec81d...1733c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Red Brazil&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;contest&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;goncourt&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;jc.rufin&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;_rev&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1-7b15...a9a2&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;dec81dc...17c0c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;N'oubliez pas de colorier les cases à votre guise, sinon ce squelette ne sert à rien, le JSON étant déjà la langue maternelle de CouchDB.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 11 Oct 2011 11:30:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-10-11:une-demo-squelettique-de-python-flask-couchdb-fr.html</guid><category>python</category><category>couchdb</category><category>flask</category></item><item><title>Mes premiers pas avec Heroku</title><link>http://blog.mathieu-leplatre.info/mes-premiers-pas-avec-heroku-fr.html</link><description>&lt;p&gt;J'ai pris le temps de tester la plateforme &lt;a class="reference external" href="http://www.heroku.com"&gt;Heroku&lt;/a&gt;, qui fait pas mal de bruit
en ce moment.&lt;/p&gt;
&lt;p&gt;L'idée est simple : le développeur pousse son code dans une branche Git
pour déployer son application. Ils se chargent du reste.&lt;/p&gt;
&lt;p&gt;La &lt;a class="reference external" href="http://devcenter.heroku.com/articles/python"&gt;documentation pour déployer du python&lt;/a&gt; est bien faite.&lt;/p&gt;
&lt;div class="section" id="heroku-et-virtualenv"&gt;
&lt;h2&gt;heroku et virtualenv&lt;/h2&gt;
&lt;p&gt;Pour commencer, j'ai installé l'outil &lt;tt class="docutils literal"&gt;heroku&lt;/tt&gt; en ruby (sic), dans un &lt;em&gt;virtualenv&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo aptitude install rubygems

virtualenv --no-site-packages env
source env/bin/activate
&lt;/pre&gt;
&lt;p&gt;Merci à Bruno, qui nous a expliqué récemment &lt;a class="reference external" href="http://bruno.im/2011/sep/29/streamline-your-django-workflow/"&gt;comment faire cohabiter les gems ruby et virtualenv&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export GEM_HOME=&amp;quot;$VIRTUAL_ENV/gems&amp;quot;
export GEM_PATH=&amp;quot;&amp;quot;
export PATH=$PATH:$GEM_HOME/bin
&lt;/pre&gt;
&lt;p&gt;(À ajouter au hook dans &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.virtualenvs/postactivate&lt;/span&gt;&lt;/tt&gt; pour plus tard)&lt;/p&gt;
&lt;p&gt;Pour terminer, il suffit de poser le &lt;em&gt;gem&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gem install heroku
&lt;/pre&gt;
&lt;p&gt;Et j'ai bien &lt;tt class="docutils literal"&gt;heroku&lt;/tt&gt; cloisonné dans le &lt;em&gt;virtualenv&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;which heroku
/home/mathieu/path/env/gems/bin/heroku

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku &lt;span class="nb"&gt;help&lt;/span&gt;
Usage: heroku COMMAND &lt;span class="o"&gt;[&lt;/span&gt;--app APP&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;-specific-options&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="heroku-et-la-configuration-de-l-application"&gt;
&lt;h2&gt;heroku et la Configuration de l'Application&lt;/h2&gt;
&lt;p&gt;Pour apprivoiser la plateforme, j'ai utilisé le &lt;em&gt;micro&lt;/em&gt;-framework &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;,
suggéré dans le tutorial python. C'est ultra-simple, ultra-léger, ultra-tout.&lt;/p&gt;
&lt;p&gt;Afin de gérer ma configuration, j'ai créé une classe &lt;tt class="docutils literal"&gt;Settings&lt;/tt&gt; qui utilise les variables d'environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# settings.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DEBUG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;TESTING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TESTING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PORT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HOST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Que je branche dans l'application :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# app.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Settings&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;#...&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# ...&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ensuite grâce au client &lt;tt class="docutils literal"&gt;heroku&lt;/tt&gt;, je peux contrôler à distance
la configuration de mon application, qui est redémarrée à chaque changement :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku config
&lt;span class="nv"&gt;PATH&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; bin:/usr/local/bin:/usr/bin:/bin
&lt;span class="nv"&gt;PYTHONUNBUFFERED&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku config:add &lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;True
Adding config vars:
  &lt;span class="nv"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; True
Restarting app... &lt;span class="k"&gt;done&lt;/span&gt;, v19.

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku config
&lt;span class="nv"&gt;DEBUG&lt;/span&gt;             &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; True
&lt;span class="nv"&gt;PATH&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; bin:/usr/local/bin:/usr/bin:/bin
&lt;span class="nv"&gt;PYTHONUNBUFFERED&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku config:remove DEBUG
Removing DEBUG and restarting app... &lt;span class="k"&gt;done&lt;/span&gt;, v20.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Je peux revenir en arrière quand un changement de config a posé problème :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku releases
Rel   Change                          By                    When
----  ----------------------          ----------            ----------
v20   Config remove DEBUG             your@mail.com         &lt;span class="m"&gt;25&lt;/span&gt; seconds ago
v19   Config add DEBUG                your@mail.com         &lt;span class="m"&gt;1&lt;/span&gt; minute ago


&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;src&lt;span class="nv"&gt;$ &lt;/span&gt;heroku rollback v19
Rolled back to v19
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 10 Oct 2011 10:30:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-10-10:mes-premiers-pas-avec-heroku-fr.html</guid><category>python</category><category>flask</category><category>tips</category><category>heroku</category></item><item><title>Avec Git rebase, vos arbres poussent droit</title><link>http://blog.mathieu-leplatre.info/avec-git-rebase-vos-arbres-poussent-droit-fr.html</link><description>&lt;div class="section" id="le-probleme"&gt;
&lt;h2&gt;Le problème&lt;/h2&gt;
&lt;p&gt;Par défaut, un &lt;tt class="docutils literal"&gt;git pull&lt;/tt&gt; est équivalent à &lt;tt class="docutils literal"&gt;git fetch&lt;/tt&gt; et &lt;tt class="docutils literal"&gt;git merge&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Les &lt;tt class="docutils literal"&gt;merge&lt;/tt&gt;, c'est bien pour les branches, mais pour le tronc, c'est pénible : ça pollue l'historique et
ça zig-zag sévère !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/git-merge-mess.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="la-solution"&gt;
&lt;h2&gt;La solution&lt;/h2&gt;
&lt;p&gt;En réalité, quand on travaille sur le tronc, ce qu'on veut c'est faire &lt;tt class="docutils literal"&gt;git fetch&lt;/tt&gt; et &lt;tt class="docutils literal"&gt;git rebase&lt;/tt&gt;.
C'est à dire, au lieu de ça :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
      A-----B-----C master
     /             \
D---E---F---G---H---I origin/master
&lt;/pre&gt;
&lt;p&gt;on veut ça :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
                  A---B---C master
                 /
D---E---F---G---H origin/master
&lt;/pre&gt;
&lt;p&gt;Autrement dit, un &lt;tt class="docutils literal"&gt;git pull &lt;span class="pre"&gt;--rebase&lt;/span&gt;&lt;/tt&gt; ! Pour le faire par défaut :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git config --global branch.autosetuprebase always
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et ensuite, au cas-où, pour le désactiver ponctuellement, utiliser &lt;tt class="docutils literal"&gt;git pull &lt;span class="pre"&gt;--no-rebase&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Maintenant, le tronc, il est tout propre !&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/git-merge-clean.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="les-consequences"&gt;
&lt;h2&gt;Les conséquences ?&lt;/h2&gt;
&lt;p&gt;Lors d'un &lt;tt class="docutils literal"&gt;git pull&lt;/tt&gt;, il faudra résoudre chaque &lt;em&gt;commit&lt;/em&gt; conflictuel indépendamment (perso, je préfère).&lt;/p&gt;
&lt;p&gt;Les êtres humains voudront utiliser &lt;a class="reference external" href="http://meld.sourceforge.net/"&gt;meld&lt;/a&gt;. Il suffit de l'installer, et lors
d'un conflit, de lancer &lt;tt class="docutils literal"&gt;git mergetool&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Une fois que tous les conflits sont résolus, terminer l'opération, avec &lt;tt class="docutils literal"&gt;git rebase &lt;span class="pre"&gt;--continue&lt;/span&gt;&lt;/tt&gt;, et pousser vos prouesses à
vos amis avec &lt;tt class="docutils literal"&gt;git push&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 16 Sep 2011 17:37:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-09-16:avec-git-rebase-vos-arbres-poussent-droit-fr.html</guid><category>git</category><category>tips</category></item><item><title>A very Simple and Stupid plugin system in python</title><link>http://blog.mathieu-leplatre.info/a-very-simple-and-stupid-plugin-system-in-python.html</link><description>&lt;p&gt;Two convenience functions for listing and importing python modules :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# utils.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plugins_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; List all python modules in specified plugins folders &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pathsep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;import_plugins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Import modules into specified environment (symbol table) &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;plugins_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;__import__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now use &lt;tt class="docutils literal"&gt;import_plugins()&lt;/tt&gt; wherever you need to use them !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# yourapp.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;import_plugins&lt;/span&gt;

&lt;span class="n"&gt;plugins_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;plugins/:module/plugins/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pathsep&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;import_plugins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plugins_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that in order to list all sub-classes of a specific one, you can use &lt;a class="reference external" href="http://code.activestate.com/recipes/576949/"&gt;this
recursive function&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That's all folks !&lt;/p&gt;
&lt;p&gt;It is very simple and very stupid, but useful :) You might now want to have
a look at serious stuff like &lt;a class="reference external" href="http://packages.python.org/Yapsy/"&gt;Yapsy&lt;/a&gt; or
&lt;a class="reference external" href="http://packages.python.org/distribute/pkg_resources.html"&gt;PkgResouces&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 02 Sep 2011 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-09-02:a-very-simple-and-stupid-plugin-system-in-python.html</guid><category>python</category></item><item><title>Le piège des QThread</title><link>http://blog.mathieu-leplatre.info/le-piege-des-qthread-fr.html</link><description>&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://www.makina-corpus.org/blog/le-pi%C3%A8ge-des-qthread"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Il y a de nombreux billets de blogs, posts sur des forums, tutoriaux,
pages Wiki et autres, mais au final, à part le fameux &lt;a class="reference external" href="http://labs.qt.nokia.com/2010/06/17/youre-doing-it-wrong/"&gt;&amp;quot;You're doing it wrong&amp;quot;&lt;/a&gt;,
qui peut paraître obscure au premier abord, je n'ai pas trouvé de résumé
de l'attrape-nigaud que je vais illustrer ici.&lt;/p&gt;
&lt;div class="section" id="le-piege"&gt;
&lt;h2&gt;Le piège&lt;/h2&gt;
&lt;p&gt;Naturellement, quand on veut faire une thread, on a envie d'hériter de l'objet
&lt;a class="reference external" href="http://doc.qt.nokia.com/latest/qthread.html"&gt;QThread&lt;/a&gt;. C'est ce qu'on fait avec le module &lt;tt class="docutils literal"&gt;threading&lt;/tt&gt; de python (en Java aussi il me semble).&lt;/p&gt;
&lt;p&gt;Voici ce qu'on écrit naturellement : &lt;tt class="docutils literal"&gt;Objet&lt;/tt&gt;, la classe qui file l'ordre et &lt;tt class="docutils literal"&gt;Worker&lt;/tt&gt;, une classe qui bosse dur en arrière plan. On connecte les signaux et on démarre !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4.QtCore&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4.QtGui&lt;/span&gt;  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;emitSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aSignal()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QThread&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aSlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Slot is executed in thread : &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentThreadId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Main application thread is : &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentThreadId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aSignal()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aSlot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emitSignal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Done.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ici, comme le slot &lt;tt class="docutils literal"&gt;aSlot()&lt;/tt&gt; est défini dans la classe &lt;tt class="docutils literal"&gt;Worker&lt;/tt&gt;, qui hérite de &lt;tt class="docutils literal"&gt;QThread&lt;/tt&gt;, on
pense naturellement qu'il va être exécuté en arrière-plan. Que nenni!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Main application thread is :  140068661352224
&lt;span class="c"&gt;# (... wait 1 sec ...)&lt;/span&gt;
Slot is executed in thread :  140068661352224
Done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="la-solution"&gt;
&lt;h2&gt;La solution&lt;/h2&gt;
&lt;p&gt;Un secret ? Les &lt;tt class="docutils literal"&gt;QThread&lt;/tt&gt; ne sont pas des threads. Elles enrobent l'execution d'une thread.&lt;/p&gt;
&lt;p&gt;L'appartenance (affinité) d'un objet à une thread détermine le &lt;a class="reference external" href="http://doc.qt.nokia.com/latest/qt.html#ConnectionType-enum"&gt;type de connexion&lt;/a&gt; &lt;a class="reference external" href="http://doc.qt.nokia.com/latest/threads-qobject.html#signals-and-slots-across-threads"&gt;utilisé par défaut&lt;/a&gt;, et par conséquent le comportement lors de l'execution des slots.&lt;/p&gt;
&lt;p&gt;Ce qu'il faut écrire : &lt;tt class="docutils literal"&gt;Worker&lt;/tt&gt; n'est plus une &lt;tt class="docutils literal"&gt;QThread&lt;/tt&gt;, on force son affinité dans une thread avec &lt;tt class="docutils literal"&gt;moveToThread()&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;emitSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aSignal()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;aSlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Slot is executed in thread : &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentThreadId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Main application thread is : &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentThreadId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QThread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moveToThread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aSignal()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aSlot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emitSignal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Done.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Désormais, l'exécution est bien asynchrone, comme on le souhaitait.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Main application thread is :  139961882056480
Done.
&lt;span class="c"&gt;# (... wait 1 sec ...)&lt;/span&gt;
Slot is executed in thread :  139961512900352
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tout simplement ! Si j'avais lu mon article avant, je n'aurais pas perdu autant de temps à lire toutes ces docs ambiguës sur le Net.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.qt.nokia.com/wiki/Threads_Events_QObjects"&gt;Explications complètes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://doc.qt.nokia.com/4.7-snapshot/thread-basics.html"&gt;Thread Basics&lt;/a&gt; &lt;em&gt;(attention au piège)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 01 Sep 2011 11:09:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-09-01:le-piege-des-qthread-fr.html</guid><category>qt</category><category>python</category><category>tips</category></item><item><title>PostGIS data in C++ using GDAL and Qt</title><link>http://blog.mathieu-leplatre.info/postgis-data-in-c-using-gdal-and-qt.html</link><description>&lt;p&gt;&lt;em&gt;Original post at&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I did not find any ready-to-use snippets on the Web on this matter, so if
you are lucky enough, you'll find this one.&lt;/p&gt;
&lt;p&gt;The objective is to read GIS geometries from a PostGIS database and manipulate
them in C++. I use Qt here, but it is not really a prerequisite, it just
helps a lot. Well, actually, it saves lives.&lt;/p&gt;
&lt;div class="section" id="database-connection"&gt;
&lt;h2&gt;Database Connection&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;m_db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QSqlDatabase&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;addDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QPSQL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;m_db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setHostName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;m_db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setDatabaseName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dbname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;m_db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setUserName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;m_db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do not close the database at the end of each query.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;m_db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;m_db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QSqlDatabase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// reinitialize for real&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shut it down like this in your class' destructor or you may have errors like
&lt;em&gt;QSqlDatabasePrivate::removeDatabase: connection 'qt_sql_default_connection' is still in use, all queries will cease to work&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="records-reading"&gt;
&lt;h2&gt;Records Reading&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;QSqlQueryModel&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;QSqlQueryModel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SELECT id, ST_AsBinary(the_geom) AS the_geom &amp;quot;&lt;/span&gt;
                &lt;span class="s"&gt;&amp;quot;FROM table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numRows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rowCount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;numRows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Read fields&lt;/span&gt;
    &lt;span class="n"&gt;qlonglong&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toLongLong&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;QByteArray&lt;/span&gt; &lt;span class="n"&gt;wkb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;the_geom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toByteArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Process !&lt;/span&gt;
    &lt;span class="n"&gt;processRecord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wkb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;QByteArray uses &lt;a class="reference external" href="http://doc.qt.nokia.com/latest/implicit-sharing.html"&gt;implicit sharing&lt;/a&gt;
and can be passed as argument without being copied.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="geometries-parsing"&gt;
&lt;h2&gt;Geometries Parsing&lt;/h2&gt;
&lt;p&gt;In this part, we rely on &lt;a class="reference external" href="http://www.gdal.org"&gt;GDAL (Geospatial Data Abstraction Library)&lt;/a&gt;
&lt;a class="reference external" href="http://www.gdal.org/ogr/osr_tutorial.html"&gt;OGRSpatialReference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It provides an API to access geometries coordinates etc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;quot;ogrsf_frmts.h&amp;quot; &lt;/span&gt;&lt;span class="c1"&gt;// GDAL&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;processRecord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qlonglong&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QByteArray&lt;/span&gt; &lt;span class="n"&gt;wkb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;OGRSpatialReference&lt;/span&gt; &lt;span class="n"&gt;osr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;OGRGeometry&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Parse WKB&lt;/span&gt;
    &lt;span class="n"&gt;OGRErr&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OGRGeometryFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;createFromWkb&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;wkb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constData&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;osr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;OGRERR_NONE&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// process error, like emit signal&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Analyse geometry by type and process them as you wish&lt;/span&gt;
    &lt;span class="n"&gt;OGRwkbGeometryType&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wkbFlatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getGeometryType&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;wkbLineString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;OGRLineString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;poRing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OGRLineString&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// Access line string nodes for example :&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poRing&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getNumPoints&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;OGRPoint&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;poRing&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getPoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getX&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getY&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;wkbMultiLineString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;OGRGeometryCollection&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;poCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OGRGeometryCollection&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;poCol&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getNumGeometries&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;numCol&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Access line length for example :&lt;/span&gt;
                &lt;span class="n"&gt;qDebug&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;poCol&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getGeometryRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;get_Length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;// process error, like emit signal&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Clean-up&lt;/span&gt;
    &lt;span class="n"&gt;OGRGeometryFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;destroyGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this snippet, I only process linestrings, but all &lt;a class="reference external" href="http://www.gdal.org/ogr/ogr__core_8h.html#800236a0d460ef66e687b7b65610f12a"&gt;geometry types are available&lt;/a&gt;.
Consider writing a recursive function for geometry collections and so forth...&lt;/p&gt;
&lt;p&gt;Hope this helped !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 23 Aug 2011 10:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-08-23:postgis-data-in-c-using-gdal-and-qt.html</guid><category>c++</category><category>qt</category><category>postgis</category><category>gdal</category></item><item><title>Django, gestion des settings d'application simplifiée</title><link>http://blog.mathieu-leplatre.info/django-gestion-des-settings-dapplication-simplifiee-fr.html</link><description>&lt;p&gt;Je reprends ici la méthode présentée par &lt;a class="reference external" href="http://blog.akei.com/post/4575980188/une-autre-facon-de-gerer-ses-settings-dapplication"&gt;Nicolas&lt;/a&gt; et je la couple avec mon petit &lt;a class="reference external" href="https://github.com/makinacorpus/easydict"&gt;EasyDict&lt;/a&gt; pour alléger l'utilisation !
Comme ses snippets sont drôles, je ne les change pas !&lt;/p&gt;
&lt;div class="section" id="parametres-par-default-de-l-application"&gt;
&lt;h2&gt;Paramètres par défault de l'application&lt;/h2&gt;
&lt;p&gt;On a juste un constructeur à ajouter par rapport à ce qu'avait présenté NiKo (avec &lt;a class="reference external" href="http://pypi.python.org/pypi/easydict/"&gt;EasyDict installé&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apps/my_app/__init__.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;easydict&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EasyDict&lt;/span&gt;

&lt;span class="n"&gt;app_settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EasyDict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;FOO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;ENABLE_CHUCK_NORRIZ_MODE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;MY_APP_CONFIG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="surcharge-dans-le-projet"&gt;
&lt;h2&gt;Surcharge dans le projet&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# settings.py&lt;/span&gt;
&lt;span class="n"&gt;MY_APP_CONFIG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;ENABLE_CHUCK_NORRIZ_MODE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="utilisation"&gt;
&lt;h2&gt;Utilisation !&lt;/h2&gt;
&lt;p&gt;EasyDict transforme les clés du &lt;cite&gt;dict&lt;/cite&gt; en attributs, on accède aux settings en toute simplicité !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# foo/bar.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;my_app&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app_settings&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;app_settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FOO&lt;/span&gt; &lt;span class="c"&gt;# 42&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# apps/my_app/utils.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;app_settings&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;app_settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ENABLE_CHUCK_NORRIZ_MODE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Chuck Norriz is watching you&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Dance dance, little lamb&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 29 Jul 2011 18:30:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-07-29:django-gestion-des-settings-dapplication-simplifiee-fr.html</guid><category>django</category><category>easydict</category></item><item><title>Carte des vélos avec Leaflet</title><link>http://blog.mathieu-leplatre.info/carte-des-velos-avec-leaflet-fr.html</link><description>&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Les bookmarks, un peu comme les cahiers de recettes, c'est bien de les remplir mais encore faut-il trouver les bons au moment adéquate !
Même quand il s'agit d'outils, de bibliothèques et de services Web, il faut trouver l'occasion de les tester avant le grand soir !
Et si on veut en faire un article de blog, alors là, il faut en plus donner envie d'y goûter :)&lt;/p&gt;
&lt;p&gt;Ici, je prends plein d'ingrédients trouvés au bord des chemins :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/pyquery/"&gt;pyquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://leaflet.cloudmade.com"&gt;leaflet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.yahoo.com/yql/"&gt;Yahoo Query Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mustache.github.com/"&gt;mustache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Je secoue bien fort ! (sans oublier de saupoudrer de &lt;a class="reference external" href="http://jquery.com"&gt;jquery&lt;/a&gt;) et j'obtiens une carte interactive des stations vélos de Toulouse !&lt;/p&gt;
&lt;div class="section" id="la-liste-des-stations"&gt;
&lt;h2&gt;La liste des stations&lt;/h2&gt;
&lt;p&gt;Sur le site &lt;a class="reference external" href="http://velonow.info"&gt;http://velonow.info&lt;/a&gt;, je récupère un fichier XML qui contient
la liste statique des stations de vélo et leurs identifiants.&lt;/p&gt;
&lt;p&gt;C'est l'occasion d'utiliser &lt;a class="reference external" href="http://packages.python.org/pyquery/"&gt;pyquery&lt;/a&gt; pour le transformer en GeoJSON. &lt;a class="reference external" href="http://www.gawel.org"&gt;Gawel&lt;/a&gt; nous l'avait présenté aux djangocongs, il s'agit du portage de l'API de JQuery en python !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyquery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PyQuery&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;

&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://server.com/file.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;marker&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;geojson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lng&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Je trouve ça génial d'avoir la même syntaxe de manipulation du DOM en python et en javascript ! Et pour faire du webscrapping, c'est top !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="affichage-de-la-carte"&gt;
&lt;h2&gt;Affichage de la carte&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cloudmade.com"&gt;Cloudmade&lt;/a&gt; a créé &lt;a class="reference external" href="http://leaflet.cloudmade.com"&gt;leaflet&lt;/a&gt; qui rejoint &lt;a class="reference external" href="http://www.tile5.org"&gt;Tile5&lt;/a&gt; et &lt;a class="reference external" href="http://polymaps.org"&gt;Polymaps&lt;/a&gt; en tant que challenger d'Openlayers !&lt;/p&gt;
&lt;p&gt;C'est une bibliothèque légère, jolie, fluide, optimisée pour les mobiles,
et même compatible Internet Explorer !&lt;/p&gt;
&lt;p&gt;Pour afficher une carte centrée sur la localisation du visiteur de la page, il suffit de faire ça :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;cloudmadeUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;cloudmade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TileLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cloudmadeUrl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cloudmade&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locateAndSetView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour l'instant, Leaflet ne gère pas les couches au format GeoJSON, en
attendant &lt;a class="reference external" href="https://github.com/CloudMade/Leaflet/issues/13"&gt;la prochaine release&lt;/a&gt;,
nous allons ajouter les points des stations en 2 coups de cuillère à pot :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LatLng&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="details-d-une-station-en-popup"&gt;
&lt;h2&gt;Détails d'une station en popup&lt;/h2&gt;
&lt;p&gt;Les détails d'une station (nombre de vélos, emplacements, libres, occupés) sont disponibles en fournissant un identifiant sur le site de &lt;a class="reference external" href="http://www.velo.toulouse.fr"&gt;velo toulouse&lt;/a&gt;.
Mais lorsqu'on appelle la page en Ajax, le corps de la réponse XML est vide. Une protection contre la bidouillabilité sûrement.&lt;/p&gt;
&lt;p&gt;C'est là que &lt;a class="reference external" href="http://developer.yahoo.com/yql/"&gt;Yahoo Query Language&lt;/a&gt; nous aide ! On passe par Yahoo pour accèder aux ressources du Web avec &lt;a class="reference external" href="http://developer.yahoo.com/yql/console/"&gt;des requêtes similaires aux bases de données&lt;/a&gt; !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;yql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;select * from xml where url = &amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;yqlurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://query.yahooapis.com/v1/public/yql?q=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yqlurl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// show data in pop up !&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Je fais une petite fonction pour transformer l'XML récupéré en objet :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;xml2obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmldata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmldata&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;nodeName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;station&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;free&amp;gt;&lt;/span&gt;12&lt;span class="nt"&gt;&amp;lt;/free&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;available&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/available&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;total&amp;gt;&lt;/span&gt;16&lt;span class="nt"&gt;&amp;lt;/total&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/station&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;devient :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;available&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour mettre en forme ces informations dans la pop-up, nous allons utiliser &lt;a class="reference external" href="http://mustache.github.com/"&gt;mustache&lt;/a&gt; !
Conceptuellement, il s'agit tout simplement d'un moteur de template avec &lt;a class="reference external" href="http://mustache.github.com/mustache.5.html"&gt;une syntaxe simplifiée&lt;/a&gt; ! Il y a une implémentation
dans quasiment tous les languages, dont Javascript.&lt;/p&gt;
&lt;p&gt;Cela évite principalement de faire du code javascript pour la mise en forme des données, notamment pour
celles récupérées en JSON via Ajax.&lt;/p&gt;
&lt;p&gt;On construit une chaîne avec les fameuses &lt;cite&gt;{{}}&lt;/cite&gt; et on fournit un objet pour substituer les valeurs :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;xml2obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xmldata&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;station&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;h2&amp;gt;Station #{{ number }}&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;p&amp;gt;{{ address }}&amp;lt;/p&amp;gt;                    \&lt;/span&gt;
&lt;span class="s2"&gt;                {{# station }}                          \&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;ul&amp;gt;                                    \&lt;/span&gt;
&lt;span class="s2"&gt;                  &amp;lt;li&amp;gt;{{ available }} available&amp;lt;/li&amp;gt;    \&lt;/span&gt;
&lt;span class="s2"&gt;                  &amp;lt;li&amp;gt;{{ free }} free slots&amp;lt;/li&amp;gt;        \&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;/ul&amp;gt;                                   \&lt;/span&gt;
&lt;span class="s2"&gt;                {{/ station }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Mustache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Show marker popup !&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindPopup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;openPopup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et voilà !&lt;/p&gt;
&lt;img alt="" src="/images/leaflet-velo.png" /&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 30 May 2011 15:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-05-30:carte-des-velos-avec-leaflet-fr.html</guid><category>javascript</category><category>leaflet</category><category>mustache</category><category>pyquery</category><category>jquery</category></item><item><title>URL reverse en Javascript avec django</title><link>http://blog.mathieu-leplatre.info/url-reverse-en-javascript-avec-django-fr.html</link><description>&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Un aspect fondamental de la philosophie django consiste à éviter toute sorte de redondance : &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/misc/design-philosophies/"&gt;Don't Repeat Yourself&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La tentation est souvent trop belle, et respecter les fondamentaux s'avère parfois difficile ! C'est le cas de la réécriture d'URL en Javascript.&lt;/p&gt;
&lt;p&gt;Imaginons l'URL suivante définie dans &lt;cite&gt;urls.py&lt;/cite&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^/plop/(?P&amp;lt;x&amp;gt;\d)/(?P&amp;lt;y&amp;gt;\d)$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;plopview&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;plop&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour utiliser cette URL en Javascript avec des paramètres variables, on peut imaginer plusieurs approches.&lt;/p&gt;
&lt;div class="section" id="j-aime-pas"&gt;
&lt;h2&gt;J'aime pas&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;generic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{% url &amp;#39;plop&amp;#39; 0 0 %}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;generic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0/0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pas DRY ! à cause des &lt;cite&gt;/&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s2"&gt;&amp;quot;{% url &amp;#39;plop&amp;#39; 0 0 %}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;../../&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pas DRY non plus !&lt;/p&gt;
&lt;p&gt;On peut aussi changer le pattern pour éviter les &lt;cite&gt;/&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^/plop/(?P&amp;lt;x&amp;gt;[\d]|x)/(?P&amp;lt;y&amp;gt;[\d]|y)$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;plop&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;generic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{% url &amp;#39;toto&amp;#39; &amp;#39;x&amp;#39; &amp;#39;y&amp;#39; %}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;generic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C'est mieux, mais pas DRY ! à cause des &lt;cite&gt;x&lt;/cite&gt;, &lt;cite&gt;y&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;On pourrait aussi imaginer une vue django qui ferait le &lt;cite&gt;reverse()&lt;/cite&gt;. Mais cela multiplierait les aller-retours serveur, ce qui n'est pas toujours recommandé...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-bonne"&gt;
&lt;h2&gt;La bonne&lt;/h2&gt;
&lt;p&gt;Il existe une application pour ça ! &lt;a class="reference external" href="https://github.com/Dimitri-Gnidash/django-js-utils"&gt;django-js-utils&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elle se charge de générer un fichier Javascript (&lt;cite&gt;settings.URLS_JS_GENERATED_FILE&lt;/cite&gt;) grâce à une commande de gestion&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python manage.js js_urls
&lt;/pre&gt;
&lt;p&gt;Ensuite on utilise explicitement le fichier généré&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ MEDIA_URL }}/js/dutils.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ MEDIA_URL }}/js/dutils.conf.urls.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et on fait du vrai DRY !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;dutils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gagné ! \o/&lt;/p&gt;
&lt;p&gt;Un inconvénient à noter tout de même : la liste de l'ensemble des URLs de l'application est accessible au public. Mais j'ai pas mieux ma pauvre dame !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 27 May 2011 15:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-05-27:url-reverse-en-javascript-avec-django-fr.html</guid><category>django</category><category>javascript</category></item><item><title>Django et Jenkins</title><link>http://blog.mathieu-leplatre.info/django-et-jenkins-fr.html</link><description>&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://makina-corpus.org"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lors des &lt;a class="reference external" href="http://rencontres.django-fr.org/2011/"&gt;Recontres Django 2011&lt;/a&gt;, &lt;a class="reference external" href="http://www.akei.com"&gt;Nicolas Perriault&lt;/a&gt; a présenté les principes de l'&lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Int%C3%A9gration_continue"&gt;intégration continue&lt;/a&gt; avec &lt;a class="reference external" href="http://djangoproject.com"&gt;Django&lt;/a&gt; et &lt;a class="reference external" href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le diaporama, &lt;a class="reference external" href="http://www.akei.com/presentations/2011-Djangocong/index.html"&gt;disponible en ligne&lt;/a&gt;, suffit amplement pour démarrer !&lt;/p&gt;
&lt;p&gt;Mais pour qu'un projet django soit testé facilement, il doit se déployer et se lancer facilement ! C'est certes l'occasion de peaufiner l'automatisation, mais c'est loin d'être trivial quand il y a du SIG, du &lt;a class="reference external" href="http://celeryproject.org"&gt;celery&lt;/a&gt; ...
Je vais tenter de partager mes notes dans ce billet.&lt;/p&gt;
&lt;div class="section" id="le-minimum-requis"&gt;
&lt;h2&gt;Le minimum requis&lt;/h2&gt;
&lt;p&gt;Pour l'installation de Jenkins, rien de plus simple (&lt;em&gt;sur debian&lt;/em&gt;)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo aptitude install jenkins
&lt;/pre&gt;
&lt;p&gt;Mais il va falloir lui donner de quoi télécharger votre code sur &lt;cite&gt;git&lt;/cite&gt; et parfois compiler les librairies python nécessaires&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo aptitude install git-core
sudo aptitude install python-dev build-essential python-virtualenv
&lt;/pre&gt;
&lt;p&gt;Les plugins indispensables :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;covertura&lt;/li&gt;
&lt;li&gt;Violations&lt;/li&gt;
&lt;li&gt;GIT&lt;/li&gt;
&lt;li&gt;Green Balls&lt;/li&gt;
&lt;li&gt;Continuous Integration Game&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="organisation-du-projet-django"&gt;
&lt;h2&gt;Organisation du projet Django&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Définition des dépendances globales dans &lt;cite&gt;requirements.txt&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Django&amp;gt;=1.3
south
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Définition des dépendances liées aux tests dans &lt;cite&gt;requirements-testing.txt&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
django-jenkins
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ajout d'un fichier &lt;cite&gt;pylint.rc&lt;/cite&gt; pour régler les niveaux d'alerte &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0008/"&gt;PEP-8&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[MESSAGES CONTROL]
disable=E1101,E1103,C0111,I0011,I0012,W0704,W0142,W0212,W0232,W0613,W0702,R0201
...
...
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Modèle de settings de tests dans &lt;cite&gt;project/test_settings.py&lt;/cite&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;default_settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;TEMPLATE_DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DEBUG&lt;/span&gt;

&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django_jenkins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;PYLINT_RCFILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PROJECT_ROOT_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;..&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pylint.rc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-du-job-jenkins"&gt;
&lt;h2&gt;Configuration du job Jenkins&lt;/h2&gt;
&lt;p&gt;Les informations de la présentation de Nicolas suffisent pour démarrer.&lt;/p&gt;
&lt;p&gt;J'ai noté cependant qu'il fallait lancer &lt;cite&gt;manage.py&lt;/cite&gt; depuis un répertoire parent au projet pour que l'exploration du code source fonctionne.&lt;/p&gt;
&lt;p&gt;Pour profiter de la magie des ingrédients précédents, nous aurons donc juste à ajouter un bloc script shell, qui installe les dépendances listées, pose les settings de test et migre la base (avec &lt;a class="reference external" href="http://south.aeracode.org"&gt;South&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash -ex&lt;/span&gt;
virtualenv --quiet ve
&lt;span class="nb"&gt;source&lt;/span&gt; ./ve/bin/activate
pip install -E ./ve -r &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/requirements.txt
pip install -E ./ve -r &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/requirements-testing.txt
cp &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/project/test_settings.py &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/project/local_settings.py
python &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/project/manage.py syncdb --noinput
python &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/project/manage.py migrate
deactivate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;et celui-ci pour lancer les tests proprements dits :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash -ex&lt;/span&gt;
virtualenv --quiet ve
&lt;span class="nb"&gt;source&lt;/span&gt; ./ve/bin/activate
python &lt;span class="nv"&gt;$WORKSPACE&lt;/span&gt;/project/manage.py jenkins yourapps
deactivate
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pour-un-projet-sig"&gt;
&lt;h2&gt;Pour un projet SIG&lt;/h2&gt;
&lt;p&gt;Il faut installer certaines librairies SIG sur le serveur Jenkins.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo aptitude install libproj0 libgeos-c1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si le besoin de cloisonner ces librairies pour chaque projet se fait ressentir, il faut utiliser des outils comme &lt;a class="reference external" href="http://www.minitage.org"&gt;minitage&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="spatialite-au-lieu-de-postgis-comme-base-de-tests"&gt;
&lt;h3&gt;Spatialite au lieu de PostGIS comme base de tests&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo aptitude install python-sqlite libspatialite2 sqlite3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Script d'initialisation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://www.gaia-gis.it/spatialite/init_spatialite-2.3.zip -O /tmp/init_spatialite-2.3.zip
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/lib/
sudo unzip /tmp/init_spatialite-2.3.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;avec dans &lt;cite&gt;test_settings.py&lt;/cite&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.contrib.gis.db.backends.spatialite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;SPATIALITE_SQL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;usr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;local&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;init_spatialite-2.3.sql&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si pysqlite n'a pas été compilé avec les extensions C (Erreur: &lt;em&gt;The pysqlite library does not support C extension loading.&lt;/em&gt;) il va falloir le recompiler !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo aptitude install libsqlite3-dev
wget http://pysqlite.googlecode.com/files/pysqlite-2.6.3.tar.gz
tar -zxvf pysqlite-2.6.3.tar.gz
&lt;span class="nb"&gt;cd &lt;/span&gt;pysqlite-2.6.3
sed -i s/define&lt;span class="o"&gt;=&lt;/span&gt;SQLITE_OMIT_LOAD_EXTENSION/#define&lt;span class="o"&gt;=&lt;/span&gt;SQLITE_OMIT_LOAD_EXTENSION/g setup.cfg

&lt;span class="nb"&gt;source&lt;/span&gt; ./ve/bin/activate
python setup.py install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pour-un-projet-celery"&gt;
&lt;h2&gt;Pour un projet Celery&lt;/h2&gt;
&lt;div class="section" id="kombu-au-lieu-de-rabbitmq-comme-gestionnaire-de-messages"&gt;
&lt;h3&gt;Kombu au lieu de RabbitMQ comme gestionnaire de messages&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;requirements-testing.txt&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
kombu
djkombu
&lt;/pre&gt;
&lt;p&gt;&lt;cite&gt;test_settings.py&lt;/cite&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;djkombu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;CARROT_BACKEND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;django&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour désactiver la parallélisation lors des tests&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CELERY_ALWAYS_EAGER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 28 Apr 2011 17:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-04-28:django-et-jenkins-fr.html</guid><category>django</category><category>jenkins</category><category>continuous integration</category><category></category></item><item><title>landez : fabriquer facilement des fichiers MBTiles en python</title><link>http://blog.mathieu-leplatre.info/landez-fabriquer-facilement-des-fichiers-mbtiles-en-python-fr.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.makina-corpus.org/blog/integration-mbtiles-format-android"&gt;Une nouvelle fois&lt;/a&gt;,
Makina Corpus se rapproche du projet &lt;a class="reference external" href="http://mapbox.com/"&gt;MapBox&lt;/a&gt;, avec une contribution
sur la librairie &lt;a class="reference external" href="https://github.com/mapbox/mbutil/contributors"&gt;mbutil&lt;/a&gt;, qui permet de fabriquer des fichiers MBTiles.&lt;/p&gt;
&lt;p&gt;Nous l'utilisons dans &lt;a class="reference external" href="https://github.com/makinacorpus/landez"&gt;landez&lt;/a&gt;, un outil qui permet
de créer des fichiers MBTiles à partir de sites de tuiles externes ou de feuilles de styles Mapnik.&lt;/p&gt;
&lt;p&gt;Son utilisation est fort simple !&lt;/p&gt;
&lt;p&gt;Pour un service de tuiles externe :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;

&lt;span class="c"&gt;# downloads from Cloudmade by default, be careful with terms of usage  !&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dest.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_coverage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;zoomlevels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Avec une feuille de style locale :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;landez&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;

&lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MBTilesBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stylefile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yourstyle.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dest.mbtiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_coverage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;180.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;90.0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;zoomlevels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;mb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Une branche experimentale a été initiée pour travailler sur le multiprocessing
afin de paralléliser au maximum la fabrication des tuiles en amont. Si cela vous intéresse, soyez les bienvenus !&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 21 Apr 2011 12:04:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-04-21:landez-fabriquer-facilement-des-fichiers-mbtiles-en-python-fr.html</guid><category>python</category><category>mapbox</category><category>gis</category><category>landez</category></item><item><title>Deploy Django behind a reverse proxy</title><link>http://blog.mathieu-leplatre.info/deploy-django-behind-a-reverse-proxy.html</link><description>&lt;p&gt;By default, Django will assume that your root URL is the root (&lt;cite&gt;/&lt;/cite&gt;) of your domain.&lt;/p&gt;
&lt;p&gt;Using a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Reverse_proxy"&gt;reverse proxy&lt;/a&gt;, we can run multiple django instances on the same server, using the same domain. (&lt;cite&gt;http://server.org/site1/&lt;/cite&gt;, &lt;cite&gt;http://server.org/site2/&lt;/cite&gt;, ...)&lt;/p&gt;
&lt;p&gt;Many redirects of your application will then be broken (most notable is validation of login form). You can fix that by forcing the root URL in your settings&lt;/p&gt;
&lt;pre class="literal-block"&gt;
FORCE_SCRIPT_NAME = '/site1'
&lt;/pre&gt;
&lt;p&gt;If you use &lt;a class="reference external" href="https://github.com/dcramer/django-sentry"&gt;Sentry&lt;/a&gt;, you'll also have to set&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SENTRY_URL_PREFIX = '/site1'
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 19 Apr 2011 00:00:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-04-19:deploy-django-behind-a-reverse-proxy.html</guid><category>tips</category><category>deployment</category><category>django</category></item><item><title>Ajouter un sélecteur de couches (layer switcher) à polymaps</title><link>http://blog.mathieu-leplatre.info/ajouter-un-selecteur-de-couches-layer-switcher-a-polymaps-fr.html</link><description>&lt;p&gt;Je fais partie de ceux qui sont persuadés que &lt;a class="reference external" href="http://polymaps.org/"&gt;polymaps&lt;/a&gt; est tout à fait mature !
Certes, il ne fournit pas autant de fonctionnalités et de connecteurs qu'OpenLayers,
mais il ne semble pas que ce soit son objectif ! Il est léger et personnalisable à souhait !&lt;/p&gt;
&lt;p&gt;Pour le prouver, nous allons créer ici un sélecteur de couches pour polymaps.&lt;/p&gt;
&lt;p&gt;Javascript n'est pas mon langage de prédilection, encore moins pour faire
de la programmation orientée objets.&lt;/p&gt;
&lt;p&gt;Voici ce que j'ai réussi à comprendre de l'héritage et la portée dans le modèle objet de polymaps :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;      &lt;span class="c1"&gt;// new class or inheritance&lt;/span&gt;
        &lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;// member variable&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;privatemethod&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// [...]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classmethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// [...]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// allows to chain method calls&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;polymaps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour faire ce sélecteur de couches, nous aurons besoin d'une classe disposant :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;de variables membres qui stockent la liste de couches disponibles (&lt;tt class="docutils literal"&gt;layers&lt;/tt&gt;) et la couche actuelle (&lt;tt class="docutils literal"&gt;current&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;d'une méthode de classe qui bascule d'une couche à l'autre&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;switchto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;  &lt;span class="c1"&gt;// find layer by name&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// if already loaded, make it visible&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="c1"&gt;// else load it&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// hide current&lt;/span&gt;
    &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;d'une méthode qui crée l'interface avec les radio buttons et qui les relie à la méthode précedente&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// [...]&lt;/span&gt;
    &lt;span class="c1"&gt;// For each layer, create a &amp;lt;input&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;input&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;radio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// [...]&lt;/span&gt;
        &lt;span class="c1"&gt;// Link onChange event on radio&lt;/span&gt;
        &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onchange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;switchto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="c1"&gt;// [...]&lt;/span&gt;
        &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// [...]&lt;/span&gt;
    &lt;span class="nx"&gt;elt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maintenant il suffit de l'utiliser ! Voici un exemple simple avec deux couches :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Create a normal map&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mcmap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interact&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="c1"&gt;// Define the layers&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;layers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;layer1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://server1/{Z}/{X}/{Y}.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="s2"&gt;&amp;quot;layer2&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://server2/{Z}/{X}/{Y}.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Add the default one&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;layer1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// Create the switcher&lt;/span&gt;
&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;switcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Fond de carte&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;layerswitcher&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et voilà ! Nous avons notre sélecteur de couches, avec un code html
tout simple (&lt;tt class="docutils literal"&gt;div&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;input&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;label&lt;/tt&gt;), facile à styler en CSS,
contrairement au &lt;a class="reference external" href="http://pastebin.com/LQPBv6tZ"&gt;gros pavé généré par le *LayerSwitcher* d'OpenLayers&lt;/a&gt;.&lt;/p&gt;
&lt;img alt="" src="/images/polymaps-switcher.png" /&gt;
&lt;p&gt;Pour accéder au code complet et l'améliorer : &amp;quot;&lt;a class="reference external" href="https://github.com/makinacorpus/polymaps-extensions"&gt;Fork me on GitHub&lt;/a&gt;&amp;quot; !&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Article original publié chez&lt;/em&gt; &lt;a class="reference external" href="http://www.makina-corpus.org/blog/ajouter-un-s%C3%A9lecteur-de-couches-layer-switcher-%C3%A0-polymaps"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 09 Mar 2011 12:03:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-03-09:ajouter-un-selecteur-de-couches-layer-switcher-a-polymaps-fr.html</guid><category>polymaps</category><category>tips</category><category>javascript</category><category>gis</category></item><item><title>Afficher des pictogrammes avec polymaps</title><link>http://blog.mathieu-leplatre.info/afficher-des-pictogrammes-avec-polymaps-fr.html</link><description>&lt;p&gt;En reprenant l'exemple de l'&lt;a class="reference external" href="http://www.makina-corpus.org/blog/afficher-les-donn%C3%A9es-de-paris-opendata-avec-polymaps"&gt;épisode précédent avec polymaps&lt;/a&gt;, nous allons maintenant afficher des pictogrammes sur les points.&lt;/p&gt;
&lt;p&gt;On conserve la couche GeoJSON en utilisant un &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Fonction_de_rappel"&gt;callback&lt;/a&gt; pour l'évènement &lt;tt class="docutils literal"&gt;load&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geoJson&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;collecteurs.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dans la fonction &lt;tt class="docutils literal"&gt;load()&lt;/tt&gt;, nous allons remplacer les cercles dessinés par défaut par des pictogrammes en manipulant les éléments de la page (&lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Document_Object_Model"&gt;DOM&lt;/a&gt;).
Nous utilisons ici la variable &lt;tt class="docutils literal"&gt;n$&lt;/tt&gt;, qui provient du miniscript &lt;tt class="docutils literal"&gt;nns.js&lt;/tt&gt; livré dans l'archive &lt;em&gt;polymaps&lt;/em&gt; et qui facilite la manipulation du DOM (le vénérable &lt;a class="reference external" href="http://jquery.com/"&gt;jquery&lt;/a&gt; ferait aussi l'affaire)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ICONSIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Parcourir les features de la carte&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Ajouter et positionner le pictogramme&lt;/span&gt;
        &lt;span class="c1"&gt;// (à partir de la position du cercle)&lt;/span&gt;
        &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg:image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ICONSIZE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;height&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ICONSIZE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transform&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                            &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; translate(-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ICONSIZE&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;
                                       &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ICONSIZE&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Enlever le cercle original&lt;/span&gt;
        &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Définir le chemin du pictogramme à utiliser&lt;/span&gt;
        &lt;span class="c1"&gt;// en fonction de l&amp;#39;attribut&lt;/span&gt;
        &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;xlink:href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Etat&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Actif&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;
                               &lt;span class="s1"&gt;&amp;#39;actif.svg&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;inactif.svg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" src="/images/polymaps-pictogrammes.jpg" /&gt;
&lt;p&gt;&lt;em&gt;© City of Paris, ODBL, CloudMade, OpenStreetMap contributors, CCBYSA&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ici, nous avons utilisé des pictogrammes SVG, mais le même code fonctionne avec des /images PNG ou JPG...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 28 Feb 2011 17:02:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-02-28:afficher-des-pictogrammes-avec-polymaps-fr.html</guid><category>javascript</category><category>polymaps</category><category>gis</category></item><item><title>Afficher les données de Paris OpenData avec polymaps</title><link>http://blog.mathieu-leplatre.info/afficher-les-donnees-de-paris-opendata-avec-polymaps-fr.html</link><description>&lt;p&gt;En ouvrant l'accès à un catalogue de données diverses (Équipements, bâti, arbres d'alignement, arrêtés municipaux, ...)
l'initiative &lt;a class="reference external" href="http://opendata.paris.fr"&gt;ParisData&lt;/a&gt;, l'Open Data de la capitale, nous donne l'occasion de manipuler des données georéférencées.
Notre objectif ici sera de les publier sur une page Web grâce à un outil simple et léger : &lt;a class="reference external" href="http://polymaps.org"&gt;polymaps&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="transformation"&gt;
&lt;h2&gt;Transformation&lt;/h2&gt;
&lt;p&gt;Le système de projection utilisé pour certaines données du catalogue est la &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Lambert_conformal_conic_projection"&gt;Lambert Conformal Conic&lt;/a&gt; (NTF, EPSG 9802)&lt;/p&gt;
&lt;p&gt;Dans la mesure où nous voulons déployer quelquechose de très simple, nous n'avons pas l'intention de sortir la grosse artillerie habituelle (Serveur WMS, Mapserver, QGIS MapServer, ...), nous allons plutôt utiliser un fichier GeoJSON, en longitudes/latitudes WGS84 (EPSG:4326).&lt;/p&gt;
&lt;p&gt;Pour cela, la bibliothèque &lt;a class="reference external" href="http://www.gdal.org"&gt;GDAL&lt;/a&gt; nous offre tous les outils adéquates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ouvrir le fichier shape (ESRI Shapefile) fourni par ParisData&lt;/li&gt;
&lt;li&gt;Reprojetter en EPSG:4326&lt;/li&gt;
&lt;li&gt;Choisir les données (attributaires) que nous allons conserver&lt;/li&gt;
&lt;li&gt;Exporter en GeoJSON&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour notre exemple, nous avons choisi les emplacements des &lt;a class="reference external" href="http://opendata.paris.fr/opendata/jsp/site/Portal.jsp?document_id=57&amp;amp;portlet_id=106"&gt;points de collecte de verre&lt;/a&gt;.
Parmis les champs fournis, nous choisissons de ne conserver que leur état (&lt;tt class="docutils literal"&gt;Lb_Etat_E&lt;/tt&gt;) et le nom de leur emplacement (&lt;tt class="docutils literal"&gt;Emplacemnt&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;Comme python est notre language préféré, et que c'est toujours un plaisir de le montrer en action, voici la petite procédure qui fait tout ça :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# python gdal&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;osgeo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ogr&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;osgeo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;osr&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="c"&gt;# Ouvrir le répertoire contenant les shape&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INPUT_FOLDER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# La projection de sortie&lt;/span&gt;
&lt;span class="n"&gt;spatialRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;osr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SpatialReference&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;spatialRef&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImportFromEPSG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4326&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Le fichier de sortie&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetDriverByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GeoJSON&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateDataSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUT_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Parcourir les couches&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# Reprojection originale -&amp;gt; destination&lt;/span&gt;
    &lt;span class="n"&gt;originalSpatialRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSpatialRef&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;coordTransform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;osr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CoordinateTransformation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;originalSpatialRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                  &lt;span class="n"&gt;spatialRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# Choix des champs des données&lt;/span&gt;
    &lt;span class="n"&gt;properties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FeatureDefn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddFieldDefn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FieldDefn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Etat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddFieldDefn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FieldDefn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Emplacement&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# Créer la nouvelle couche GeoJSON&lt;/span&gt;
    &lt;span class="n"&gt;newLayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateLayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetName&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;spatialRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Parcourir les features&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# Créer la nouvelle feature&lt;/span&gt;
        &lt;span class="n"&gt;newFeature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ogr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Remplir les champs choisis&lt;/span&gt;
        &lt;span class="n"&gt;newFeature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Etat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Lb_Etat_E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;newFeature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Emplacement&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Emplacemnt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="c"&gt;# Reprojetter la feature&lt;/span&gt;
        &lt;span class="n"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetGeometryRef&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordTransform&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Sauvegarder&lt;/span&gt;
        &lt;span class="n"&gt;newFeature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SetGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;newLayer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateFeature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newFeature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;newFeature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Destroy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nous obtenons en sortie un fichier GeoJSON avec les points en lat / long et les données 'Etat' et 'Emplacement'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Etat&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Actif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emplacement&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;37 CHATEAU D&amp;#39;EAU ANGLE BOUCHARDON&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Point&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.358920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;48.871154&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Feature&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Etat&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Actif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Emplacement&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;13 place de la Nation&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Point&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;coordinates&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2.398154&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;48.848723&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Le fichier pèse 174Ko, mais lorsqu'Apache le servira il pèsera 20Ko (grâce à la compression gzip !)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="affichage"&gt;
&lt;h2&gt;Affichage&lt;/h2&gt;
&lt;p&gt;Nous choisissons d'afficher ces données dans une page avec &lt;a class="reference external" href="http://polymaps.org"&gt;polymaps&lt;/a&gt;. Il s'agit
d'un composant Javascript permettant de créer des cartes interactives.&lt;/p&gt;
&lt;p&gt;Les critères de comparaison avec OpenLayers (OL) sont:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;la légèreté (~30Ko, 10Ko en gzip!)&lt;/li&gt;
&lt;li&gt;la rapiditité d'exécution&lt;/li&gt;
&lt;li&gt;l'utilisation de GeoJSON et SVG (flexibilité et styles)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cependant, la couverture fonctionnelle n'est absolument pas comparable. Mais pour afficher une carte avec des points, c'est largement suffisant !&lt;/p&gt;
&lt;p&gt;On commence par un fond de carte: &lt;a class="reference external" href="http://cloudmade.com/"&gt;Cloudmade&lt;/a&gt;, dont les tuiles sont dessinées à partir d'&lt;a class="reference external" href="http://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://{S}tile.cloudmade.com&amp;quot;&lt;/span&gt;
                  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/1a1b06b230af4efdbb989ea99e9841af&amp;quot;&lt;/span&gt;
                  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/998/256/{Z}/{X}/{Y}.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On ajoute ensuite nos données GeoJSON:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geoJson&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;collecteurs.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Polymaps facilite la personnalisation du dessin en fonction des données. Ici, nous affichons en vert les collecteurs à l'état &amp;quot;Actif&amp;quot; et en rouge les autres.
De même nous mettons leur &amp;quot;Emplacement&amp;quot; en tooltip (&lt;tt class="docutils literal"&gt;svg:title&lt;/tt&gt;, Firefox 4, Chrome, Opera 11).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geoJson&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;collecteurs.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;po&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stylist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Etat&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Actif&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;
                                        &lt;span class="s1"&gt;&amp;#39;green&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                            &lt;span class="p"&gt;}))&lt;/span&gt;
                      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Emplacement&lt;/span&gt;
                            &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" src="/images/parisdata-polymaps.jpg" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.makina-corpus.org/demos/mle/parisdata-polymaps/"&gt;Accéder à la page de démonstration&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Finalement, l'étape la plus compliquée était de reprojetter les données.
On regrettera donc que l'initiative ParisData les ait publié sous cette forme exotique.&lt;/p&gt;
&lt;p&gt;Comme le soulignait &lt;a class="reference external" href="http://www.biologeek.com/2010/12/ce-nest-pas-la-taille-qui-compte/"&gt;David&lt;/a&gt; : &lt;em&gt;Publieurs de données, concentrez vous sur la qualité, pas la taille, les développeurs vous remercieront !&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;À noter également que nous avons choisi une approche privilégiant la légèreté. Or, plusieurs sources de données de ParisData sont volumineuses et ne pourraient pas être affichées en GeoJSON sans mettre à genoux le navigateur. Nous serions alors contraints de servir les données sous forme de tuiles...&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 24 Feb 2011 13:02:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-02-24:afficher-les-donnees-de-paris-opendata-avec-polymaps-fr.html</guid><category>python</category><category>polymaps</category><category>gis</category></item><item><title>SQLAlchemy, a brave new World</title><link>http://blog.mathieu-leplatre.info/sqlalchemy-a-brave-new-world.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt; becomes an essential technology for any python developper interacting with relational databases.
As a Django developper, I have sat on my laurels for long, being completely satisfied with the &lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/db/queries/"&gt;Django ORM&lt;/a&gt;. It was time to explore its challenger.&lt;/p&gt;
&lt;p&gt;First, before it sounds like I crush my favorite framework : when Django ORM was developped, there was no SQLAlchemy, or almost no good python ORM at all.&lt;/p&gt;
&lt;p&gt;Here are some of the things you might want to know first:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Django ORM documentation is clean and well organized&lt;/li&gt;
&lt;li&gt;Dango ORM was not really meant to be used outside django apps&lt;/li&gt;
&lt;li&gt;Django ORM has limitations when it comes to &lt;a class="reference external" href="http://sralab.com/2009/01/14/limitations-of-the-django-orm-10-in-model-inheritance/"&gt;Model&lt;/a&gt; &lt;a class="reference external" href="http://linfiniti.com/2010/03/django-foreign-key-inheritance-solved/"&gt;Inheritance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Django ORM does not manage models migrations without extra stuff like &lt;a class="reference external" href="http://south.aeracode.org/"&gt;South&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Django ORM support for multiple databases was introduced &lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/db/multi-db/"&gt;in version 1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Django ORM does not always manage connection pooling (e.g. &lt;a class="reference external" href="http://code.djangoproject.com/ticket/7732"&gt;with Oracle&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SQLAlchemy is light and framework independant&lt;/li&gt;
&lt;li&gt;SQLAlchemy is stripped to a minimum set of (clean and well-implemented) features&lt;/li&gt;
&lt;li&gt;SQLAlchemy is very flexible and supports mapping of objects using declarations or metadata&lt;/li&gt;
&lt;li&gt;SQLAlchemy documentation is bloated (API reference is mixed-in with long explanation and use cases)&lt;/li&gt;
&lt;li&gt;SQLAlchemy requires a better knowledge of advanced python mechanisms and architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to explore SQLAlchemy (SA) I created &lt;a class="reference external" href="http://pypi.python.org/pypi/pyfspot"&gt;pyfspot&lt;/a&gt; (&lt;a class="reference external" href="https://github.com/leplatrem/pyfspot"&gt;sources are on github&lt;/a&gt;): a very small application to manage the database of the F-Spot photo manager.
It is not supposed to save lives, but that will at least be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a pretext for me to dive into the API&lt;/li&gt;
&lt;li&gt;a small and useful tool&lt;/li&gt;
&lt;li&gt;an example of SA in action for any developper interested&lt;/li&gt;
&lt;li&gt;a base for a full &lt;a class="reference external" href="http://f-spot.org/"&gt;F-Spot&lt;/a&gt; management application (&lt;tt class="docutils literal"&gt;&amp;lt;/dreamer&amp;gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I discovered a few concrete things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Django inspectdb equivalent ?&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://code.google.com/p/sqlautocode/"&gt;sqlautocode&lt;/a&gt; (unfortunately &lt;a class="reference external" href="http://code.google.com/p/sqlautocode/issues/detail?id=32"&gt;I could not use it&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Django fixtures equivalent ?&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://code.google.com/p/fixture/"&gt;fixture&lt;/a&gt; (&lt;a class="reference external" href="http://farmdev.com/projects/fixture/using-loadable-fixture.html#an-example-of-loading-data-using-sqlalchemy"&gt;demo&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Django &lt;cite&gt;model.DoesNotExist&lt;/cite&gt; ?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# get() does not throw exception&lt;/span&gt;
&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# filter().one() does ...&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;sqlalchemy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;orm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NoResultFound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# d&amp;#39;oh!&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Invert condition like Django exclude() ?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Escape LIKE condition ?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="si"&gt;%%&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Intersections of many-to-many ?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# A tag&lt;/span&gt;
&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;# A set of photos&lt;/span&gt;
&lt;span class="n"&gt;photoset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;# intersect() won&amp;#39;t work&lt;/span&gt;
&lt;span class="n"&gt;photoset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intersect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;InstrumentedList&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# Use any()&lt;/span&gt;
&lt;span class="n"&gt;photoset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, those were my first steps. As expected, it did not feel so well to relearn how to walk. But at least I am now ready to get my bearings in SQLAlchemy's world.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Original post at&lt;/em&gt; &lt;a class="reference external" href="http://www.makina-corpus.org/blog/sqlalchemy-brave-new-world"&gt;Makina Corpus&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 22 Feb 2011 15:02:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-02-22:sqlalchemy-a-brave-new-world.html</guid><category>python</category><category>django</category><category>sqlalchemy</category></item><item><title>Javascript Beautifier in command-line (and in Geany editor)</title><link>http://blog.mathieu-leplatre.info/javascript-beautifier-in-command-line-and-in-geany-editor.html</link><description>&lt;p&gt;Install a Javascript engine (like Mozilla Rhino)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo aptitude install rhino
&lt;/pre&gt;
&lt;p&gt;Get the beautifier script (put it somewhere like &lt;cite&gt;~/.bin&lt;/cite&gt;)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget http://jsbeautifier.org/beautify.js
&lt;/pre&gt;
&lt;p&gt;Add the following at the end of &lt;cite&gt;beautify.js&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
print( js_beautify( readFile( arguments[0] )));
&lt;/pre&gt;
&lt;p&gt;Create a shell script that will call it (like &lt;cite&gt;~/.bin/beautifyjs&lt;/cite&gt;)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/sh
java -cp /usr/share/java/js.jar org.mozilla.javascript.tools.shell.Main ~/.bin/beautify.js $*
&lt;/pre&gt;
&lt;p&gt;Make sure to set it executable&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chmod +x ~/.bin/beautifyjs
&lt;/pre&gt;
&lt;div class="section" id="use-it-from-command-line"&gt;
&lt;h2&gt;Use it from command-line&lt;/h2&gt;
&lt;p&gt;At least to check that it works !&lt;/p&gt;
&lt;pre class="literal-block"&gt;
~/.bin/beautifyjs /your/file.js
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="or-in-geany-editor"&gt;
&lt;h2&gt;Or in Geany Editor&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Open a Javascript file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Open menu &lt;em&gt;Build&lt;/em&gt; &amp;gt; &lt;em&gt;Define Build Commands&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new entry (like &lt;cite&gt;beautify&lt;/cite&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In command, enter the following&lt;/p&gt;
&lt;pre class="literal-block"&gt;
~/.bin/beautifyjs %f &amp;gt; /tmp/tmpfile.js &amp;amp;&amp;amp; geany /tmp/tmpfile.js
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In working directory, enter &lt;cite&gt;%d&lt;/cite&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 01 Feb 2011 10:20:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-02-01:javascript-beautifier-in-command-line-and-in-geany-editor.html</guid><category>tips</category><category>javascript</category></item><item><title>Python UTF-8 print fails when redirecting stdout</title><link>http://blog.mathieu-leplatre.info/python-utf-8-print-fails-when-redirecting-stdout.html</link><description>&lt;p&gt;Consider the following piece of code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;Վարդանաշեն&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running this in a terminal works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python test.py
Վարդանաշեն
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Redirecting standard output to a file &lt;strong&gt;fails&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python test.py &amp;gt; file
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;test.py&amp;quot;&lt;/span&gt;, line 2, in &amp;lt;module&amp;gt;
    print u&lt;span class="s2"&gt;&amp;quot;Վարդանաշեն&amp;quot;&lt;/span&gt;
UnicodeEncodeError: &lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt; codec can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t encode characters in position 0-9: ordinal not in range&lt;span class="o"&gt;(&lt;/span&gt;128&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://wiki.python.org/moin/PrintFails"&gt;Explanations are available on Python official wiki&lt;/a&gt;: default encoding has to be forced.&lt;/p&gt;
&lt;p&gt;With an environment variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ PYTHONIOENCODING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf_8&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;PYTHONIOENCODING
&lt;span class="nv"&gt;$ &lt;/span&gt;python test.py &amp;gt; file
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With source modification:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;locale&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getwriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getpreferredencoding&lt;/span&gt;&lt;span class="p"&gt;())(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 26 Jan 2011 11:25:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2011-01-26:python-utf-8-print-fails-when-redirecting-stdout.html</guid><category>python</category><category>encoding</category><category>shell</category></item><item><title>Grep with context lines above and below</title><link>http://blog.mathieu-leplatre.info/grep-with-context-lines-above-and-below.html</link><description>&lt;p&gt;I was about to write a script to implement exactly what already exists natively in GNU &lt;cite&gt;grep&lt;/cite&gt;, a blasphemy I got saved from by my workmates.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grep --line-number --colour&lt;span class="o"&gt;=&lt;/span&gt;AUTO --before-context &lt;span class="m"&gt;5&lt;/span&gt; --after-context &lt;span class="m"&gt;5&lt;/span&gt; PATTERN FILENAME
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" src="/images/grep-lines.png" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 30 Sep 2010 10:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2010-09-30:grep-with-context-lines-above-and-below.html</guid><category>tips</category><category>shell</category></item><item><title>Python lazy hasattr()</title><link>http://blog.mathieu-leplatre.info/python-lazy-hasattr.html</link><description>&lt;p&gt;Python &lt;cite&gt;hasattr()&lt;/cite&gt; evaluates the specified attribute, which may not be desired !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;evaluated&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;b&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;evaluated&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ClassA&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;evaluated&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;evaluated&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now note that &lt;cite&gt;hasattr()&lt;/cite&gt; evaluates the lazy attribute !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;evaluated&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;evaluated&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us fix that !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lazyhasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                   &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ClassA&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lazyhasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lazyhasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 30 Sep 2010 10:20:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2010-09-30:python-lazy-hasattr.html</guid><category>tips</category><category>python</category></item><item><title>Python check arguments types</title><link>http://blog.mathieu-leplatre.info/python-check-arguments-types.html</link><description>&lt;p&gt;Decorators help us wrap some routines at function invocation. Here I show a small example that raises &lt;cite&gt;TypeError&lt;/cite&gt; exceptions when given args have unexpected type. Note that &lt;strong&gt;it is not pythonic to type check&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This recipe is quite old, as its first pieces appear in &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0318/"&gt;PEP-0318&lt;/a&gt; in 2003. &lt;a class="reference external" href="http://pypi.python.org/pypi/typecheck"&gt;A module exists too&lt;/a&gt; but it looks neglected...&lt;/p&gt;
&lt;p&gt;The (heretic) decorator itself !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;accepts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argstypes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargstypes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argstypes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;() takes at most &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; non-keyword arguments (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; given)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argstypes&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="n"&gt;argspairs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argstypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;kwargstypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Unexpected keyword argument &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;()&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;argspairs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargstypes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;argspairs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Parameter &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; is not &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapped&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us decorate !&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nd"&gt;@accepts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See it in action...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;least&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;argument&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unexpected&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="n"&gt;argument&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;arg3&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or with classes...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nd"&gt;@accepts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;         &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nd"&gt;@accepts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;g&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;         &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;__main__.B object at 0x902466c&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same can be applied to &lt;cite&gt;return&lt;/cite&gt; :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;returns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rtype&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rtype&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;return value &lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s"&gt; does not match &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rtype&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapped&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nd"&gt;@accepts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="nd"&gt;@returns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;..but kids, don't do this at home :-)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Thu, 10 Jun 2010 11:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2010-06-10:python-check-arguments-types.html</guid><category>python</category><category>decorators</category></item><item><title>Filesystem Watch with PyQt4</title><link>http://blog.mathieu-leplatre.info/filesystem-watch-with-pyqt4.html</link><description>&lt;p&gt;I decided to write a generic program that can watch a folder or some files and run a command when changes occur.&lt;/p&gt;
&lt;p&gt;Most of the work is done by PyQt4's &lt;cite&gt;QFileSystemWatcher&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;qfsw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QFileSystemWatcher&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPaths&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;path1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file2&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;directoryChanged(QString)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fileChanged(QString)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# !/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Runs a command when a file system change occurs in specified list of paths.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# (c) Copyright 2008, Mathieu Leplatre,&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# This software may be used and distributed according to the terms&lt;/span&gt;
&lt;span class="c"&gt;# of the GNU Public License, incorporated herein by reference.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;signal&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;optparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OptionParser&lt;/span&gt;

&lt;span class="c"&gt;# Parse command-line options&lt;/span&gt;
&lt;span class="n"&gt;usage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;Usage: %prog [options] COMMAND PATHS&lt;/span&gt;
&lt;span class="s"&gt;Run COMMAND when a file system change occurs in specified list of PATHS.&lt;/span&gt;

&lt;span class="s"&gt;COMMAND can contain &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; to refer changed file or directory.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OptionParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%prog 1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_help&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Command&lt;/span&gt;
&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# List of paths&lt;/span&gt;
&lt;span class="n"&gt;paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;onFileSystemChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Callback when file or folder change&lt;/span&gt;
&lt;span class="sd"&gt;    @param path : Changed path&lt;/span&gt;
&lt;span class="sd"&gt;    @type  path : string&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
    &lt;span class="c"&gt;# Execute command replacing %s with path:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
    &lt;span class="c"&gt;# Run as different process&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Run &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;...&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Set up file system watcher&lt;/span&gt;
    &lt;span class="n"&gt;qfsw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QFileSystemWatcher&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPaths&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;directoryChanged(QString)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;onFileSystemChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qfsw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fileChanged(QString)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;onFileSystemChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Allow program to be interrupted with Ctrl+C&lt;/span&gt;
    &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIGINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SIG_DFL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Qt Main loop&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec_&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 14 Aug 2009 13:37:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2009-08-14:filesystem-watch-with-pyqt4.html</guid><category>qt</category><category>pyqt4</category><category>python</category></item><item><title>Text extents with Python Cairo</title><link>http://blog.mathieu-leplatre.info/text-extents-with-python-cairo.html</link><description>&lt;p&gt;I needed this and could not find it. So I share it here (and even better if Google'd index it!)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;textwidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cairo&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;
    &lt;span class="n"&gt;surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SVGSurface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;undefined.svg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_font_face&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Arial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cairo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_SLANT_NORMAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cairo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_WEIGHT_BOLD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_font_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xbearing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ybearing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xadvance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yadvance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_extents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 10 Aug 2009 10:20:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2009-08-10:text-extents-with-python-cairo.html</guid><category>cairo</category><category>python</category></item><item><title>Colored Output in Console with Python</title><link>http://blog.mathieu-leplatre.info/colored-output-in-console-with-python.html</link><description>&lt;p&gt;Playing around with ANSI in a color capable terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GREEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;YELLOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BLUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAGENTA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CYAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WHITE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#following from Python cookbook, #475186&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_colours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;isatty&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isatty&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="c"&gt;# auto color only on TTYs&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;curses&lt;/span&gt;
        &lt;span class="n"&gt;curses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupterm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;curses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tigetnum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;colors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# guess false in case of error&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;has_colours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;has_colours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;printout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;has_colours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\x1b&lt;/span&gt;&lt;span class="s"&gt;[1;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;m&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\x1b&lt;/span&gt;&lt;span class="s"&gt;[0m&amp;quot;&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A simple demo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Test&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="n"&gt;printout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[debug]   &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GREEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;in green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;printout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[warning] &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;YELLOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;in yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;printout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;[error]   &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;in red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" src="/images/ansi-color.png" /&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Wed, 31 Dec 2008 13:37:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2008-12-31:colored-output-in-console-with-python.html</guid><category>terminal</category><category>python</category></item><item><title>Automatic blog publishing using Python and XML-RPC</title><link>http://blog.mathieu-leplatre.info/automatic-blog-publishing-using-python-and-xml-rpc.html</link><description>&lt;p&gt;The following piece of code collects links in a Pligg database (but could be any kind of source like RSS feed...) and automatically builds and publishes entries in a blog using XML-RPC.&lt;/p&gt;
&lt;p&gt;A small database class :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3306&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;root123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;MySQLdb&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MySQLdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sqlquery&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sqlquery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Blog publishing class :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urlapi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xmlrpclib&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xmlrpclib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpclib&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmlrpclib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServerProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;urlapi&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Could not connect to &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;newPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blogid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;em&amp;gt;empty entry&amp;lt;/em&amp;gt;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metaWeblog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;blogid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xmlrpclib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fault&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fault&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;fault&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;faultString&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build the SQL query : all entries of current week&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weeks&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;agelimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;
&lt;span class="n"&gt;stmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;SELECT link_url, link_url_title&lt;/span&gt;
&lt;span class="s"&gt;FROM pligg_links&lt;/span&gt;
&lt;span class="s"&gt;WHERE link_status = &amp;#39;published&amp;#39; AND link_published_date &amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;ORDER BY link_published_date DESC&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;agelimit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Put everything together :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DatabaseAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stmt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;lt;ul&amp;gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;lt;/ul&amp;gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BlogAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://yourblog/xmlrpc/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Links week #&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%W&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Mon, 01 Dec 2008 13:37:00 +0100</pubDate><guid>tag:blog.mathieu-leplatre.info,2008-12-01:automatic-blog-publishing-using-python-and-xml-rpc.html</guid><category>python</category><category>xml-rpc</category></item><item><title>Another success story about Ruby On Rails working with Apache</title><link>http://blog.mathieu-leplatre.info/another-success-story-about-ruby-on-rails-working-with-apache.html</link><description>&lt;p&gt;This procedure does not guarantee anything and should be considered approximate. However this should be fairly enough for someone familiar with Apache environments.&lt;/p&gt;
&lt;div class="section" id="ruby-environment"&gt;
&lt;h2&gt;Ruby environment&lt;/h2&gt;
&lt;p&gt;We install Ruby via apt-get&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install ruby libzlib-ruby rdoc irb
&lt;/pre&gt;
&lt;p&gt;At this point, you can run Ruby scripts like you did with Python or Perl.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gems"&gt;
&lt;h2&gt;Gems&lt;/h2&gt;
&lt;p&gt;Gems are like perl's CPAN or PHP's PEAR. We install it from source in order to enjoy the whole Gems repository (instead of being limited to packaged gems only).&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget &amp;quot;http://rubyforge.org/frs/download.php/38646/rubygems-x.x.x.tgz&amp;quot;
tar -xvzf rubygems-x.x.x.tgz
rm rubygems-x.x.x.tgz
cd rubygems-x.x.x
sudo ruby setup.rb
cd ..
rm -r rubygems-1.2.0
sudo ln -s /usr/bin/gem1.8 /usr/bin/gem
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;(DO NOT use sudo ruby rubygemsx.x.x/setup.rb)&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo gem update --system
&lt;/pre&gt;
&lt;p&gt;We will install additionnal applications... those depend on your needs. The Gems are compiled on the fly, therefore development packages are usually required along.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ruby-on-rails"&gt;
&lt;h2&gt;Ruby on Rails&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
sudo gem install rails --include-dependencies
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql-support"&gt;
&lt;h2&gt;Mysql support&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install libmysql-ruby libmysqlclient15-dev
sudo gem install mysql
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="imagemagick-support"&gt;
&lt;h2&gt;ImageMagick support&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install librmagick-ruby1.8 libmagick9-dev
sudo gem install rmagick
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="integrate-with-apache"&gt;
&lt;h2&gt;Integrate with Apache&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install apache2-prefork-dev
&lt;/pre&gt;
&lt;p&gt;Enable additionnal modules&lt;/p&gt;
&lt;pre class="literal-block"&gt;
a2enmod rewrite
a2enmod suexec
a2enmod include
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;I might have missed some.&lt;/em&gt;. Some tutorials recommend Fast-CGI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-phusion-passenger-mod-rails"&gt;
&lt;h2&gt;Install Phusion Passenger (mod_rails)&lt;/h2&gt;
&lt;p&gt;Usually, RubyOnRails has its own web server (&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Mongrel_(web_server)"&gt;Mongrel&lt;/a&gt;) on port 3000. It is also quite common to have a cluster of processes with load balancing and Apache proxy...&lt;/p&gt;
&lt;p&gt;But you may want to do something very simple that just integrates within Apache. Here comes Phusion Passenger!&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo gem install passenger
sudo passenger-install-apache2-module
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;(following the instructions, or look at the [[http://www.modrails.com/documentation/Users%20guide.html|user guide]]).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;At the end, the wizard tells you to add some lines in &lt;cite&gt;httpd.conf&lt;/cite&gt;. I recommend the following method instead, which splits those lines into a module that you can enable / disable.&lt;/p&gt;
&lt;p&gt;Create two files :
* /etc/apache2/mods-available/mod_rails.load&lt;/p&gt;
&lt;pre class="literal-block"&gt;
LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.0.2/ext/apache2/mod_passenger.so
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;/etc/apache2/mods-available/mod_rails.conf&lt;/p&gt;
&lt;pre class="literal-block"&gt;
PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.0.2
PassengerRuby /usr/bin/ruby1.8
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enable this new module&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo a2enmod mod_rails
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="create-your-virtualhost"&gt;
&lt;h2&gt;Create your VirtualHost&lt;/h2&gt;
&lt;p&gt;The DocumentRoot must point to the public folder of your Ruby On Rails application.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;If your Ruby application is alone, your apache site will be something like this&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;virtualhost *:80&amp;gt;
    ServerName yourapp
    DocumentRoot /var/rails/yourapp/public/
    ErrorLog /var/rails/yourapp/log/apache.log

    &amp;lt;directory /var/rails/yourapp/public&amp;gt;
       Options ExecCGI FollowSymLinks
       AddHandler cgi-script .cgi
       AllowOverride all
       Order allow,deny
       Allow from all
    &amp;lt;/directory&amp;gt;
&amp;lt;/virtualhost&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;If you want it a subfolder of your current DocumentRoot, look at this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The simplest for me was to setup a sub-domain. Don't forget to update your DNS information.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Relax ! Restart Apache and that's it !&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 01 Aug 2008 09:12:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2008-08-01:another-success-story-about-ruby-on-rails-working-with-apache.html</guid><category>ruby</category><category>howto</category></item><item><title>Apply Debian patches step-by-step</title><link>http://blog.mathieu-leplatre.info/apply-debian-patches-step-by-step.html</link><description>&lt;p&gt;I thought it may be relevant to share the history of commands I used to apply a patch and submit it to &lt;a class="reference external" href="http://launchpad.net"&gt;launchpad&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="get-the-tools"&gt;
&lt;h2&gt;0) Get the tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;You'll need a working PGP key&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install the necessary tools&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install devscripts dpatch fakeroot dh-make
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;(I might have forgotten some...)&lt;/em&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-files"&gt;
&lt;h2&gt;1) Get the files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Get the last package source, from the package page : &lt;a class="reference external" href="http://packages.ubuntu.com/hardy/exaile"&gt;http://packages.ubuntu.com/hardy/exaile&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dget -x http://archive.ubuntu.com/ubuntu/pool/universe/e/exaile/exaile_0.2.11.1-0ubuntu3.dsc
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Get the patch file&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget http://launchpadlibrarian.net/9466876/gui_track_filter.patch
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Step in the package code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd exaile-0.2.11.1/
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apply-the-patch"&gt;
&lt;h2&gt;2) Apply the patch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Have a look at the list of patches in the &lt;cite&gt;debian/patches&lt;/cite&gt; folder&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ls debian/patches/

00list
01_fix_makefile_for_pysupport.dpatch
02_files-on-share-dir.dpatch
03_fix_mmkeys.dpatch
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create yours respecting dpatch filenames pattern (without extension)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dpatch-edit-patch 04_fix_search_exit
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;You now have a shell in the &lt;cite&gt;/tmp&lt;/cite&gt; folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Apply the patch file&lt;/p&gt;
&lt;pre class="literal-block"&gt;
patch -p0 &amp;lt; $HOME/Desktop/gui_track_filter.patch
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Exit the shell&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="describe-your-changes"&gt;
&lt;h2&gt;3) Describe your changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Add your dpatch name in the &lt;cite&gt;00list&lt;/cite&gt; file&lt;/p&gt;
&lt;pre class="literal-block"&gt;
nano debian/patches/00list
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Modify Debian changelog using&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dch -i
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Your name and signing information will be automatically added.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Look at previous descriptions and respect their structure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Include launchpad bug number with &lt;cite&gt;(LP: #number)&lt;/cite&gt; string&lt;/p&gt;
&lt;pre class="literal-block"&gt;
exaile (0.2.11.1-0ubuntu4) hardy; urgency=low
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;cite&gt;debian/patches/04_fix_search_exit.dpatch&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
debian/patches/00list:
- Fix clean search terms on exit (LP: #95860)

-- Mathieu Leplatre &amp;lt;xxxx&amp;#64;gmail.com&amp;gt;  Tue, 27 May 2008 10:45:42 -0300
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="create-debdiff"&gt;
&lt;h2&gt;4) Create debdiff&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Create the dsc and diff files using&lt;/p&gt;
&lt;pre class="literal-block"&gt;
debuild -S
cd ..
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Step in the package code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create the debdiff file using&lt;/p&gt;
&lt;pre class="literal-block"&gt;
debdiff exaile_0.2.11.1-0ubuntu3.dsc exaile_0.2.11.1-0ubuntu4.dsc &amp;gt; exaile_0.2.11.1-0ubuntu4.debdiff
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Have a look at it, it should include all modifications of previous steps&lt;/p&gt;
&lt;pre class="literal-block"&gt;
diff -Nru exaile-0.2.11.1/debian/changelog exaile-0.2.11.1/debian/changelog
--- exaile-0.2.11.1/debian/changelog        2008-05-27 10:54:56.000000000 -0300
+++ exaile-0.2.11.1/debian/changelog        2008-05-27 10:54:56.000000000 -0300
&amp;#64;&amp;#64; -1,3 +1,11 &amp;#64;&amp;#64;
+exaile (0.2.11.1-0ubuntu4) hardy; urgency=low
+
+  * debian/patches/04_fix_search_exit.dpatch,
+    debian/patches/00list:
+    - Fix clean search terms on exit (LP: #95860)
+
+ -- Mathieu Leplatre &amp;lt;xxxx&amp;#64;gmail.com&amp;gt;  Tue, 27 May 2008 10:45:42 -0300
+
 exaile (0.2.11.1-0ubuntu3) hardy; urgency=low

   * debian/patches/03_fix_mmkeys.dpatch,
diff -Nru /tmp/RIBRnUlXkn/exaile-0.2.11.1/debian/patches/00list /tmp/XQpuhOBOst/exaile-0.2.11.1/debian/patches/00l
ist
--- exaile-0.2.11.1/debian/patches/00list   2008-05-27 10:54:56.000000000 -0300
+++ exaile-0.2.11.1/debian/patches/00list   2008-05-27 10:54:56.000000000 -0300
&amp;#64;&amp;#64; -1,3 +1,5 &amp;#64;&amp;#64;
 01_fix_makefile_for_pysupport
 02_files-on-share-dir
 03_fix_mmkeys
+04_fix_search_exit
+
diff -Nru /tmp/RIBRnUlXkn/exaile-0.2.11.1/debian/patches/04_fix_search_exit.dpatch /tmp/XQpuhOBOst/exaile-0.2.11.1
/debian/patches/04_fix_search_exit.dpatch
--- exaile-0.2.11.1/debian/patches/04_fix_search_exit.dpatch        1969-12-31 21:00:00.000000000 -0300
+++ exaile-0.2.11.1/debian/patches/04_fix_search_exit.dpatch        2008-05-27 10:54:56.000000000 -0300
&amp;#64;&amp;#64; -0,0 +1,27 &amp;#64;&amp;#64;
+#! /bin/sh /usr/share/dpatch/dpatch-run
+## 04_fix_search_exit.dpatch by Mathieu Leplatre &amp;lt;xxxx&amp;#64;gmail.com&amp;gt;
+##
+## All lines beginning with `## DP:' are a description of the patch.
+## DP: Patch to clean search terms on exit
+
+&amp;#64;DPATCH&amp;#64;
+diff -urNad exaile-0.2.11.1~/xl/gui/main.py exaile-0.2.11.1/xl/gui/main.py
+--- exaile-0.2.11.1~/xl/gui/main.py        2007-11-07 13:12:52.000000000 -0300
++++ exaile-0.2.11.1/xl/gui/main.py 2008-05-27 10:37:36.000000000 -0300
+&amp;#64;&amp;#64; -1659,8 +1659,16 &amp;#64;&amp;#64;
+         queuefile = xl.path.get_config('queued.save')
+         if os.path.isfile(queuefile):
+             os.unlink(queuefile)
++
+
+         if self.player.current: self.player.current.stop()
++
++        # Clear the search filter so that the entire playlist is saved
++        self.tracks_filter.set_text('')
++        try:
++            self.on_search()
++        except:  # In case we're quitting before the playlist loaded
++            pass
+
+         for i in range(self.playlists_nb.get_n_pages()):
+             page = self.playlists_nb.get_nth_page(i)
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Fri, 01 Aug 2008 09:12:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2008-08-01:apply-debian-patches-step-by-step.html</guid><category>debian</category><category>howto</category></item><item><title>Static build of Cairo and librsvg</title><link>http://blog.mathieu-leplatre.info/static-build-of-cairo-and-librsvg.html</link><description>&lt;img alt="" src="/images/unicode.png" /&gt;
&lt;div class="section" id="why"&gt;
&lt;h2&gt;Why ?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Convert SVG files to PDF or PNG, with full Unicode support (right-to-left languages), transparency, gradients, PDF image compression, ...&lt;/li&gt;
&lt;li&gt;Cairo and librsvg are the best in town.&lt;/li&gt;
&lt;li&gt;Cairo and librsvg are very modern libraries which became famous only in the past 3 years. Thus, GNU/Linux distributions do not always have recent versions and full capabilities.&lt;/li&gt;
&lt;li&gt;A &lt;cite&gt;static build&lt;/cite&gt; does all the bindings to libraries at compile time, which hence removes specific versions dependencies. &lt;em&gt;(this method has many drawbacks but can help sometimes)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="the-program-svgconvert-c"&gt;
&lt;h2&gt;The program : svgconvert.c&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This program is a merge of Carl Worth's &lt;a class="reference external" href="http://cgit.freedesktop.org/~cworth/svg2pdf/"&gt;svg2pdf&lt;/a&gt; and &lt;a class="reference external" href="http://cgit.freedesktop.org/~cworth/svg2png/"&gt;svg2png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;* Copyright © 2005 Red Hat, Inc.&lt;/span&gt;
&lt;span class="cm"&gt;* Copyright © 2006 Red Hat, Inc.&lt;/span&gt;
&lt;span class="cm"&gt;* Copyright © 2007 Red Hat, Inc.&lt;/span&gt;
&lt;span class="cm"&gt;*&lt;/span&gt;
&lt;span class="cm"&gt;* Permission is hereby granted, free of charge, to any person&lt;/span&gt;
&lt;span class="cm"&gt;* obtaining a copy of this software and associated documentation&lt;/span&gt;
&lt;span class="cm"&gt;* files (the &amp;quot;Software&amp;quot;), to deal in the Software without&lt;/span&gt;
&lt;span class="cm"&gt;* restriction, including without limitation the rights to use, copy,&lt;/span&gt;
&lt;span class="cm"&gt;* modify, merge, publish, distribute, sublicense, and/or sell copies&lt;/span&gt;
&lt;span class="cm"&gt;* of the Software, and to permit persons to whom the Software is&lt;/span&gt;
&lt;span class="cm"&gt;* furnished to do so, subject to the following conditions:&lt;/span&gt;
&lt;span class="cm"&gt;*&lt;/span&gt;
&lt;span class="cm"&gt;* The above copyright notice and this permission notice shall be&lt;/span&gt;
&lt;span class="cm"&gt;* included in all copies or substantial portions of the Software.&lt;/span&gt;
&lt;span class="cm"&gt;*&lt;/span&gt;
&lt;span class="cm"&gt;* THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND,&lt;/span&gt;
&lt;span class="cm"&gt;* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&lt;/span&gt;
&lt;span class="cm"&gt;* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND&lt;/span&gt;
&lt;span class="cm"&gt;* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS&lt;/span&gt;
&lt;span class="cm"&gt;* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN&lt;/span&gt;
&lt;span class="cm"&gt;* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN&lt;/span&gt;
&lt;span class="cm"&gt;* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&lt;/span&gt;
&lt;span class="cm"&gt;* SOFTWARE.&lt;/span&gt;
&lt;span class="cm"&gt;*&lt;/span&gt;
&lt;span class="cm"&gt;* Authors: Kristian Høgsberg &amp;lt;krh@redhat.com&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt;* Carl Worth &amp;lt;cworth@redhat.com&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt;* Behdad Esfahbod &amp;lt;besfahbo@redhat.com&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt;* Mathieu Leplatre &amp;lt;contact@mathieu-leplatre.info&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;glib/gprintf.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;librsvg/rsvg.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;librsvg/rsvg-cairo.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;cairo-pdf.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define FAIL(msg) \&lt;/span&gt;
&lt;span class="cp"&gt;do { fprintf (stderr, &amp;quot;FAIL: %s\n&amp;quot;, msg); exit (-1); } while (0)&lt;/span&gt;

&lt;span class="cp"&gt;#define PIXELS_PER_POINT 1&lt;/span&gt;

&lt;span class="cp"&gt;#define PDF 0&lt;/span&gt;
&lt;span class="cp"&gt;#define PNG 1&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GError&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;RsvgHandle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;RsvgDimensionData&lt;/span&gt; &lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;output_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;cairo_surface_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;cairo_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;cairo_status_t&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;FAIL&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usage: svgconvert input_file.svg output_file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PDF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g_str_has_suffix&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g_ascii_strdown&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;g_type_init&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="n"&gt;rsvg_set_default_dpi&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;72.0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rsvg_handle_new_from_file&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;FAIL&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;rsvg_handle_get_dimensions&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo_image_surface_create&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CAIRO_FORMAT_ARGB32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;surface&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo_pdf_surface_create&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;cr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo_create&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;rsvg_handle_render_cairo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cairo_status&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;FAIL&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cairo_status_to_string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;cairo_surface_write_to_png&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;cairo_destroy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cairo_surface_destroy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="build-with-shared-librairies"&gt;
&lt;h2&gt;Build with shared librairies&lt;/h2&gt;
&lt;p&gt;You would just do :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gcc &lt;span class="sb"&gt;`&lt;/span&gt;pkg-config --cflags --libs librsvg-2.0 cairo-pdf&lt;span class="sb"&gt;`&lt;/span&gt; -o svgconvert svgconvert.c
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which creates a binary of 9.0K.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="build-with-static-librairies"&gt;
&lt;h2&gt;Build with static librairies&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First install the development versions of the packages, to make sure you have all &lt;strong&gt;/usr/lib/*.a&lt;/strong&gt; mentioned below.&lt;/li&gt;
&lt;li&gt;Use this Makefile, which creates a binary of 5.9M. It was tested on Ubuntu 8.04 which comes with Gnome 2.22, librsvg 2.22 and Cairo 1.6.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;svgconvert

&lt;span class="nv"&gt;MYCFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;pkg-config --cflags librsvg-2.0 cairo-pdf&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;LDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;pkg-config --libs librsvg-2.0 cairo-pdf freetype2 fontconfig pango pangoft2 pangocairo  cairo-ft libthai datrie libgsf-1 gnome-vfs-2.0 libcroco-0.6 libpcre pixman-1 libpng libxml-2.0&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;MYLDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; /usr/lib/libgio-2.0.a  /usr/lib/libglib-2.0.a /usr/lib/libselinux.a /usr/lib/libexpat.a /usr/lib/libfreetype.a /usr/lib/libbz2.a /usr/lib/libjpeg.a /usr/lib/libtiff.a /usr/lib/libbz2.a /usr/lib/libz.a /usr/lib/libm.a

all: &lt;span class="k"&gt;$(&lt;/span&gt;ALL&lt;span class="k"&gt;)&lt;/span&gt;

%: %.c
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$^&lt;/span&gt; -pthread &lt;span class="k"&gt;$(&lt;/span&gt;MYCFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -static &lt;span class="k"&gt;$(&lt;/span&gt;MYLDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt;

clean:
    rm -f &lt;span class="k"&gt;$(&lt;/span&gt;ALL&lt;span class="k"&gt;)&lt;/span&gt; *.o
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To check if &lt;strong&gt;pkg-config&lt;/strong&gt; knows about a specific library :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pkg-config --list-all &lt;span class="p"&gt;|&lt;/span&gt; grep vfs
gnome-vfs-sharp-2.0           GnomeVfs - GnomeVfs
gnome-vfs-2.0                 gnome-vfs - The GNOME virtual file-system libraries
gnome-vfsmm-2.6               gnome-vfsmm - C++ wrapper &lt;span class="k"&gt;for&lt;/span&gt; gnome-vfs
gnome-vfs-module-2.0          gnome-vfs-module - The GNOME virtual file-system module include info
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To check if a library has a specific symbol, use the &lt;strong&gt;nm&lt;/strong&gt; command :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nm /usr/lib/libexpat.a &lt;span class="p"&gt;|&lt;/span&gt; grep XML_SetStart
000001c0 T XML_SetStartCdataSectionHandler
&lt;span class="m"&gt;00000240&lt;/span&gt; T XML_SetStartDoctypeDeclHandler
&lt;span class="m"&gt;00000150&lt;/span&gt; T XML_SetStartElementHandler
000002a0 T XML_SetStartNamespaceDeclHandler
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;Download&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mathieu-leplatre.info/media/svgconvert-src.tar.gz"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mathieu-leplatre.info/media/svgconvert-bin.tar.gz"&gt;Binary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cairographics.org"&gt;http://cairographics.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://librsvg.sourceforge.net"&gt;http://librsvg.sourceforge.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thanks for the precious help of &lt;a class="reference external" href="http://www.cworth.org"&gt;Carl Worth&lt;/a&gt; on &lt;cite&gt;#cairo&lt;/cite&gt; at irc.freenode.net, Zugzwang and nvteighen on &lt;a class="reference external" href="http://ubuntuforums.org"&gt;http://ubuntuforums.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Leplatre</dc:creator><pubDate>Tue, 01 Jul 2008 11:25:00 +0200</pubDate><guid>tag:blog.mathieu-leplatre.info,2008-07-01:static-build-of-cairo-and-librsvg.html</guid><category>cairo</category><category>svg</category><category>C</category></item></channel></rss>